# All localization happens in hjson files. These files contains the display names of content and other text values that will differ between languages.
# .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Localization files will be automatically updated with new content. After building and reloading the mod, new entries will appear in hjson files and can then be filled in.
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Comments and non-autogenerated keys will be preserved and automatically mirrored to the non-English hjson files
# For more info on localization, see https://github.com/tModLoader/tModLoader/wiki/Localization

Mods: {
	ExampleMod: {
		// Common.PaperAirplane: Paper Airplane

		CommonItemTooltip: {
			// IncreasesMaxExampleResourceBy: Increases maximum example resource by {0}
			# It is recommended to make some common tooltips for custom damage classes
			# You can use them by referencing {$CommonItemTooltip.PercentIncreasedExampleDamage}
			# Other mods can use them by referencing {$ExampleMod.CommonItemTooltip.PercentIncreasedExampleDamage}
			// PercentIncreasedExampleDamage: "{0}% increased example damage"
			// PercentIncreasedExampleCritChance: "{0}% increased example critical strike chance"
			// PercentIncreasedExampleDamageCritChance: "{0}% increased example damage and critical strike chance"
			// PercentIncreasedExampleSpeed: "{0}% increased example attack speed"
		}

		// Currencies.ExampleCustomCurrency: example items
		// DamageClasses.ExampleDamageClass.DisplayName: example damage
		Keybinds.RandomBuff.DisplayName: 随机增益

		NPCs: {
			// ExampleCustomAISlimeNPC.DisplayName: Flutter Slime
			# Here we see that spaces in translation keys are not allowed. Any space will be replaced with an underscore.
			// ExampleTravellingMerchant.DisplayName: Example Traveler
			// ExampleBoneMerchant.DisplayName: Example Bone Merchant
			// ExampleDrawBehindNPC.DisplayName: Example Draw Behind NPC

			ExamplePerson: {
				// DisplayName: Example Person

				# This is what displays during all of an NPC's happiness levels.
				TownNPCMood: {
					// Content: I feel pretty fine right now.
					// NoHome: I would very much like a house, all the colorful monsters scare me.
					// FarFromHome: Could you please get me back to my house?
					// LoveSpace: I love how there is so much space here to code tModLoader mods!
					// DislikeCrowded: There are too many people around, it makes it hard for me to focus on mod making.
					// HateCrowded: I can't test my mod with so many people around!
					// LoveBiome: I love {BiomeName}.
					// LikeBiome: "{BiomeName} is a very nice place to test mods in."
					// DislikeBiome: It's way too cold in {BiomeName}, I'm freezing!
					// HateBiome: It's kind of hard to mod while being attacked by monsters in {BiomeName}.
					// LoveNPC: Do you think {NPCName} notices me?
					// LikeNPC: I can respect {NPCName} as a fellow guide and educator!
					// DislikeNPC: '''"{NPCName} keeps rambling on about "paid mods"... Wish I could convince him how terrible of an idea that is."'''
					// HateNPC: I hate all the loud noises caused by {NPCName} and his explosives! I just want peace and quiet.
					// LikeNPC_Princess: "{NPCName} is a princess? That is so cool!"
					// Princess_LovesNPC: "{NPCName} is so square. I love that about them!"
				}

				# This key is generated and used when the "Census" mod is enabled: It allows the user to see the spawn condition of this town NPC in the Housing UI
				// Census.SpawnCondition: Have either an {$Items.ExampleItem.DisplayName} [i:ExampleMod/ExampleItem] or an {$Items.ExampleBlock.DisplayName} [i:ExampleMod/ExampleBlock] in your inventory
			}

			// ExampleTravelingMerchant.DisplayName: Example Traveling Merchant
			// ExampleWormBody.DisplayName: Example Worm
			// ExampleWormHead.DisplayName: Example Worm
			// ExampleWormTail.DisplayName: Example Worm
			// ExampleZombieThief.DisplayName: Example Zombie Thief

			MinionBossBody: {
				// DisplayName: Minion Boss
				# This is part of ModIntegrationsSystem.cs: Information for the player so he knows how to encounter the boss
				// BossChecklistIntegration.SpawnInfo: Use a [i:ExampleMod/MinionBossSummonItem]
			}

			// MinionBossMinion.DisplayName: Minion Boss Minion
			// PartyZombie.DisplayName: Party Zombie
			// ExampleCritterNPC.DisplayName: Lava Frog
		}

		Tiles: {
			// ExamplePylonTile.MapEntry: "{$Mods.ExampleMod.Items.ExamplePylonItem.DisplayName}"
			// ExamplePylonTileAdvanced.MapEntry: "{$Mods.ExampleMod.Items.ExamplePylonItemAdvanced.DisplayName}"
			// ExampleAnimatedTile.MapEntry: Red Firefly in a Bottle
			// ExampleFishingCrate.MapEntry: Crate
			// ExampleHerb.MapEntry: Example Herb
			// ExampleMusicBoxTile.MapEntry: Music Box
			// ExampleOre.MapEntry: ExampleOre

			ExampleChest: {
				// MapEntry0: Example Chest
				// MapEntry1: Locked Example Chest
			}

			// ExampleDresser.MapEntry: Example Dresser
		}

		Items: {
			ExampleStaff: {
				// DisplayName: Example Staff
				// Tooltip: This is a modded magic staff weapon
			}

			ExampleLastPrism: {
				// DisplayName: Example Last Prism
				/* Tooltip:
					'''
					A slightly different laser-firing Prism
					Ignores NPC immunity frames and fires 10 beams at once instead of 6
					''' */
			}

			ExamplePetItem: {
				# This example omits "Mods.ExampleMod." from the substitution key and still works. The game will test variations of the translation key to check for other keys in the scope.
				// DisplayName: "{$Common.PaperAirplane}"
				/* Tooltip:
					'''
					Summons a {$Mods.ExampleMod.Common.PaperAirplane} to follow aimlessly behind you
					Second Line!
					''' */
			}

			ExampleSpecificAmmoGun: {
				// DisplayName: Example Rifle
				/* Tooltip:
					'''
					Does not accept cursed bullets as ammunition
					Fires three rounds in rapid succession
					Each shot consumes ammunition with a different chance
					The first shot has a {0}% chance to not consume bullets
					The second shot has a {1}% chance to not consume bullets
					The last shot has a {2}% chance to not consume bullets
					Shots that consume ammunition have their damage boosted by {3}%
					''' */
			}

			ExamplePylonItem: {
				// DisplayName: Example Pylon
				/* Tooltip:
					'''
					Must be within the Example Surface or Underground Biome in order to function.
					Has no NPC requirements!
					''' */
			}

			ExamplePylonItemAdvanced: {
				// DisplayName: Unstable Pylon
				// Tooltip: Will randomly turn on and off, but otherwise can be teleported to without NPCs and in any biome!
			}

			ExampleBeard: {
				// DisplayName: Example Beard
				// Tooltip: This is a modded beard which matches your hair color.
			}

			ExampleImmunityAccessory: {
				// DisplayName: Example Immunity Accessory
				// Tooltip: This is a modded cross necklace that increases your immunity time by 1 second.
			}

			ExampleResourceAccessory: {
				// DisplayName: Example Resource Accessory
				/* Tooltip:
					'''

					Drastically increases example resource regen rate
					{$CommonItemTooltip.IncreasesMaxExampleResourceBy}
					''' */
			}

			ExampleInfoAccessory: {
				// DisplayName: Example Info Accessory
				// Tooltip: Displays how many minions you have summoned
			}

			ExampleShield: {
				// DisplayName: Example Shield
				// Tooltip: This is a modded shield.
			}

			ExampleStatBonusAccessory: {
				// DisplayName: Example Stat Bonus Accessory
				/* Tooltip:
					'''
					{$CommonItemTooltip.PercentIncreasedDamage}, this is an additive multiplier with other damage bonuses
					{1}% increased multiplicative damage multiplier; this is multiplicative with other damage bonuses
					Increases base damage for all weapons by {2}
					Increases total damage for all weapons by {3}
					{$CommonItemTooltip.PercentIncreasedMeleeCritChance@4}
					Increases ranged firing speed by {5}%
					{6} magic armor penetration
					{7}% increased example knockback
					{8}% increased crit damage
					''' */
			}

			ExampleWings: {
				// DisplayName: Example Wings
				// Tooltip: This is a modded wing.
			}

			WaspNest: {
				// DisplayName: Wasp Nest
				# Here we use a vanilla language key to copy the tooltip from HiveBackpack
				// Tooltip: "{$ItemTooltip.HiveBackpack}"
			}

			ExampleBullet: {
				// DisplayName: Example Bullet
				// Tooltip: This is a modded bullet ammo.
			}

			ExampleCustomAmmo: {
				// DisplayName: Example Custom Ammo
				// Tooltip: Chases enemies through walls
			}

			ExampleSolutionItem: {
				// DisplayName: Monochromatic Solution
				/* Tooltip:
					'''
					Used by the Clentaminator
					Spreads the example
					''' */
			}

			ExampleBreastplate: {
				// DisplayName: Example Breastplate
				/* Tooltip:
					'''
					This is a modded body armor.
					Immunity to 'On Fire!'
					{$CommonItemTooltip.IncreasesMaxManaBy}
					{$CommonItemTooltip.IncreasesMaxMinionsBy@1}
					''' */
			}

			ExampleCostume: {
				// DisplayName: Charm of Example
				/* Tooltip:
					'''
					Turns the holder into Blocky near town NPC
					Blocky's colors will invert in water
					''' */
			}

			ExampleHelmet: {
				// DisplayName: Example Helmet
				// Tooltip: This is a modded helmet.
				// SetBonus: Increases dealt damage by {0}%
			}

			ExampleHood: {
				// DisplayName: Example Hood
				// Tooltip: This is a modded hood.
				// SetBonus: "{$CommonItemTooltip.PercentReducedManaCost}"
			}

			ExampleLeggings: {
				// DisplayName: Example Leggings
				/* Tooltip:
					'''
					This is a modded leg armor.
					{$CommonItemTooltip.PercentIncreasedMovementSpeed}
					''' */
			}

			ExampleRobe: {
				// DisplayName: Example Robe
				// Tooltip: ""
			}

			ExampleTallHelmet: {
				// DisplayName: Example Tall Helmet
				// Tooltip: This is a tall modded helmet.
			}

			MinionBossMask: {
				// DisplayName: Minion Boss Mask
				// Tooltip: ""
			}

			ExampleBuffPotion: {
				// DisplayName: Example Buff Potion
				// Tooltip: Gives a light defense buff.
			}

			ExampleCanStackItem: {
				// DisplayName: Example CanStack Item: Gift Bag
				# References a language key that says "Right Click To Open" in the language of the game
				// Tooltip: "{$CommonItemTooltip.RightClickToOpen}"
			}

			ExampleCratePotion: {
				// DisplayName: Example Crate Potion
				/* Tooltip:
					'''
					Increases chance to get a crate
					Stacks with {$ItemName.CratePotion}
					''' */
			}

			ExampleFishingCrate: {
				// DisplayName: Example Crate
				// Tooltip: "{$CommonItemTooltip.RightClickToOpen}"
			}

			ExampleFoodItem: {
				// DisplayName: Example Pie
				# Using references to existing language keys allow the tooltip to be easily translated
				# Listed below are some keys that you may find useful for making a food item
				# MinorStats, MediumStats, MajorStats, TipsyStats
				# These correspond to the WellFed, WellFed2, WellFed3, and Tipsy buffs respectively.
				# Make sure to match the tooltip with the buff you assign in SetDefaults
				/* Tooltip:
					'''
					{$CommonItemTooltip.MediumStats}
					'Who knew examples could taste good'
					''' */
			}

			ExampleHealingPotion: {
				// DisplayName: Example Healing Potion
				// Tooltip: ""
				// RestoreLifeText: "{0} ({1} when quick healing)"
			}

			ExampleLifeFruit: {
				// DisplayName: Example Life Fruit
				/* Tooltip:
					'''
					{$CommonItemTooltip.PermanentlyIncreasesMaxLifeBy}
					Up to {1} can be used
					''' */
			}

			ExampleManaCrystal: {
				// DisplayName: Example Mana Crystal
				/* Tooltip:
					'''
					{$CommonItemTooltip.PermanentlyIncreasesMaxManaBy}
					Up to {1} can be used
					''' */
			}

			ExampleMultiUseItem: {
				// DisplayName: Example Multi Use Item
				// Tooltip: Can be used {0} times
			}

			MinionBossBag: {
				// DisplayName: Treasure Bag ({$Mods.ExampleMod.NPCs.MinionBossBody.DisplayName})
				// Tooltip: "{$CommonItemTooltip.RightClickToOpen}"
			}

			MinionBossSummonItem: {
				// DisplayName: Minion Boss Summon Item
				// Tooltip: Summons Minion Boss
			}

			PlanteraItem: {
				// DisplayName: Plantera
				// Tooltip: The wrath of the jungle
			}

			ExampleDataItem: {
				// DisplayName: Hot Potato
				// Tooltip: Something magical happens when the timer runs out...
			}

			ExampleDye: {
				// DisplayName: Example Dye
				// Tooltip: ""
			}

			ExampleGolfBall: {
				// DisplayName: Example Golf Ball
				// Tooltip: ""
			}

			ExampleHairDye: {
				// DisplayName: Example Hair Dye
				// Tooltip: ""
			}

			ExampleInstancedItem: {
				// DisplayName: Example Instanced Item
				// Tooltip: ""
			}

			ExampleItem: {
				// DisplayName: Example Item
				// Tooltip: This is a modded Item.
			}

			ExampleMountItem: {
				// DisplayName: ExampleMount Car key
				// Tooltip: This summons a modded mount.
			}

			ExampleOnBuyItem: {
				// DisplayName: Volatile Explosive Device
				// Tooltip: Has a 50% chance to kill the player whenever bought from a shop
				// DeathMessage: "{0} tried and failed to handle a very volatile explosive device."
			}

			ExamplePaperAirplane: {
				// DisplayName: Example Paper Airplane
				// Tooltip: This is a modded paper airplane.
			}

			ExampleQuestFish: {
				// DisplayName: Upside-down Fish
				// Tooltip: ""
			}

			ExampleResearchPresent: {
				// DisplayName: Example Present
				// Tooltip: Contains a random accessory! Try researching it for infinite of it!
			}

			ExampleSoul: {
				// DisplayName: Soul of Exampleness
				// Tooltip: "'The essence of example creatures'"
			}

			ExampleStackableDurabilityItem: {
				// DisplayName: Example Stackable Durability Item
				// Tooltip: ""
			}

			ExampleTooltipsItem: {
				// DisplayName: Example Tooltips Item
				# This tooltip has color and icons by using chat tags. See here for help on using Tags: https://terraria.wiki.gg/wiki/Chat#Tags
				/* Tooltip:
					'''
					How are you feeling today?
					[c/FF0000:Colors ][c/00FF00:are ][c/0000FF:fun ]and so are items: [i:5236][i:5230][i/s123:1508]
					''' */
			}

			ExampleBar: {
				// DisplayName: Example Bar
				// Tooltip: ""
			}

			ExampleBlock: {
				// DisplayName: Example Block
				// Tooltip: This is a modded tile.
			}

			ExampleHerbSeeds: {
				// DisplayName: Example Herb Seeds
				// Tooltip: ""
			}

			// ExampleLamp.DisplayName: Example Lamp

			ExampleMusicBox: {
				// DisplayName: Music Box (Marble Gallery)
				// Tooltip: ""
			}

			ExampleOre: {
				// DisplayName: Example Ore
				// Tooltip: ""
			}

			ExampleSlopedTile: {
				// DisplayName: Example Sloped Tile
				// Tooltip: Example tile that can be sloped but is not solid
			}

			ExampleTorch: {
				// DisplayName: Example Torch
				// Tooltip: This is a modded torch.
			}

			ExampleWall: {
				// DisplayName: Example Wall
				// Tooltip: This is a modded wall.
			}

			ExampleWallAdvanced: {
				// DisplayName: Example Wall Advanced
				// Tooltip: This is an advanced modded wall.
			}

			ExampleBed: {
				// DisplayName: Example Bed
				// Tooltip: This is a modded bed.
			}

			ExampleChair: {
				// DisplayName: Example Chair
				// Tooltip: This is a modded chair.
			}

			ExampleChest: {
				// DisplayName: Example Chest
				// Tooltip: This is a modded chest.
			}

			ExampleChestKey: {
				// DisplayName: Example Chest Key
				// Tooltip: ""
			}

			ExampleClock: {
				// DisplayName: Example Clock
				// Tooltip: This is a modded clock.
			}

			ExampleDoor: {
				// DisplayName: Example Door
				// Tooltip: This is a modded door.
			}

			ExamplePlatform: {
				// DisplayName: Example Platform
				// Tooltip: This is a modded platform.
			}

			ExampleSink: {
				// DisplayName: Example Sink
				/* Tooltip:
					'''
					Counts as a water, lava, and honey source
					'A shame there's no example liquids (yet)'
					''' */
			}

			ExampleTable: {
				// DisplayName: Example Table
				// Tooltip: This is a modded table.
			}

			ExampleToilet: {
				// DisplayName: Example Toilet
				// Tooltip: This is a modded toilet.
			}

			ExampleWorkbench: {
				// DisplayName: Example Work Bench
				// Tooltip: This is a modded workbench.
			}

			MinionBossRelic: {
				// DisplayName: Minion Boss Relic
				// Tooltip: ""
			}

			MinionBossTrophy: {
				// DisplayName: Minion Boss Trophy
				// Tooltip: ""
			}

			ExampleBugNet: {
				// DisplayName: Example Bug Net
				/* Tooltip:
					'''
					Used to catch critters
					Has a {0}% chance to successfully catch lava critters
					This increases to {1}% if the Warmth Potion buff is active
					Has a {2}% chance to duplicate caught critters
					''' */
			}

			ExampleFishingRod: {
				// DisplayName: Example Fishing Rod
				/* Tooltip:
					'''
					Fires multiple lines at once. Can fish in lava.
					The fishing line never snaps.
					''' */
			}

			ExampleHamaxe: {
				// DisplayName: Example Hamaxe
				// Tooltip: This is a modded hamaxe.
			}

			ExampleHookItem: {
				// DisplayName: Example Hook
				// Tooltip: Can grapple onto trees
			}

			ExampleMagicMirror: {
				// DisplayName: Example Magic Mirror
				// Tooltip: ""
			}

			ExamplePickaxe: {
				// DisplayName: Example Pickaxe
				// Tooltip: This is a modded pickaxe.
			}

			UseStyleShowcase: {
				// DisplayName: Use Style Showcase
				# The special text "<right>" will change depending on if the user is using keyboard or gamepad to show the alternate click button
				/* Tooltip:
					'''
					This item showcases each UseStyle.
					<right> to cycle through UseStyles.
					''' */
			}

			ExampleAdvancedFlail: {
				// DisplayName: Example Advanced Flail
				// Tooltip: This is a modded flail with custom behavior.
			}

			ExampleCloneWeapon: {
				// DisplayName: Meowmere V2
				// Tooltip: Similar to {$ItemName.Meowmere} [i:Meowmere]
			}

			ExampleCustomAmmoGun: {
				// DisplayName: Example Custom Ammo Gun
				// Tooltip: Uses ExampleCustomAmmo as ammo and shooting HomingProjectiles
			}

			ExampleCustomDamageWeapon: {
				// DisplayName: Example Custom Damage Weapon
				// Tooltip: ""
			}

			ExampleCustomResourceWeapon: {
				// DisplayName: Example Custom Resource Weapon
				// Tooltip: ""
				// UsesXExampleResource: Uses {0} example resource
			}

			ExampleFlail: {
				// DisplayName: Example Flail
				// Tooltip: This is a modded flail with normal behavior.
			}

			ExampleGun: {
				// DisplayName: Example Gun
				// Tooltip: This is a modded gun.
			}

			ExampleJoustingLance: {
				// DisplayName: Example Jousting Lance
				# The substitution "ItemTooltip.HallowJoustingLance" will automatically be translated to "Build momentum to increase attack power".
				/* Tooltip:
					'''
					{$ItemTooltip.HallowJoustingLance}
					This is a modded jousting lance.
					''' */
			}

			ExampleMagicWeapon: {
				// DisplayName: Example Magic Weapon
				// Tooltip: This is an example magic weapon
			}

			ExampleMinigun: {
				// DisplayName: Example Minigun
				// Tooltip: This is a modded minigun.
			}

			ExampleModifiedProjectilesItem: {
				// DisplayName: Example Modified Projectiles Item
				// Tooltip: ""
			}

			ExampleShootingSword: {
				// DisplayName: Example Shooting Sword
				// Tooltip: This is a modded sword that shoots Star Wrath-like projectiles.
			}

			ExampleShortsword: {
				// DisplayName: Example Shortsword
				// Tooltip: ""
			}

			ExampleShotgun: {
				// DisplayName: Example Shotgun
				// Tooltip: This is a modded shotgun.
			}

			ExampleSpear: {
				// DisplayName: Example Spear
				// Tooltip: This is a modded spear
			}

			ExampleSword: {
				// DisplayName: Example Sword
				// Tooltip: This is a modded sword.
			}

			ExampleWhip: {
				// DisplayName: Example Whip
				/* Tooltip:
					'''
					{$CommonItemTooltip.SummonTagDamage}
					{$CommonItemTooltip.Whips}
					Hold for longer reach
					''' */
			}

			ExampleWhipAdvanced: {
				// DisplayName: Example Whip Advanced
				/* Tooltip:
					'''
					{0}% summon tag damage to the next minion or sentry hit
					{$CommonItemTooltip.Whips}
					Hold for longer reach
					''' */
			}

			ExampleYoyo: {
				// DisplayName: Example Yoyo
				// Tooltip: This is a modded yoyo with normal behavior. It won't receive bad prefixes.
			}

			ExampleLightPetItem: {
				// DisplayName: Annoying Light
				// Tooltip: Summons an annoying light
			}

			MinionBossPetItem: {
				// DisplayName: Minion Boss Pet
				// Tooltip: Summons a miniature Minion Boss to follow you
			}

			ExampleAdvancedAnimatedProjectileItem: {
				// DisplayName: Example Advanced Animated Projectile Item
				// Tooltip: ""
			}

			ExamplePiercingProjectileItem: {
				// DisplayName: Example Piercing Projectile Item
				// Tooltip: ""
			}

			ExampleSimpleMinionItem: {
				// DisplayName: Example Minion Item
				// Tooltip: Summons an example minion to fight for you
			}

			ExampleAnimatedGlowmaskTileItem: {
				// DisplayName: Example Animated Glowmask Tile Item
				// Tooltip: ""
			}

			ExampleAnimatedTileItem: {
				// DisplayName: Red Firefly in a Bottle
				// Tooltip: ""
			}

			# These 2 examples show using substitutions. Here we use a vanilla Key and a key from this Mod to generate the text: "Nearby players get a bonus against: Octopus".
			# Note that the translation files for other languages don't need to define ItemTooltip.OctopusBanner, they would only need to define NPCName.Octopus, as seen in zh-Hans.hjson file.
			// OctopusBanner.Tooltip: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Octopus}"
			// SarcophagusBanner.Tooltip: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Sarcophagus}"

			HoldStyleShowcase: {
				// DisplayName: Hold Style Showcase
				/* Tooltip:
					'''
					This item showcases each HoldStyle.
					<right> to cycle through HoldStyles.
					''' */
			}

			ShimmerShowcaseCrimsonCorruption: {
				// DisplayName: Shimmer Showcase Crimson Corruption
				// Tooltip: ""
			}

			ShimmerShowcaseCustomShimmerResult: {
				// DisplayName: Shimmer Showcase Custom Shimmer Result
				// Tooltip: ""
			}

			ShimmerShowcaseConditions: {
				// Tooltip: ""
				// DisplayName: Shimmer Showcase Conditions
			}

			ExampleCustomSwingSword: {
				// DisplayName: Example Custom Swing Sword
				/* Tooltip:
					'''
					This is a sword with a custom swinging animation made with projectiles
					Use more than once to cycle through attacks
					''' */
			}

			ExampleDresser: {
				// DisplayName: Example Dresser
				// Tooltip: This is a modded dresser.
			}

			ExampleTrapIchorBullet: {
				// DisplayName: Example Trap - {$ItemName.IchorBullet}
				// Tooltip: ""
			}

			ExampleTrapChlorophyteBullet: {
				// DisplayName: Example Trap - {$ItemName.ChlorophyteBullet}
				// Tooltip: ""
			}

			HitModifiersShowcase: {
				// DisplayName: Hit Modifiers Showcase
				// Tooltip: ""
			}

			AbsorbTeamDamageAccessory: {
				// DisplayName: Absorb Team Damage Accessory
				// Tooltip: Absorbs {0}% of damage done to players on your team when above {1}% life
			}

			ExampleDrill: {
				// DisplayName: Example Drill
				// Tooltip: ""
			}

			ExampleExplosive: {
				// DisplayName: Example Explosive
				// Tooltip: ""
			}

			ExampleJavelin: {
				// DisplayName: Example Javelin
				// Tooltip: ""
			}

			ActiveSoundShowcase: {
				// DisplayName: Active Sound Showcase
				// Tooltip: ""
			}

			ExampleMinecart: {
				// DisplayName: Example Minecart
				// Tooltip: ""
			}

			ExampleGravityDebuffBullet: {
				// DisplayName: Example Gravity Debuff Bullet
				// Tooltip: ""
			}

			ExampleWaterTorch: {
				// DisplayName: Example Water Torch
				# "Can be placed in water"
				// Tooltip: "{$ItemTooltip.IchorTorch}"
			}

			ExampleCampfire: {
				// DisplayName: Example Campfire
				// Tooltip: "{$ItemTooltip.Campfire}"
			}

			ExampleExtraJumpAccessory: {
				// DisplayName: Example Extra Jump Accessory
				// Tooltip: Allows the user to perform an example mid-air extra jump
			}

			ExampleMultiExtraJumpAccessory: {
				// DisplayName: Example Multiple-Use Extra Jump Accessory
				/* Tooltip:
					'''
					Allows the user to perform an example mid-air extra jump
					This accessory has <JUMPS> jumps remaining
					''' */
			}

			ExampleSwingingEnergySword: {
				// DisplayName: Example Swinging Energy Sword
				// Tooltip: ""
			}

			ExampleLivingFire: {
				// DisplayName: Example Living Fire Block
				// Tooltip: ""
			}

			ExampleCritterItem: {
				// DisplayName: Lava Frog
				// Tooltip: A spicy boi
			}

			ExampleCritterCageItem: {
				// DisplayName: Lava Frog Cage
				// Tooltip: A sad spicy boi
			}

			ExampleStatue: {
				// DisplayName: Example Statue
				// Tooltip: The power of examplium flows in this inanimate fish
			}

			ExampleSandBlock: {
				// DisplayName: Example Sand Block
				// Tooltip: This is a modded sand block
			}
		}

		# Projectile display names mainly show in chat when a player dies from it.
		Projectiles: {
			// ExamplePetProjectile.DisplayName: "{$Mods.ExampleMod.Common.PaperAirplane}"
			// ExamplePet.DisplayName: Mods.ExampleMod.ProjectileName.ExamplePet
			// ExampleSolutionProjectile.DisplayName: Example Spray
			// ExampleHookProjectile.DisplayName: "{$ProjectileName.GemHookAmethyst}"
			// ExampleLightPetProjectile.DisplayName: Annoying Light
			// MinionBossPetProjectile.DisplayName: Minion Boss Pet
			// ExampleAdvancedAnimatedProjectile.DisplayName: Example Advanced Animated Projectile
			// ExampleAdvancedFlailProjectile.DisplayName: Example Advanced Flail
			// ExampleBobber.DisplayName: Example Bobber
			// ExampleBullet.DisplayName: Example Bullet
			// ExampleCloneProjectile.DisplayName: Meowmere V2
			// ExampleFlailProjectile.DisplayName: Example Flail
			// ExampleGolfBallProjectile.DisplayName: Example Golf Ball
			// ExampleHomingProjectile.DisplayName: Example Homing Projectile
			// ExampleInstancedProjectile.DisplayName: Example Instanced Projectile
			// ExampleJoustingLanceProjectile.DisplayName: Example Jousting Lance
			// ExamplePaperAirplaneProjectile.DisplayName: Example Paper Airplane Projectile
			// ExamplePiercingProjectile.DisplayName: Example Piercing Projectile
			// ExampleShortswordProjectile.DisplayName: Example Shortsword
			// ExampleSpearProjectile.DisplayName: Spear
			// ExampleWhipProjectile.DisplayName: Example Whip Projectile
			// ExampleWhipProjectileAdvanced.DisplayName: Example Whip Projectile Advanced
			// ExampleYoyoProjectile.DisplayName: Example Yoyo Projectile
			// MinionBossEye.DisplayName: Minion Boss Eye
			// ExampleSimpleMinion.DisplayName: Example Minion
			// SparklingBall.DisplayName: Sparkling Ball
			// ExampleCustomSwingProjectile.DisplayName: Example Custom Swing Projectile
			// ExampleDrillProjectile.DisplayName: Example Drill Projectile
			// ExampleExplosive.DisplayName: Example Explosive
			// ExampleJavelinProjectile.DisplayName: Example Javelin Projectile
			// ActiveSoundShowcaseProjectile.DisplayName: Active Sound Showcase Projectile
			// ExampleGravityDebuffBullet.DisplayName: Example Gravity Debuff Bullet
			// ExampleSwingingEnergySwordProjectile.DisplayName: Example Swinging Energy Sword Projectile
			// ExampleLastPrismHoldout.DisplayName: Example Last Prism
			// ExampleLastPrismBeam.DisplayName: Example Prism Beam
			// ExampleSandBallFallingProjectile.DisplayName: Example Sand Ball
			// ExampleSandBallGunProjectile.DisplayName: "{$ExampleSandBallFallingProjectile.DisplayName}"
		}

		Buffs: {
			ExamplePetBuff: {
				// DisplayName: "{$Mods.ExampleMod.Common.PaperAirplane}"
				// Description: '''"Let this pet be an example to you!"'''
			}

			AnimatedBuff: {
				// DisplayName: Animated Buff
				// Description: Animates and increases all damage by {0}%.
			}

			Blocky: {
				// DisplayName: Blocky
				// Description: Jumping power is increased
			}

			ExampleCrateBuff: {
				// DisplayName: Example Crate
				// Description: Greater chance of fishing up a crate
			}

			ExampleDefenseBuff: {
				// DisplayName: Defensive Buff
				// Description: "{$CommonItemTooltip.IncreasesDefenseBy}"
			}

			ExampleDefenseDebuff: {
				// DisplayName: Defensive Debuff
				// Description: "{$BuffDescription.Ichor}"
			}

			ExampleLifeRegenDebuff: {
				// DisplayName: Fire debuff
				// Description: Losing life
			}

			ExampleMountBuff: {
				// DisplayName: ExampleMount
				// Description: Leather seats, 4 cup holders
			}

			ExampleWhipDebuff: {
				// DisplayName: Example Whip Debuff
				// Description: ""
			}

			ExampleLightPetBuff: {
				// DisplayName: Annoying Light
				// Description: Ugh, soooo annoying
			}

			MinionBossPetBuff: {
				// DisplayName: Minion Boss Pet
				// Description: A miniature Minion Boss is following you
			}

			ExampleSimpleMinionBuff: {
				// DisplayName: Example Minion
				// Description: The example minion will fight for you
			}

			ExampleDodgeBuff: {
				// DisplayName: Example Dodge Buff
				// Description: You will dodge the next attack
			}

			ExampleGravityDebuff: {
				// DisplayName: Example Gravity Debuff
				// Description: Gravity has gone wild.
			}

			AbsorbTeamDamageBuff: {
				// DisplayName: Absorb Team Damage Buff
				// Description: "{0}% of damage taken will be redirected to another player"
			}

			ExampleWhipAdvancedDebuff: {
				// DisplayName: Example Whip Advanced Debuff
				// Description: ""
			}

			ExampleJavelinDebuff: {
				// DisplayName: Example Javelin Debuff
				// Description: Losing life
			}
		}

		// RecipeConditions.Night: At Low Health
		// ResourceDisplaySets.ExampleReversedBarsDisplay.DisplayName: Swapped Bars

		Bestiary: {
			// ExamplePerson: Built of blocks with arms of steel. Pumps iron day and night.
			// ExampleBoneMerchant: Built with bone blocks and arms of steel. Throws bones day and night.
		}

		Biomes: {
			ExampleSurfaceBiome: {
				// DisplayName: Example Surface
				// TownNPCDialogueName: the Example Surface Biome
			}

			ExampleUndergroundBiome: {
				// DisplayName: Example Underground
				// TownNPCDialogueName: the Example Underground Biome
			}
		}

		Prefixes: {
			ExamplePrefix: {
				// DisplayName: Example Prefix
				// AdditionalTooltip: More Power
			}

			ExampleDerivedPrefix: {
				// DisplayName: Example Derived Prefix
				// AdditionalTooltip: Even More Power
			}

			# This special format will force a + or - sign to display depending on the value: -3, +0, +3. (https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings?redirectedfrom=MSDN#SectionSeparator)
			// PowerTooltip: "{0:+0;-#} Power"
		}

		MessageInfo: {
			// UnstablePylonIsOff: That Unstable Pylon is currently inactive.
			// NearbyUnstablePylonIsOff: The nearby Unstable Pylon is currently inactive.
		}

		#This is used to display the NPC's dialogues.
		Dialogue: {
			ExamplePerson: {
				// PartyGirlDialogue: Can you please tell {0} to stop decorating my house with colors?
				// StandardDialogue1: Sometimes I feel like I'm different from everyone else here.
				// StandardDialogue2: What's your favorite color? My favorite colors are white and black.
				// StandardDialogue3: What? I don't have any arms or legs? Oh, don't be ridiculous!
				// StandardDialogue4: Hey, if you find a [i:HiveBackpack], I can upgrade it for you.
				// CommonDialogue: This message has a weight of 5, meaning it appears 5 times more often.
				// RareDialogue: This message has a weight of 0.1, meaning it appears 10 times as rare.
				// TalkALot: I'm getting tired of talking to you. I have to go.
			}

			ExampleBoneMerchant: {
				// StandardDialogue1: It's relaxing down here in the underground.
				// StandardDialogue2: What am I doing down here you may ask? I'm not sure, but leave me be!
				// StandardDialogue3: Huh? What wares do I have? I have no idea! How about you ask?
			}

			ExampleTravelingMerchant: {
				// PartyGirlDialogue: Can you please tell {0} to stop decorating my cousin's house with colors?
				// StandardDialogue1: Sometimes my cousin feels like they're different from everyone else here.
				// StandardDialogue2: What's your favorite color? My cousin's favorite colors are white and black.
				// StandardDialogue3: I'm a traveling merchant, and I sell things.
				// HiveBackpackDialogue: Hey, if you find a [i:HiveBackpack], my cousin can upgrade it for you.
			}
		}

		GameTips: {
			// ExampleTip0: Woah! Example Tip!
			// ExampleTip1: This tip was added by Example Mod!
			// ExampleTip2: This is yet another tip added by Example Mod!
			// DisabledExampleTip: This tip will be added but then disabled by Example Mod.
		}

		// InfoDisplays.ExampleInfoDisplay.DisplayName: Minion Count
		// ExampleGlobalBuff.RemainingTime: "[ExampleGlobalBuff] Remaining time: {0}"

		Conditions: {
			// LowHealth: When the player is below half HP
			// PlayerHasLifeforceBuff: When the player has the Lifeforce buff
			// InExampleBiome: In the Example biome
			// NotSellingExampleItem: When not selling Example Item
			// DownedMinionBoss: After defeating {$NPCs.MinionBossBody.DisplayName}
		}

		DropConditions: {
			// ExampleSoul: Drops in the Example Underground biome in hardmode
			// JourneyMode: Drops in Journey Mode
			// Example: Drops during daytime
		}

		UI: {
			// ExampleResource: Example Resource: {0} / {1}
			// InGameNotificationTitle: Welcome to the world, you are using Example Mod!
		}

		// WorldGen.ExampleOrePassMessage: Example Mod Ores

		BuilderToggles: {
			ExampleBuilderToggleDimmedLight: {
				// OnText: Example On
				// OffText: Example Off
			}

			FreeBaitBuilderToggle.NameText: 免费鱼饵：{0}
		}

		# This is the command names for mod emotes
		# It is suggested to use a prefix like ex- for all emotes of your mod to avoid name collisions
		# If there is a collision, one will just override the other
		Emotes: {
			// ExampleBiomeEmote.Command: exbiome
			// ExampleBoneMerchantEmote.Command: exbonemerchant
			// ExampleItemEmote.Command: exitem
			// ExamplePersonEmote.Command: experson
			// ExamplePickaxeEmote.Command: expickaxe
			// ExampleTravellingMerchantEmote.Command: extravelingmerchant
			// MinionBossEmote.Command: exminionboss
		}

		// NotPresentDuringWorldGenMessage: ExampleMod was not used to generate this world, your experience with the content of ExampleMod will be degraded
	}
}

# Mods can also override existing translation keys, but these types of changes are better suited to Resource Packs.
// UI.PlayerIsNotCreativeAndWorldIsCreative: Only Journey characters may enter a Journey world, silly.
