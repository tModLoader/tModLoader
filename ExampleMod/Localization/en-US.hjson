# You may find this .hjson file approach to translations easier for your mod.
# .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Each translation entry in .hjson files contains a key and a value. The key is determined following the rules of JSON [https://www.w3schools.com/js/js_json_syntax.asp]
# The Key automatically inherits "Mods.ModNameHere.", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.
# The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix

Mods: {
	ExampleMod: {
		Config: {
			ItemHeader: Items
			
			ExampleWingsToggle: {
				Label: ExampleWings Toggle
				Tooltip: Enables or disables the ExampleWings item
			}
		}
		
		Common: {
			PaperAirplane: Paper Airplane
			LocalizedLabel: This Label is from the localization files: {$Mods.ExampleMod.Common.PaperAirplane}
			LocalizedTooltip: This tooltip is from the localization files.
			LocalizedHeader: Headers can help organize
		}
		
		Currencies: {
			ExampleCustomCurrency: example items
		}
		
		NPCName: {
			FlutterSlime: Flutter Slime
			# Here we see that spaces in translation keys are not allowed. Any space will be replaced with an underscore.
			Example_Person: Example Person
		}
		
		MapObject: {
			ExampleClock: Example Clock
		}
		
		ItemTooltip: {
			# These 2 examples show using substitutions. Here we use a vanilla Key and a key from this Mod to generate the text: "Nearby players get a bonus against: Octopus". 
			# Note that the translation files for other languages don't need to define ItemTooltip.OctopusBanner, they would only need to define NPCName.Octopus, as seen in zh-Hans.hjson file. 
			OctopusBanner: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Octopus}"
			SarcophagusBanner: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Sarcophagus}"
			ExamplePet:
				'''
				Summons a {$Mods.ExampleMod.Common.PaperAirplane} to follow aimlessly behind you
				Second Line!
				'''
		}
		
		ItemName: {
			ExamplePet: "{$Mods.ExampleMod.Common.PaperAirplane}"
		}
		
		ProjectileName: {
			ExamplePet: "{$Mods.ExampleMod.Common.PaperAirplane}"
		}
		
		BuffName: {
			ExamplePet: "{$Mods.ExampleMod.Common.PaperAirplane}"
		}
		
		BuffDescription: {
			ExamplePet: '''"Let this pet be an example to you!"'''
		}
		
		RecipeConditions: {
			Night: At Low Health
		}
		
		Bestiary: {
			ExamplePerson: Built of blocks with arms of steel. Pumps iron day and night.
			ExampleBoneMerchant: Built with bone blocks and arms of steel. Throws bones day and night. 
		}
		
		BiomeName: {
			ExampleSurfaceBiome: Example Surface
		}

		Prefix: {
			ExamplePrefix: Example Prefix
			ExampleDerivedPrefix: Example Derived Prefix
		}
		
		#This is what displays during all of an NPC's happiness levels. Note that the localization key for these should always be "TownNPCMood.*NPCName*.*Mood*" or else it won't display properly.
		TownNPCMood: {
			ExamplePerson: {
				Content: I feel pretty fine right now.
				NoHome: I would very much like a house, all the colorful monsters scare me.
				LoveSpace: I love how there is so much space here to code tModLoader mods!
				FarFromHome: Could you please get me back to my house?
				DislikeCrowded: There are too many people around, it makes it hard for me to focus on mod making.
				LikeBiome: "{BiomeName} is a very nice place to test mods in."
				LoveBiome: "I love {BiomeName}."
				DislikeBiome: "It's way too cold in {BiomeName}, I'm freezing!"
				HateBiome: "Its kind of hard to mod while being attacked by monsters in {BiomeName}."
				LikeNPC: "I can respect {NPCName} as a fellow guide and educator!"
				LoveNPC: "Do you think {NPCName} notices me?"
				DislikeNPC: '''"{NPCName} keeps rambling on about "payed mods"... Wish I could convince him how terrible of an idea that is."'''
				HateNPC: "I hate all the loud noises caused by {NPCName} and his explosives! I just want peace and quiet."
			}
		}
	}
}
