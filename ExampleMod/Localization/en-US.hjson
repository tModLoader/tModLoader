# You may find this .hjson file approach to translations easier for your mod.
# .hjson files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Each translation entry in .hjson files contains a key and a value. The key is determined following the rules of JSON [https://www.w3schools.com/js/js_json_syntax.asp]
# The Key automatically inherits "Mods.ModNameHere.", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.
# The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix

Mods: {
	ExampleMod: {
		Config: {
			ItemHeader: Items
			
			SampleEnumLabels: {
				Peculiar: Very Peculiar
			}
			
			ExampleWingsToggle: {
				Label: ExampleWings Toggle
				Tooltip: Enables or disables the ExampleWings item
			}
		}
		
		Common: {
			PaperAirplane: Paper Airplane
			LocalizedLabel: This Label is from the localization files: {$Mods.ExampleMod.Common.PaperAirplane}
			LocalizedTooltip: This tooltip is from the localization files.
			LocalizedHeader: Headers can help organize
		}
		
		Currencies: {
			ExampleCustomCurrency: example items
		}

		DamageClassName: {
			ExampleDamageClass: example damage
		}
		
		NPCName: {
			ExampleCustomAISlimeNPC: Flutter Slime
			# Here we see that spaces in translation keys are not allowed. Any space will be replaced with an underscore.
			Example_Person: Example Person
			ExampleTravellingMerchant: Example Traveler
		}
		
		MapObject: {
			ExampleClock: Example Clock
			ExamplePylonTile: "{$Mods.ExampleMod.ItemName.ExamplePylonItem}"
			ExamplePylonTileAdvanced: "{$Mods.ExampleMod.ItemName.ExamplePylonItemAdvanced}"
		}
		
		ItemTooltip: {
			# These 2 examples show using substitutions. Here we use a vanilla Key and a key from this Mod to generate the text: "Nearby players get a bonus against: Octopus". 
			# Note that the translation files for other languages don't need to define ItemTooltip.OctopusBanner, they would only need to define NPCName.Octopus, as seen in zh-Hans.hjson file. 
			OctopusBanner: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Octopus}"
			SarcophagusBanner: "{$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Sarcophagus}"
			ExamplePetItem:
				'''
				Summons a {$Mods.ExampleMod.Common.PaperAirplane} to follow aimlessly behind you
				Second Line!
				'''
			ExampleBugNet:
				'''
				Used to catch critters
				Has a 20% chance to successfully catch lava critters
				This increases to 50% if the Warmth Potion buff is active
				Has a 5% chance to duplicate caught critters
				'''
			ExampleSpecificAmmoGun:
				'''
				Does not accept cursed bullets as ammunition
				Fires three rounds in rapid succession
				Each shot consumes ammunition with a different chance
				The first shot has a 20% chance to not consume bullets
				The second shot has a 63% chance to not consume bullets
				The last shot has a 36% chance to not consume bullets
				Shots that consume ammunition have their damage boosted by 20%
				'''
			ExamplePylonItem: 
			'''
			Must be within the Example Surface or Underground Biome in order to function.
			Has no NPC requirements!
			'''
			ExamplePylonItemAdvanced: "Will randomly turn on and off, but otherwise can be teleported to without NPCs and in any biome!"
		}
		
		ItemName: {
			ExamplePetItem: "{$Mods.ExampleMod.Common.PaperAirplane}"
			ExampleSpecificAmmoGun: '''Example Rifle'''
			ExamplePylonItem: "Example Pylon"
			ExamplePylonItemAdvanced: "Unstable Pylon"
		}
		
		ProjectileName: {
			ExamplePetProjectile: "{$Mods.ExampleMod.Common.PaperAirplane}"
		}
		
		BuffName: {
			ExamplePetBuff: "{$Mods.ExampleMod.Common.PaperAirplane}"
		}
		
		BuffDescription: {
			ExamplePetBuff: '''"Let this pet be an example to you!"'''
		}
		
		RecipeConditions: {
			Night: At Low Health
		}
		
		Bestiary: {
			ExamplePerson: Built of blocks with arms of steel. Pumps iron day and night.
			ExampleBoneMerchant: Built with bone blocks and arms of steel. Throws bones day and night. 
		}
		
		BiomeName: {
			ExampleSurfaceBiome: Example Surface
		}

		Prefix: {
			ExamplePrefix: Example Prefix
			ExampleDerivedPrefix: Example Derived Prefix
		}
		
		#This is what displays during all of an NPC's happiness levels. Note that the localization key for these should always be "TownNPCMood.*NPCName*.*Mood*" or else it won't display properly.
		TownNPCMood: {
			ExamplePerson: {
				Content: I feel pretty fine right now.
				NoHome: I would very much like a house, all the colorful monsters scare me.
				LoveSpace: I love how there is so much space here to code tModLoader mods!
				FarFromHome: Could you please get me back to my house?
				DislikeCrowded: There are too many people around, it makes it hard for me to focus on mod making.
				HateCrowded: I can't test my mod with so many people around!
				LikeBiome: "{BiomeName} is a very nice place to test mods in."
				LoveBiome: "I love {BiomeName}."
				DislikeBiome: "It's way too cold in {BiomeName}, I'm freezing!"
				HateBiome: "Its kind of hard to mod while being attacked by monsters in {BiomeName}."
				LikeNPC: "I can respect {NPCName} as a fellow guide and educator!"
				LoveNPC: "Do you think {NPCName} notices me?"
				DislikeNPC: '''"{NPCName} keeps rambling on about "payed mods"... Wish I could convince him how terrible of an idea that is."'''
				HateNPC: "I hate all the loud noises caused by {NPCName} and his explosives! I just want peace and quiet."
			}
		}

		MessageInfo: {
			UnstablePylonIsOff: "That Unstable Pylon is currently inactive."
			NearbyUnstablePylonIsOff: "The nearby Unstable Pylon is currently inactive."
		}
		
		#This is used to display the NPC's dialogues.
		Dialogue: {
			ExamplePerson: {
				PartyGirlDialogue : "Can you please tell {0} to stop decorating my house with colors?"
				StandardDialogue1 : "Sometimes I feel like I'm different from everyone else here."
				StandardDialogue2 : "What's your favorite color? My favorite colors are white and black."
				StandardDialogue3 : "What? I don't have any arms or legs? Oh, don't be ridiculous!"
				CommonDialogue : "This message has a weight of 5, meaning it appears 5 times more often."
				RareDialogue : "This message has a weight of 0.1, meaning it appears 10 times as rare."
				TalkALot : "I'm getting tired of talking to you. I have to go."
			}
			ExampleBoneMerchant: {
				StandardDialogue1 : "It's relaxing down here in the underground."
				StandardDialogue2 : "What am I doing down here you may ask? I'm not sure, but leave me be!"
				StandardDialogue3 : "Huh? What wares do I have? I have no idea! How about you ask?"
			}
			ExampleTravelingMerchant: {
				PartyGirlDialogue : "Can you please tell {0} to stop decorating my cousin's house with colors?"
				StandardDialogue1 : "Sometimes my cousin feels like they're different from everyone else here."
				StandardDialogue2 : "What's your favorite color? My cousin's favorite colors are white and black."
				StandardDialogue3 : "I'm a traveling merchant, and I sell things."
				HiveBackpackDialogue : "Hey, if you find a [i:HiveBackpack], my cousin can upgrade it for you."
			}
		}
	}
}
