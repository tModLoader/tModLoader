# You may find this .lang file approach to translations easier for your mod.
# .lang files contain translations for the language specified in the filename. (Make sure this file is UTF-8 encoded only.)
# The possible languages are: English ("en-US"), German ("de-DE"), Italian ("it-IT"), French ("fr-FR"), Spanish ("es-ES"), Russian ("ru-RU"), Chinese ("zh-Hans"), Portuguese ("pt-BR"), and Polish ("pl-PL")
# Here in ExampleMod we have organized these files in a folder called Localization. A single file per language makes it extremely easy to to integrate and maintain translations.
# Each translation entry in .lang files contains a key, an equals sign, followed by the translation immediately after. One translation per line.
# The Key automatically inherits "Mods.ModNameHere.", which is useful to know if you want to use substitutions (as seen in the Paper Airplane example) or use Language.GetTextValue or Network text.
# The following are the currently autogenerated keys: ItemName, ItemTooltip, BuffName, BuffDescription, ProjectileName, NPCName, MapObject, and Prefix

# The following 2 examples are simple.

NPCName.FlutterSlime=Flutter Slime
MapObject.ExampleClock=Example Clock

# These 2 examples show using substitutions. Here we use a vanilla Key and a key from this Mod to generate the text: "Nearby players get a bonus against: Octopus". 
# Note that the translation files for other languages don't need to define ItemTooltip.OctopusBanner, they would only need to define NPCName.Octopus, as seen in zh-Hans.lang file. 

ItemTooltip.OctopusBanner={$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Octopus}
ItemTooltip.SarcophagusBanner={$CommonItemTooltip.BannerBonus}{$Mods.ExampleMod.NPCName.Sarcophagus}

# Here we see that spaces in translation keys are not allowed. Any space will be replaced with an underscore.

NPCName.Example_Person=Example Person

# Since the item, buff, and projectile all share the word "Paper Airplane", here is a custom translation key that we define. 
# By sharing a common tooltip, we can simplify other language files since English is the fallback language.
# Other languages would only need to provide a translation for Common.PaperAirplane, BuffDescription, and ItemTooltip. They can skip ProjectileName, ItemName, and BuffName.
# Also note that \n makes a newline character, useful for multiline tooltips.

Common.PaperAirplane=Paper Airplane

ItemName.ExamplePet={$Mods.ExampleMod.Common.PaperAirplane}
ItemTooltip.ExamplePet=Summons a {$Mods.ExampleMod.Common.PaperAirplane} to follow aimlessly behind you\nSecond Line!
ProjectileName.ExamplePet={$Mods.ExampleMod.Common.PaperAirplane}
BuffName.ExamplePet={$Mods.ExampleMod.Common.PaperAirplane}
BuffDescription.ExamplePet="Let this pet be an example to you!"

Common.LocalizedLabel=This Label is from the .lang files: {$Mods.ExampleMod.Common.PaperAirplane}
Common.LocalizedTooltip=This tooltip is from the .lang files.
Common.LocalizedHeader=Headers can help organize

# Prefixing these with "Config" isn't needed, though it can help with organizing things
Config.ItemHeader=Items
Config.ExampleWingsToggle.Label=ExampleWings Toggle
Config.ExampleWingsToggle.Tooltip=Enables or disables the ExampleWings item

# Content/Items/ExampleItem.cs
RecipeConditions.Night=At Low Health

# Content/NPCs/ExamplePerson.cs
Bestiary.ExamplePerson=Built of blocks with arms of steel. Pumps iron day and night.

# Content/Currencies/ExampleCustomCurrency
Currencies.ExampleCustomCurrency=example items