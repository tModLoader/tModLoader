--- src/decompiled/Terraria/Netplay.cs
+++ src/Terraria/Terraria/Netplay.cs
@@ -40,6 +_,10 @@
 		public static bool SpamCheck = false;
 		public static bool HasClients;
 		private static Thread _serverThread;
+#if SERVER
+		private static UPnPNAT _upnpnat;
+		private static IStaticPortMappingCollection _mappings;
+#endif
 		public static MessageBuffer fullBuffer = new MessageBuffer();
 		private static int _currentRequestId;
 		private static UdpClient BroadcastClient = null;
@@ -109,9 +_,42 @@
 		}
 
 		private static void OpenPort(int port) {
+#if SERVER
+			string localIPAddress = GetLocalIPAddress();
+			if (_upnpnat == null) {
+				_upnpnat = (UPnPNAT)Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid("AE1E00AA-3FD5-403C-8A27-2BBDC30CD0E1")));
+				_mappings = _upnpnat.StaticPortMappingCollection;
+			}
+
+			if (_mappings == null)
+				return;
+
+			bool flag = false;
+			foreach (IStaticPortMapping mapping in _mappings) {
+				if (mapping.InternalPort == port && mapping.InternalClient == localIPAddress && mapping.Protocol == "TCP")
+					flag = true;
+			}
+
+			if (!flag)
+				_mappings.Add(port, "TCP", port, localIPAddress, bEnabled: true, "Terraria Server");
+#endif
 		}
 
 		private static void ClosePort(int port) {
+#if SERVER
+			string localIPAddress = GetLocalIPAddress();
+			bool flag = false;
+			if (_mappings == null)
+				return;
+
+			foreach (IStaticPortMapping mapping in _mappings) {
+				if (mapping.InternalPort == port && mapping.InternalClient == localIPAddress && mapping.Protocol == "TCP")
+					flag = true;
+			}
+
+			if (!flag)
+				_mappings.Remove(port, "TCP");
+#endif
 		}
 
 		private static void ServerFullWriteCallBack(object state) {
@@ -618,12 +_,26 @@
 		}
 
 		public static void Initialize() {
+#if SERVER
+			for (int i = 0; i < 257; i++) {
+				if (i < 256)
+					Clients[i] = new RemoteClient();
+
+				NetMessage.buffer[i] = new MessageBuffer();
+				NetMessage.buffer[i].whoAmI = i;
+			}
+#endif
+
 			NetMessage.buffer[256] = new MessageBuffer();
 			NetMessage.buffer[256].whoAmI = 256;
 		}
 
 		public static void UpdateInMainThread() {
+#if SERVER
+			UpdateServerInMainThread();
+#else
 			UpdateClientInMainThread();
+#endif
 		}
 
 		public static int GetSectionX(int x) => x / 200;
