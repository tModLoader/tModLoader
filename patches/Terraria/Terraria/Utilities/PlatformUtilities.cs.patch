--- src/decompiled/Terraria/Utilities/PlatformUtilities.cs
+++ src/Terraria/Terraria/Utilities/PlatformUtilities.cs
@@ -1,11 +_,86 @@
+#if !XNA
+using SDL2;
+using System;
+#endif
 namespace Terraria.Utilities
 {
 	public static class PlatformUtilities
 	{
+#if !XNA
+		private struct SDL_Surface
+		{
+			private uint flags;
+
+			public IntPtr format;
+
+			public int w;
+
+			public int h;
+
+			private int pitch;
+
+			public IntPtr pixels;
+
+			private IntPtr userdata;
+
+			private int locked;
+
+			private IntPtr lock_data;
+
+			private SDL.SDL_Rect clip_rect;
+
+			private IntPtr map;
+
+			private int refcount;
+		}
+#endif
+#if XNA
 		public const bool IsXNA = true;
+#else
-		public const bool IsFNA = false;
+		public const bool IsXNA = false;
+#endif
+		public const bool IsFNA = !IsXNA;
+
+#if WINDOWS
 		public const bool IsWindows = true;
+#else
+		public const bool IsWindows = false;
+#endif
+#if MAC
+		public const bool IsOSX = true;
+#else
 		public const bool IsOSX = false;
+#endif
+#if LINUX
+		public const bool IsLinux = true;
+#else
 		public const bool IsLinux = false;
+#endif
+
+#if !XNA && !NETCORE
+		public unsafe static void SavePng(Stream stream, int width, int height, int imgWidth, int imgHeight, byte[] data) {
+#if CLIENT
+			IntPtr intPtr = SDL.SDL_CreateRGBSurface(0u, imgWidth, imgHeight, 32, 255u, 65280u, 16711680u, 4278190080u);
+			SDL.SDL_LockSurface(intPtr);
+			PlatformUtilities.SDL_Surface* ptr = (PlatformUtilities.SDL_Surface*)((void*)intPtr);
+			Marshal.Copy(data, 0, ptr->pixels, width * height * 4);
+			SDL.SDL_UnlockSurface(intPtr);
+			data = null;
+			if (width != imgWidth || height != imgHeight) {
+				IntPtr intPtr2 = SDL.SDL_CreateRGBSurface(0u, width, height, 32, 255u, 65280u, 16711680u, 4278190080u);
+				SDL.SDL_BlitScaled(intPtr, IntPtr.Zero, intPtr2, IntPtr.Zero);
+				SDL.SDL_FreeSurface(intPtr);
+				intPtr = intPtr2;
+			}
+
+			byte[] array = new byte[width * height * 4 + 41 + 57 + 256];
+			IntPtr intPtr3 = SDL.SDL_RWFromMem(array, array.Length);
+			SDL_image.IMG_SavePNG_RW(intPtr, intPtr3, 1);
+			SDL.SDL_FreeSurface(intPtr);
+			int count = ((int)array[33] << 24 | (int)array[34] << 16 | (int)array[35] << 8 | (int)array[36]) + 41 + 57;
+			stream.Write(array, 0, count);
+#endif
+		}
+#endif
 	}
 }
