--- src/Terraria/ReLogic/OS/Windows/WindowsPlatform.cs
+++ src/TerrariaNetCore/ReLogic/OS/Windows/WindowsPlatform.cs
@@ -1,4 +_,5 @@
 using System;
+using System.Text;
 using ReLogic.Localization.IME;
 
 namespace ReLogic.OS.Windows;
@@ -19,9 +_,26 @@
 
 	public override void InitializeClientServices(IntPtr windowHandle)
 	{
+		// windowHandle is invalid, need to find it on our own
+		int currentProcessId = NativeMethods.GetCurrentProcessId();
+
+		NativeMethods.EnumWindows(delegate(IntPtr wnd, IntPtr param) {
+			NativeMethods.GetWindowThreadProcessId(wnd, out int processId);
+			if (processId == currentProcessId) {
+				var buffer = new StringBuilder(1024);
+				NativeMethods.GetWindowText(wnd, buffer, 1024);
+
+				if (buffer.ToString().Contains("Terraria")) {
+					windowHandle = wnd;
+					return false;
+				}
+			}
+
+			return true;
+		}, IntPtr.Zero);
+
 		if (_wndProcHook == null)
 			_wndProcHook = new WindowsMessageHook(windowHandle);
-
 		RegisterService((IImeService)new WindowsIme(_wndProcHook, windowHandle));
 	}
 
