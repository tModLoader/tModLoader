--- src/TerrariaNetCore/ReLogic/OS/Windows/NativeMethods.cs
+++ src/tModLoader/ReLogic/OS/Windows/NativeMethods.cs
@@ -1,14 +_,16 @@
 using System;
 using System.Runtime.InteropServices;
+using System.Text;
 #if !NETCORE
 using System.Windows.Forms;
 #endif
 
 namespace ReLogic.OS.Windows;
 
-internal static class NativeMethods
+internal static partial class NativeMethods
 {
 	public delegate IntPtr WndProcCallback(IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam);
+	public delegate bool EnumWindowsProcCallback(IntPtr hWnd, IntPtr lParam);
 
 	public enum StdHandleType
 	{
@@ -114,6 +_,19 @@
 		public IntPtr hNameMappings;
 		public string lpszProgressTitle;
 	}
+
+	[DllImport("kernel32.dll")]
+	public static extern int GetCurrentProcessId();
+
+	[DllImport("user32.dll")]
+	[return: MarshalAs(UnmanagedType.Bool)]
+	public static extern bool EnumWindows(EnumWindowsProcCallback lpEnumFunc, IntPtr lParam);
+
+	[DllImport("user32.dll")]
+	public static extern int GetWindowThreadProcessId(IntPtr hWnd, out int lpdwProcessId);
+
+	[DllImport("user32.dll")]
+	public static extern int GetWindowText(IntPtr hWnd, StringBuilder text, int count);
 
 	[DllImport("user32.dll", CharSet = CharSet.Unicode)]
 	public static extern IntPtr CallWindowProc(IntPtr lpPrevWndFunc, IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam);
