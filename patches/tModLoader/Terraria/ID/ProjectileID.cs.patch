--- src/TerrariaNetCore/Terraria/ID/ProjectileID.cs
+++ src/tModLoader/Terraria/ID/ProjectileID.cs
@@ -1,15 +_,16 @@
 using Microsoft.Xna.Framework;
 using ReLogic.Reflection;
 using Terraria.DataStructures;
+using Terraria.ModLoader;
 using Terraria.WorldBuilding;
 
 namespace Terraria.ID;
 
-public class ProjectileID
+public partial class ProjectileID
 {
-	public static class Sets
+	public static partial class Sets
 	{
-		public static SetFactory Factory = new SetFactory(1022);
+		public static SetFactory Factory = new SetFactory(ProjectileLoader.ProjectileCount);
 		public static SettingsForCharacterPreview[] CharacterPreviewAnimations = Factory.CreateCustomSet(new SettingsForCharacterPreview(), (short)111, SimpleLoop(0, 6).WithOffset(6f, 0f).WhenNotSelected(0, 0).WithSpriteDirection(-1), (short)112, SimpleLoop(0, 3).WhenNotSelected(0, 0).WithSpriteDirection(-1), (short)127, SimpleLoop(0, 5).WhenNotSelected(0, 0).WithOffset(-6f, 0f).WithSpriteDirection(-1), (short)175, SimpleLoop(0, 2, 8).WhenNotSelected(0, 2, 10).WithOffset(-4f, -6f).WithCode(DelegateMethods.CharacterPreview.Float), (short)197, SimpleLoop(0, 0).WithOffset(-8f, -4f).WithCode(DelegateMethods.CharacterPreview.FloatAndSpinWhenWalking), (short)198, SimpleLoop(0, 4).WhenNotSelected(0, 4, 4).WithOffset(-8f, -20f).WithSpriteDirection(-1)
 			.WithCode(DelegateMethods.CharacterPreview.Float), (short)199, SimpleLoop(0, 8, 6).WhenNotSelected(0, 8, 6).WithOffset(-2f, -18f).WithCode(DelegateMethods.CharacterPreview.Float), (short)200, SimpleLoop(0, 6, 5).WhenNotSelected(0, 0).WithOffset(-2f, 0f).WithSpriteDirection(-1), (short)208, SimpleLoop(1, 4, 5).WhenNotSelected(1, 4, 7).WithOffset(-2f, -12f).WithSpriteDirection(-1)
 			.WithCode(DelegateMethods.CharacterPreview.Float), (short)209, SimpleLoop(2, 10, 5).WhenNotSelected(0, 0).WithOffset(6f, 0f).WithSpriteDirection(-1), (short)210, SimpleLoop(1, 6, 6).WhenNotSelected(0, 0).WithOffset(4f, 0f).WithSpriteDirection(-1), (short)236, SimpleLoop(2, 7, 5).WhenNotSelected(0, 0).WithOffset(-16f, 0f).WithSpriteDirection(-1), (short)268, SimpleLoop(0, 6, 6).WhenNotSelected(0, 0).WithOffset(4f, 0f).WithSpriteDirection(-1), (short)269, SimpleLoop(0, 4, 6).WhenNotSelected(0, 0).WithOffset(0f, 0f).WithSpriteDirection(-1), (short)313, SimpleLoop(0, 4, 5).WhenNotSelected(0, 0).WithOffset(-6f, 0f).WithSpriteDirection(-1), (short)314, SimpleLoop(1, 6, 5).WhenNotSelected(0, 0).WithOffset(-4f, 0f).WithSpriteDirection(-1), (short)319, SimpleLoop(2, 4, 6).WhenNotSelected(0, 0).WithOffset(-14f, 0f).WithSpriteDirection(-1), (short)324, SimpleLoop(2, 4, 6).WhenNotSelected(0, 0).WithOffset(-4f, 0f).WithSpriteDirection(-1), (short)334, SimpleLoop(2, 5, 5).WhenNotSelected(0, 0).WithOffset(-10f, 0f).WithSpriteDirection(-1), (short)353, SimpleLoop(2, 8, 6).WhenNotSelected(0, 0).WithOffset(4f, 0f).WithSpriteDirection(-1), (short)380, SimpleLoop(0, 4, 6).WithOffset(-10f, -20f).WithSpriteDirection(-1).WithCode(DelegateMethods.CharacterPreview.Float), (short)398, SimpleLoop(1, 5, 7).WhenNotSelected(0, 0).WithOffset(6f, 0f), (short)499, SimpleLoop(2, 6, 7).WhenNotSelected(0, 0).WithOffset(-18f, 0f).WithSpriteDirection(-1), (short)653, SimpleLoop(0, 0).WithOffset(-2f, 0f).WithCode(DelegateMethods.CharacterPreview.CompanionCubePet), (short)703, SimpleLoop(0, 4).WhenNotSelected(0, 4, 4).WithOffset(4f, -10f).WithCode(DelegateMethods.CharacterPreview.Float), (short)701, SimpleLoop(0, 3, 6).WhenNotSelected(0, 3, 6).WithOffset(-2f, -18f).WithCode(DelegateMethods.CharacterPreview.Float), (short)764, SimpleLoop(0, 0).WithOffset(2f, -18f).WithCode(DelegateMethods.CharacterPreview.EtsyPet), (short)765, SimpleLoop(2, 4, 6).WhenNotSelected(0, 0).WithOffset(-4f, 0f).WithSpriteDirection(-1), (short)774, SimpleLoop(4, 4, 6).WithOffset(-14f, -24f).WithSpriteDirection(-1).WithCode(DelegateMethods.CharacterPreview.Float), (short)825, SimpleLoop(14, 6, 6).WhenNotSelected(0, 0).WithOffset(-6f, 0f).WithSpriteDirection(-1), (short)821, SimpleLoop(13, 6, 6).WhenNotSelected(0, 0).WithOffset(0f, 0f).WithSpriteDirection(-1), (short)815, SimpleLoop(0, 6, 6).WhenNotSelected(0, 6, 6).WithOffset(-20f, -30f).WithSpriteDirection(-1)
@@ -241,10 +_,24 @@
 			(short)1014,
 			false
 		});
+
+		/// <summary>
+		/// Determines what data will be remembered for projectile trails. Each projectile type defaults to -1, meaning no information is saved. Use values of 0 or 2 most of the time.<br/>0: only position data is remembered.<br/>1: should not be used.<br/>2: position, rotation, and spriteDirection data is remembered<br/>3: same as 2, but attempts to smooth out old data by interpolating values<br/>4: same as 2, but adjusts old data to follow the player owner.
+		/// <br/>Must be used with <see cref="ProjectileID.Sets.TrailCacheLength"/>, <see cref="Projectile.oldPos"/>, <see cref="Projectile.oldRot"/>, <see cref="Projectile.oldSpriteDirection"/> to be used properly. 
+		/// <br/>Refer to <see href="https://github.com/tModLoader/tModLoader/blob/1.4/ExampleMod/Content/Projectiles/ExampleBullet.cs">ExampleBullet.cs</see> in ExampleMod for sample usage.
+		/// </summary>
 		public static int[] TrailingMode = Factory.CreateIntSet(-1, 94, 0, 301, 0, 388, 0, 385, 0, 408, 0, 409, 0, 435, 0, 436, 0, 437, 0, 438, 0, 452, 0, 459, 0, 462, 0, 502, 0, 503, 0, 466, 1, 532, 0, 533, 0, 573, 0, 580, 1, 582, 0, 585, 0, 592, 0, 601, 0, 617, 0, 636, 0, 638, 0, 639, 0, 640, 0, 424, 0, 425, 0, 426, 0, 660, 0, 661, 0, 671, 2, 664, 0, 666, 0, 668, 0, 675, 0, 680, 2, 682, 0, 684, 0, 686, 2, 700, 0, 706, 0, 709, 0, 710, 2, 711, 2, 712, 0, 715, 2, 716, 2, 717, 2, 718, 2, 261, 0, 721, 0, 729, 2, 732, 0, 731, 0, 739, 0, 740, 0, 741, 0, 742, 0, 743, 0, 744, 0, 745, 0, 746, 0, 747, 0, 748, 0, 749, 0, 750, 0, 751, 0, 752, 0, 755, 2, 766, 2, 767, 2, 768, 2, 769, 2, 770, 2, 771, 2, 811, 2, 814, 2, 822, 2, 823, 2, 824, 2, 826, 2, 827, 2, 828, 2, 829, 2, 830, 2, 838, 2, 839, 2, 840, 2, 843, 2, 844, 2, 845, 2, 846, 2, 850, 2, 852, 2, 853, 2, 856, 0, 857, 0, 864, 2, 873, 2, 872, 2, 833, 2, 834, 2, 835, 2, 818, 2, 902, 0, 883, 0, 887, 0, 893, 0, 894, 0, 909, 0, 916, 2, 34, 3, 16, 3, 79, 3, 931, 2, 933, 4, 946, 2, 964, 0, 965, 0, 977, 2, 976, 2, 973, 2, 106, 5, 85, 3, 1001, 3, 1020, 2);
+
+		/// <summary>
+		/// The length of the the trail to store. Each projectile type defaults to 10. Use for drawing trails. Must be used with <see cref="ProjectileID.Sets.TrailingMode"/> to be used properly. 
+		/// </summary>
 		public static int[] TrailCacheLength = Factory.CreateIntSet(10, 466, 20, 502, 25, 580, 20, 636, 20, 640, 20, 686, 20, 711, 20, 715, 20, 716, 20, 717, 20, 718, 20, 261, 20, 721, 20, 729, 20, 731, 20, 739, 20, 740, 20, 741, 20, 742, 20, 743, 20, 744, 20, 745, 20, 746, 20, 747, 20, 748, 20, 749, 20, 750, 20, 751, 20, 752, 20, 766, 60, 767, 60, 768, 60, 769, 60, 770, 60, 771, 80, 814, 40, 822, 80, 823, 80, 824, 60, 826, 60, 827, 65, 828, 60, 829, 60, 830, 80, 838, 80, 839, 60, 840, 60, 843, 60, 844, 65, 845, 80, 846, 80, 850, 80, 852, 60, 853, 60, 856, 2, 857, 2, 864, 60, 873, 60, 872, 120, 833, 20, 834, 20, 835, 20, 818, 20, 883, 41, 887, 51, 893, 71, 894, 10, 909, 5, 916, 20, 34, 30, 16, 30, 79, 60, 931, 20, 933, 60, 946, 20, 977, 30, 976, 60, 973, 20, 106, 15, 85, 60, 1001, 12, 1020, 20);
 		public static bool[] LightPet = Factory.CreateBoolSet(18, 500, 72, 87, 86, 211, 492, 650, 702, 891, 896, 895);
 		public static bool[] HeldProjDoesNotUsePlayerGfxOffY = Factory.CreateBoolSet(947, 948, 25, 26, 35, 63, 154, 247, 757, 699);
+
+		/// <summary>
+		/// Indicates that the Lunatic Cultist takes 75% damage from this projectile. All projectiles in this set are homing projectiles, so this set can be seen as an indicator that this projectile homes in on the target. Use this set in <see cref="ModNPC.ModifyHitByProjectile"/> and adjust the <c>damage</c> parameter to implement a similar penalty for homing projectiles.
+		/// </summary>
 		public static bool[] CultistIsResistantTo = Factory.CreateBoolSet(207, 182, 338, 339, 340, 341, 266, 390, 391, 392, 307, 316, 190, 227, 255, 297, 317, 321, 356, 407, 376, 374, 379, 408, 389, 388, 405, 409, 535, 536, 484, 477, 16, 34, 79, 634, 635, 616, 189, 181, 566, 837, 659, 803, 804, 805, 806, 807, 808, 809, 810, 856, 931, 248, 393, 394, 395, 378, 379, 664, 666, 668, 680, 625, 626, 627, 628, 613, 614, 309, 195, 433, 755, 864, 758, 759, 832, 833, 834, 835, 951, 644, 642, 946, 930, 937, 225, 285, 917, 700, 916, 640, 221, 606, 567, 568, 569, 570, 571, 617, 618, 619, 620, 963, 967);
 		public static bool[] IsADD2Turret = Factory.CreateBoolSet(663, 665, 667, 677, 678, 679, 688, 689, 690, 691, 692, 693);
 		public static bool[] TurretFeature = Factory.CreateBoolSet();
