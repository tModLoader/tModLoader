--- src/TerrariaNetCore/Terraria/ID/ArmorIDs.cs
+++ src/tModLoader/Terraria/ID/ArmorIDs.cs
@@ -1,15 +_,16 @@
 using System.Collections.Generic;
 using Terraria.DataStructures;
+using Terraria.ModLoader;
 
 namespace Terraria.ID;
 
-public class ArmorIDs
+public partial class ArmorIDs
 {
-	public class Head
+	public partial class Head
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(282);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Head]);
 			public static int[] FrontToBackID = Factory.CreateIntSet(-1, 242, 246, 243, 247, 244, 248, 245, 249, 133, 252, 224, 253);
 			public static bool[] UseSkinColor = Factory.CreateBoolSet(false, 274, 277);
 			public static bool[] PreventBeardDraw = Factory.CreateBoolSet(false, 118, 119, 107, 129, 127, 125, 136, 162, 168, 210, 213, 28, 135, 31, 17, 261, 169, 186, 47, 22, 105, 102, 120, 137, 199, 207, 260, 132, 155, 179, 108, 153, 164, 172, 208, 241, 271, 48, 154, 188, 187, 209, 46, 123, 269, 185, 276);
@@ -301,9 +_,9 @@
 		public const int Count = 282;
 	}
 
-	public class Body
+	public partial class Body
 	{
-		public class Sets
+		public partial class Sets
 		{
 			public struct IncludeCapeFrontAndBackInfo
 			{
@@ -320,7 +_,7 @@
 				}
 			}
 
-			public static SetFactory Factory = new SetFactory(248);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Body]);
 			public static bool[] NeedsToDrawArm = Factory.CreateBoolSet(false, 200, 202, 201, 203, 195, 205, 207, 206, 228, 242, 243);
 			public static int[] IncludedCapeBack = Factory.CreateIntSet(-1, 207, 13, 206, 12, 205, 11, 185, 17, 96, 18, 94, 19, 80, 21, 217, 22, 24, 29, 238, 32);
 			public static int[] IncludedCapeBackFemale = Factory.CreateIntSet(-1, 207, 13, 206, 12, 205, 11, 185, 17, 96, 18, 94, 19, 80, 21, 217, 23, 24, 29, 238, 32);
@@ -338,7 +_,8 @@
 				backCape = 31,
 				frontCape = 10
 			});
+			// Made internal to avoid confusion.
-			public static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247);
+			internal static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247);
 			public static bool[] showsShouldersWhileJumping = Factory.CreateBoolSet(177, 190, 95, 46, 73, 92, 24, 54, 55, 56, 65, 66, 67, 69, 70, 71, 75, 105, 106, 175, 176, 182, 183, 187, 194, 197, 198, 201, 204, 226, 227, 229, 239);
 			public static bool[] shouldersAreAlwaysInTheBack = Factory.CreateBoolSet(190);
 			public static bool[] DisableHandOnAndOffAccDraw = Factory.CreateBoolSet(83);
@@ -538,11 +_,11 @@
 		public const int Count = 248;
 	}
 
-	public class Legs
+	public partial class Legs
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(236);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Legs]);
 			public static List<int> MannequinIncompatible = new List<int>();
 			public static bool[] IncompatibleWithFrogLeg = Factory.CreateBoolSet(106, 143, 217, 222, 226, 228, 138);
 		}
@@ -762,12 +_,13 @@
 		public const int Count = 236;
 	}
 
-	public class HandOn
+	public partial class HandOn
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(24);
-			public static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 22, 23);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.HandsOn]);
+			// Made internal to avoid confusion.
+			internal static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 22, 23);
 			public static bool[] UsesOldFramingTexturesForWalking = Factory.CreateBoolSet(false, 12, 8, 17);
 		}
 
@@ -799,12 +_,13 @@
 		public const int Count = 24;
 	}
 
-	public class HandOff
+	public partial class HandOff
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(16);
-			public static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.HandsOff]);
+			// Made internal to avoid confusion.
+			internal static bool[] UsesNewFramingCode = Factory.CreateBoolSet(false, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);
 		}
 
 		public const sbyte FireGauntlet = 1;
@@ -827,11 +_,11 @@
 		public const int Count = 16;
 	}
 
-	public class Back
+	public partial class Back
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(37);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Back]);
 			public static bool[] DrawInBackpackLayer = Factory.CreateBoolSet(false, 7, 8, 9, 10, 15, 16, 32, 33);
 			public static bool[] DrawInTailLayer = Factory.CreateBoolSet(false, 18, 19, 21, 25, 26, 27, 28);
 		}
@@ -875,11 +_,11 @@
 		public const int Count = 37;
 	}
 
-	public class Front
+	public partial class Front
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(13);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Front]);
 			public static bool[] DrawsInNeckLayer = Factory.CreateBoolSet(false, 6);
 		}
 
@@ -898,11 +_,11 @@
 		public const int Count = 13;
 	}
 
-	public class Shoe
+	public partial class Shoe
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(27);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Shoes]);
 			public static int[] MaleToFemaleID = Factory.CreateIntSet(-1, 25, 26);
 		}
 
@@ -936,11 +_,11 @@
 		public const int Count = 27;
 	}
 
-	public class Waist
+	public partial class Waist
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(17);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Waist]);
 			public static bool[] UsesTorsoFraming = Factory.CreateBoolSet(false, 5, 10, 10, 12);
 			public static bool[] IsABelt = Factory.CreateBoolSet(false, 5, 10, 10, 12);
 		}
@@ -965,9 +_,9 @@
 		public const int Count = 17;
 	}
 
-	public class Wing
+	public partial class Wing
 	{
-		public class Sets
+		public partial class Sets
 		{
 			public static WingStats[] Stats;
 		}
@@ -1051,11 +_,11 @@
 		public const int Count = 12;
 	}
 
-	public class Face
+	public partial class Face
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(22);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Face]);
 			public static bool[] PreventHairDraw = Factory.CreateBoolSet(false, 2, 3, 4, 19);
 			public static bool[] OverrideHelmet = Factory.CreateBoolSet(false, 2, 3, 4, 19);
 			public static bool[] DrawInFaceUnderHairLayer = Factory.CreateBoolSet(false, 5);
@@ -1088,11 +_,11 @@
 		public const sbyte Count = 22;
 	}
 
-	public class Balloon
+	public partial class Balloon
 	{
-		public class Sets
+		public partial class Sets
 		{
-			public static SetFactory Factory = new SetFactory(20);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Balloon]);
 			public static bool[] DrawInFrontOfBackArmLayer = Factory.CreateBoolSet(false, 18);
 			public static bool[] UsesTorsoFraming = Factory.CreateBoolSet(false, 18);
 		}
@@ -1133,7 +_,7 @@
 	{
 		public class Sets
 		{
-			public static SetFactory Factory = new SetFactory(5);
+			public static SetFactory Factory = new SetFactory(EquipLoader.nextEquip[EquipType.Beard]);
 			public static bool[] UseHairColor = Factory.CreateBoolSet(false, 2, 3, 4);
 		}
 
