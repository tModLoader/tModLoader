--- src/TerrariaNetCore/Terraria/GameContent/ItemDropRules/CommonDrop.cs
+++ src/tModLoader/Terraria/GameContent/ItemDropRules/CommonDrop.cs
@@ -1,8 +_,10 @@
+using System;
 using System.Collections.Generic;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.ItemDropRules
 {
-	public class CommonDrop : IItemDropRule
+	public class CommonDrop : IItemDropRule, IItemDropRuleWithNumerator
 	{
 		public int itemId;
 		public int chanceDenominator;
@@ -10,12 +_,25 @@
 		public int amountDroppedMaximum;
 		public int chanceNumerator;
 
+		public int Numerator {
+			get => chanceNumerator;
+			set => chanceNumerator = value;
+		}
+		public int Denominator {
+			get => chanceDenominator;
+			set => chanceDenominator = value;
+		}
+
 		public List<IItemDropRuleChainAttempt> ChainedRules {
 			get;
 			private set;
 		}
 
 		public CommonDrop(int itemId, int chanceDenominator, int amountDroppedMinimum = 1, int amountDroppedMaximum = 1, int chanceNumerator = 1) {
+			if (amountDroppedMinimum > amountDroppedMaximum) {
+				throw new ArgumentOutOfRangeException(nameof(amountDroppedMinimum), $"{nameof(amountDroppedMinimum)} must be lesser or equal to {nameof(amountDroppedMaximum)}.");
+			}
+
 			this.itemId = itemId;
 			this.chanceDenominator = chanceDenominator;
 			this.amountDroppedMinimum = amountDroppedMinimum;
@@ -29,7 +_,7 @@
 		public virtual ItemDropAttemptResult TryDroppingItem(DropAttemptInfo info) {
 			ItemDropAttemptResult result;
 			if (info.player.RollLuck(chanceDenominator) < chanceNumerator) {
-				CommonCode.DropItemFromNPC(info.npc, itemId, info.rng.Next(amountDroppedMinimum, amountDroppedMaximum + 1));
+				CommonCode.DropItem(info, itemId, info.rng.Next(amountDroppedMinimum, amountDroppedMaximum + 1));
 				result = default(ItemDropAttemptResult);
 				result.State = ItemDropAttemptResultState.Success;
 				return result;
