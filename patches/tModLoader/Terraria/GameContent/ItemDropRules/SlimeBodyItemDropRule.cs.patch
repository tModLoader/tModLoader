--- src/TerrariaNetCore/Terraria/GameContent/ItemDropRules/SlimeBodyItemDropRule.cs
+++ src/tModLoader/Terraria/GameContent/ItemDropRules/SlimeBodyItemDropRule.cs
@@ -1,30 +_,34 @@
 using System.Collections.Generic;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.ItemDropRules;
 
+// TML: Made to inherit BaseItemDropRule instead of IItemDropRule
-public class SlimeBodyItemDropRule : IItemDropRule
+public class SlimeBodyItemDropRule : BaseItemDropRule
 {
-	public List<IItemDropRuleChainAttempt> ChainedRules { get; private set; }
+	// public List<IItemDropRuleChainAttempt> ChainedRules { get; private set; }
 
 	public SlimeBodyItemDropRule()
 	{
-		ChainedRules = new List<IItemDropRuleChainAttempt>();
+		// ChainedRules = new List<IItemDropRuleChainAttempt>();
 	}
 
+	// TML: Added override
-	public bool CanDrop(DropAttemptInfo info)
+	public override bool CanDrop(DropAttemptInfo info)
 	{
 		if (info.npc.type == 1 && info.npc.ai[1] > 0f)
-			return info.npc.ai[1] < (float)ItemID.Count;
+			return info.npc.ai[1] < (float)ItemLoader.ItemCount;
 
 		return false;
 	}
 
+	// TML: Added override
-	public ItemDropAttemptResult TryDroppingItem(DropAttemptInfo info)
+	public override ItemDropAttemptResult TryDroppingItem(DropAttemptInfo info)
 	{
 		int itemId = (int)info.npc.ai[1];
 		GetDropInfo(itemId, out var amountDroppedMinimum, out var amountDroppedMaximum);
-		CommonCode.DropItemFromNPC(info.npc, itemId, info.rng.Next(amountDroppedMinimum, amountDroppedMaximum + 1));
+		CommonCode.DropItem(info, itemId, info.rng.Next(amountDroppedMinimum, amountDroppedMaximum + 1));
 		ItemDropAttemptResult result = default(ItemDropAttemptResult);
 		result.State = ItemDropAttemptResultState.Success;
 		return result;
@@ -47,6 +_,7 @@
 				amountDroppedMinimum = 20;
 				amountDroppedMaximum = 45;
 				break;
+			/*
 			case 11:
 			case 12:
 			case 13:
@@ -58,6 +_,7 @@
 				amountDroppedMinimum = 3;
 				amountDroppedMaximum = 13;
 				break;
+			*/
 			case 71:
 				amountDroppedMinimum = 50;
 				amountDroppedMaximum = 99;
@@ -76,9 +_,14 @@
 				amountDroppedMaximum = 5;
 				break;
 		}
+		if (ItemID.Sets.OreDropsFromSlime.TryGetValue(itemId, out var minMaxStack)) { // TML
+			amountDroppedMinimum = minMaxStack.minStack;
+			amountDroppedMaximum = minMaxStack.maxStack;
+		}
 	}
 
+	// TML: Added override
-	public void ReportDroprates(List<DropRateInfo> drops, DropRateInfoChainFeed ratesInfo)
+	public override void ReportDroprates(List<DropRateInfo> drops, DropRateInfoChainFeed ratesInfo)
 	{
 		Chains.ReportDroprates(ChainedRules, 1f, drops, ratesInfo);
 	}
