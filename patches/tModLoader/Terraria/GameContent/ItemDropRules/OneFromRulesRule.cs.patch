--- src/TerrariaNetCore/Terraria/GameContent/ItemDropRules/OneFromRulesRule.cs
+++ src/tModLoader/Terraria/GameContent/ItemDropRules/OneFromRulesRule.cs
@@ -1,24 +_,33 @@
 using System.Collections.Generic;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.ItemDropRules;
 
+// TML: Made to inherit BaseItemDropRule instead of IItemDropRule
-public class OneFromRulesRule : IItemDropRule, INestedItemDropRule
+public class OneFromRulesRule : BaseItemDropRule, INestedItemDropRule
 {
 	public IItemDropRule[] options;
 	public int chanceDenominator;
+	public int chanceNumerator; // Added by TML.
 
-	public List<IItemDropRuleChainAttempt> ChainedRules { get; private set; }
+	// public List<IItemDropRuleChainAttempt> ChainedRules { get; private set; }
 
 	public OneFromRulesRule(int chanceDenominator, params IItemDropRule[] options)
+		: this(chanceDenominator, 1, options) { }
+
+	// Overload added by TML, above turned into a redirect to this.
+	public OneFromRulesRule(int chanceDenominator, int chanceNumerator, params IItemDropRule[] options)
 	{
 		this.chanceDenominator = chanceDenominator;
+		this.chanceNumerator = chanceNumerator;
 		this.options = options;
-		ChainedRules = new List<IItemDropRuleChainAttempt>();
+		// ChainedRules = new List<IItemDropRuleChainAttempt>();
 	}
 
-	public bool CanDrop(DropAttemptInfo info) => true;
+	// public bool CanDrop(DropAttemptInfo info) => true;
 
+	// TML: Added override
-	public ItemDropAttemptResult TryDroppingItem(DropAttemptInfo info)
+	public override ItemDropAttemptResult TryDroppingItem(DropAttemptInfo info)
 	{
 		ItemDropAttemptResult result = default(ItemDropAttemptResult);
 		result.State = ItemDropAttemptResultState.DidNotRunCode;
@@ -29,7 +_,11 @@
 	{
 		int num = -1;
 		ItemDropAttemptResult result;
+		/*
 		if (info.rng.Next(chanceDenominator) == 0) {
+		*/
+
+		if (info.rng.Next(chanceDenominator) < chanceNumerator) {
 			num = info.rng.Next(options.Length);
 			resolveAction(options[num], info);
 			result = default(ItemDropAttemptResult);
@@ -42,9 +_,11 @@
 		return result;
 	}
 
+	// TML: Added override
-	public void ReportDroprates(List<DropRateInfo> drops, DropRateInfoChainFeed ratesInfo)
+	public override void ReportDroprates(List<DropRateInfo> drops, DropRateInfoChainFeed ratesInfo)
 	{
+		//TML: chanceNumerator inserted in place of '1.0'.
-		float num = 1f / (float)chanceDenominator;
+		float num = chanceNumerator / (float)chanceDenominator;
 		float num2 = num * ratesInfo.parentDroprateChance;
 		float multiplier = 1f / (float)options.Length * num2;
 		for (int i = 0; i < options.Length; i++) {
