--- src/TerrariaNetCore/Terraria/GameContent/UI/ResourceSets/ClassicPlayerResourcesDisplaySet.cs
+++ src/tModLoader/Terraria/GameContent/UI/ResourceSets/ClassicPlayerResourcesDisplaySet.cs
@@ -7,8 +_,10 @@
 {
 	public class ClassicPlayerResourcesDisplaySet : IPlayerResourcesDisplaySet, IConfigKeyHolder
 	{
+		/*
-		private int UIDisplay_ManaPerStar = 20;
+		private float UIDisplay_ManaPerStar = 20;
 		private float UIDisplay_LifePerHeart = 20f;
+		*/
 		private int UI_ScreenAnchorX;
 
 		public string NameKey {
@@ -36,10 +_,17 @@
 			Player localPlayer = Main.LocalPlayer;
 			SpriteBatch spriteBatch = Main.spriteBatch;
 			Color color = new Color(Main.mouseTextColor, Main.mouseTextColor, Main.mouseTextColor, Main.mouseTextColor);
-			UIDisplay_LifePerHeart = 20f;
-			if (localPlayer.ghost)
+			float UIDisplay_LifePerHeart = 20f;
+			PlayerStatsSnapshot snapshot = new PlayerStatsSnapshot(localPlayer);
+
+			//Added additional condition for zero/negative max life, since DrawMana does it as well
+			if (localPlayer.ghost || snapshot.LifeMax <= 0 || snapshot.AmountOfHearts <= 0)
 				return;
 
+			UIDisplay_LifePerHeart = snapshot.LifePerSegment;
+			int num2 = snapshot.LifeFruitCount;
+
+			/*
 			int num = localPlayer.statLifeMax / 20;
 			int num2 = (localPlayer.statLifeMax - 400) / 5;
 			if (num2 < 0)
@@ -52,28 +_,29 @@
 
 			int num3 = localPlayer.statLifeMax2 - localPlayer.statLifeMax;
 			UIDisplay_LifePerHeart += num3 / num;
+			*/
-			int num4 = (int)((float)localPlayer.statLifeMax2 / UIDisplay_LifePerHeart);
+			int num4 = (int)((float)snapshot.LifeMax / UIDisplay_LifePerHeart);
 			if (num4 >= 10)
 				num4 = 10;
 
-			string text = Lang.inter[0].Value + " " + localPlayer.statLifeMax2 + "/" + localPlayer.statLifeMax2;
+			string text = Lang.inter[0].Value + " " + snapshot.LifeMax + "/" + snapshot.LifeMax;
 			Vector2 vector = FontAssets.MouseText.Value.MeasureString(text);
 			if (!localPlayer.ghost) {
 				spriteBatch.DrawString(FontAssets.MouseText.Value, Lang.inter[0].Value, new Vector2((float)(500 + 13 * num4) - vector.X * 0.5f + (float)UI_ScreenAnchorX, 6f), color, 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
-				spriteBatch.DrawString(FontAssets.MouseText.Value, localPlayer.statLife + "/" + localPlayer.statLifeMax2, new Vector2((float)(500 + 13 * num4) + vector.X * 0.5f + (float)UI_ScreenAnchorX, 6f), color, 0f, new Vector2(FontAssets.MouseText.Value.MeasureString(localPlayer.statLife + "/" + localPlayer.statLifeMax2).X, 0f), 1f, SpriteEffects.None, 0f);
+				spriteBatch.DrawString(FontAssets.MouseText.Value, snapshot.Life + "/" + snapshot.LifeMax, new Vector2((float)(500 + 13 * num4) + vector.X * 0.5f + (float)UI_ScreenAnchorX, 6f), color, 0f, new Vector2(FontAssets.MouseText.Value.MeasureString(snapshot.Life + "/" + snapshot.LifeMax).X, 0f), 1f, SpriteEffects.None, 0f);
 			}
 
-			for (int i = 1; i < (int)((float)localPlayer.statLifeMax2 / UIDisplay_LifePerHeart) + 1; i++) {
+			for (int i = 1; i < snapshot.AmountOfHearts + 1; i++) {
 				int num5 = 255;
 				float num6 = 1f;
 				bool flag = false;
-				if ((float)localPlayer.statLife >= (float)i * UIDisplay_LifePerHeart) {
+				if ((float)snapshot.Life >= (float)i * UIDisplay_LifePerHeart) {
 					num5 = 255;
-					if ((float)localPlayer.statLife == (float)i * UIDisplay_LifePerHeart)
+					if ((float)snapshot.Life == (float)i * UIDisplay_LifePerHeart)
 						flag = true;
 				}
 				else {
-					float num7 = ((float)localPlayer.statLife - (float)(i - 1) * UIDisplay_LifePerHeart) / UIDisplay_LifePerHeart;
+					float num7 = ((float)snapshot.Life - (float)(i - 1) * UIDisplay_LifePerHeart) / UIDisplay_LifePerHeart;
 					num5 = (int)(30f + 225f * num7);
 					if (num5 < 30)
 						num5 = 30;
@@ -113,8 +_,9 @@
 			Player localPlayer = Main.LocalPlayer;
 			SpriteBatch spriteBatch = Main.spriteBatch;
 			Color color = new Color(Main.mouseTextColor, Main.mouseTextColor, Main.mouseTextColor, Main.mouseTextColor);
-			UIDisplay_ManaPerStar = 20;
-			if (localPlayer.ghost || localPlayer.statManaMax2 <= 0)
+			PlayerStatsSnapshot snapshot = new PlayerStatsSnapshot(localPlayer);
+			float UIDisplay_ManaPerStar = snapshot.ManaPerSegment;
+			if (localPlayer.ghost || snapshot.ManaMax <= 0 || snapshot.AmountOfManaStars <= 0)
 				return;
 
 			_ = localPlayer.statManaMax2 / 20;
@@ -124,17 +_,17 @@
 				num = (int)vector.X + 5;
 
 			spriteBatch.DrawString(FontAssets.MouseText.Value, Lang.inter[2].Value, new Vector2(800 - num + UI_ScreenAnchorX, 6f), color, 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
-			for (int i = 1; i < localPlayer.statManaMax2 / UIDisplay_ManaPerStar + 1; i++) {
+			for (int i = 1; i < snapshot.AmountOfManaStars + 1; i++) {
 				int num2 = 255;
 				bool flag = false;
 				float num3 = 1f;
-				if (localPlayer.statMana >= i * UIDisplay_ManaPerStar) {
+				if (snapshot.Mana >= i * UIDisplay_ManaPerStar) {
 					num2 = 255;
-					if (localPlayer.statMana == i * UIDisplay_ManaPerStar)
+					if (snapshot.Mana == i * UIDisplay_ManaPerStar)
 						flag = true;
 				}
 				else {
-					float num4 = (float)(localPlayer.statMana - (i - 1) * UIDisplay_ManaPerStar) / (float)UIDisplay_ManaPerStar;
+					float num4 = (float)(snapshot.Mana - (i - 1) * UIDisplay_ManaPerStar) / (float)UIDisplay_ManaPerStar;
 					num2 = (int)(30f + 225f * num4);
 					if (num2 < 30)
 						num2 = 30;
@@ -158,9 +_,12 @@
 		public void TryToHover() {
 			Vector2 mouseScreen = Main.MouseScreen;
 			Player localPlayer = Main.LocalPlayer;
-			int num = 26 * localPlayer.statLifeMax2 / (int)UIDisplay_LifePerHeart;
-			int num2 = 0;
-			if (localPlayer.statLifeMax2 > 200) {
+
+			PlayerStatsSnapshot snapshot = new PlayerStatsSnapshot(localPlayer);
+
+			int num = 26 * snapshot.AmountOfHearts;
+			float num2 = 0;
+			if (snapshot.AmountOfHearts > 10) {
 				num = 260;
 				num2 += 26;
 			}
@@ -169,7 +_,7 @@
 				CommonResourceBarMethods.DrawLifeMouseOver();
 
 			num = 24;
-			num2 = 28 * localPlayer.statManaMax2 / UIDisplay_ManaPerStar;
+			num2 = 28 * snapshot.AmountOfManaStars;
 			if (mouseScreen.X > (float)(762 + UI_ScreenAnchorX) && mouseScreen.X < (float)(762 + num + UI_ScreenAnchorX) && mouseScreen.Y > 30f && mouseScreen.Y < (float)(30 + num2))
 				CommonResourceBarMethods.DrawManaMouseOver();
 		}
