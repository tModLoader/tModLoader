--- src/Terraria/Terraria/GameContent/UI/Elements/UICharacterListItem.cs
+++ src/tModLoader/Terraria/GameContent/UI/Elements/UICharacterListItem.cs
@@ -8,6 +_,10 @@
 using Terraria.Localization;
 using Terraria.Social;
 using Terraria.UI;
+using Terraria.Utilities;
+using Terraria.ModLoader;
+using System.Linq;
+using Terraria.ModLoader.UI;
 
 namespace Terraria.GameContent.UI.Elements
 {
@@ -26,6 +_,9 @@
 		private Asset<Texture2D> _buttonPlayTexture;
 		private Asset<Texture2D> _buttonRenameTexture;
 		private Asset<Texture2D> _buttonDeleteTexture;
+		private Asset<Texture2D> _errorTexture;
+		private Asset<Texture2D> _configTexture;
+		private ulong _fileSize;
 		private UIImageButton _deleteButton;
 
 		public bool IsFavorite => _data.IsFavorite;
@@ -41,6 +_,9 @@
 			_buttonPlayTexture = Main.Assets.Request<Texture2D>("Images/UI/ButtonPlay");
 			_buttonRenameTexture = Main.Assets.Request<Texture2D>("Images/UI/ButtonRename");
 			_buttonDeleteTexture = Main.Assets.Request<Texture2D>("Images/UI/ButtonDelete");
+			_errorTexture = UICommon.ButtonErrorTexture;
+			_configTexture = UICommon.ButtonConfigTexture;
+			_fileSize = (ulong)FileUtilities.GetFileSize(data.Path, data.IsCloudSave);
 			Height.Set(96f, 0f);
 			Width.Set(0f, 1f);
 			SetPadding(6f);
@@ -101,6 +_,73 @@
 			_deleteButton = uIImageButton5;
 			Append(uIImageButton5);
 			num += 4f;
+			if (data.customDataFail != null) {
+				UIImageButton errorButton = new UIImageButton(_errorTexture);
+				errorButton.VAlign = 1f;
+				errorButton.HAlign = 1f;
+				errorButton.Left.Set(-24f, 0f);
+				errorButton.OnClick += new MouseEvent(ErrorButtonClick);
+				errorButton.OnMouseOver += new MouseEvent(ErrorMouseOver);
+				errorButton.OnMouseOut += new MouseEvent(DeleteMouseOut);
+				Append(errorButton);
+			}
+
+			if (data.Player.usedMods != null) {
+				var currentModNames = ModLoader.ModLoader.Mods.Select(m => m.Name).ToArray();
+				var missingMods = data.Player.usedMods.Except(currentModNames).ToList();
+				var newMods = currentModNames.Except(new[] { "ModLoader" }).Except(data.Player.usedMods).ToList();
+				if (missingMods.Count > 0 || newMods.Count > 0) {
+					UIText warningLabel = new UIText("", 1f, false) {
+						VAlign = 0f,
+						HAlign = 1f
+					};
+
+					warningLabel.Left.Set(-30f, 0f);
+					warningLabel.Top.Set(3f, 0f);
+					Append(warningLabel);
+					UIImageButton modListWarning = new UIImageButton(_errorTexture) {
+						VAlign = 0f,
+						HAlign = 1f
+					};
+
+					modListWarning.Top.Set(-2f, 0f);
+					System.Text.StringBuilder fullSB = new System.Text.StringBuilder(Language.GetTextValue("tModLoader.ModsDifferentSinceLastPlay"));
+					System.Text.StringBuilder shortSB = new System.Text.StringBuilder();
+					if (missingMods.Count > 0) {
+						shortSB.Append(missingMods.Count > 1 ? Language.GetTextValue("tModLoader.MissingXMods", missingMods.Count) : Language.GetTextValue("tModLoader.Missing1Mod"));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.MissingModsListing", string.Join("\n", missingMods.Select(x => "- " + x))));
+					}
+
+					if (newMods.Count > 0) {
+						shortSB.Append(" " + (newMods.Count > 1 ? Language.GetTextValue("tModLoader.NewXMods", newMods.Count) : Language.GetTextValue("tModLoader.New1Mod")));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.NewModsListing", string.Join("\n", newMods.Select(x => "- " + x))));
+					}
+
+					string warning = shortSB.ToString();
+					string fullWarning = fullSB.ToString();
+					modListWarning.OnMouseOver += (a, b) => warningLabel.SetText(warning);
+					modListWarning.OnMouseOut += (a, b) => warningLabel.SetText("");
+					modListWarning.OnClick += (a, b) => {
+						Interface.infoMessage.Show(fullWarning, 888, Main._characterSelectMenu);
+					};
+
+					Append(modListWarning);
+				}
+			}
+
+			int buttonLabelLeft = 80;
+			//if(ConfigManager.Configs.Count > 0)
+			//{
+			//	UIImageButton configButton = new UIImageButton(this._configTexture);
+			//	configButton.VAlign = 1f;
+			//	configButton.Left.Set(76, 0f);
+			//	configButton.OnClick += new UIElement.MouseEvent(this.ConfigButtonClick);
+			//	configButton.OnMouseOver += new UIElement.MouseEvent(this.ConfigMouseOver);
+			//	configButton.OnMouseOut += new UIElement.MouseEvent(this.ButtonMouseOut);
+			//	base.Append(configButton);
+
+			//	buttonLabelLeft += 24;
+			//}
 			_buttonLabel = new UIText("");
 			_buttonLabel.VAlign = 1f;
 			_buttonLabel.Left.Set(num, 0f);
@@ -109,7 +_,7 @@
 			_deleteButtonLabel = new UIText("");
 			_deleteButtonLabel.VAlign = 1f;
 			_deleteButtonLabel.HAlign = 1f;
-			_deleteButtonLabel.Left.Set(-30f, 0f);
+			_deleteButtonLabel.Left.Set(data.customDataFail == null ? -30f : -54f, 0f);
 			_deleteButtonLabel.Top.Set(-3f, 0f);
 			Append(_deleteButtonLabel);
 			uIImageButton.SetSnapPoint("Play", snapPointIndex);
@@ -132,8 +_,12 @@
 		private void CloudMouseOver(UIMouseEvent evt, UIElement listeningElement) {
 			if (_data.IsCloudSave)
 				_buttonLabel.SetText(Language.GetTextValue("UI.MoveOffCloud"));
-			else
-				_buttonLabel.SetText(Language.GetTextValue("UI.MoveToCloud"));
+			else {
+				if (!ModLoader.Engine.Steam.CheckSteamCloudStorageSufficient(_fileSize))
+					_buttonLabel.SetText(Language.GetTextValue("tModLoader.CloudWarning"));
+				else
+					_buttonLabel.SetText(Language.GetTextValue("UI.MoveToCloud"));
+			}
 		}
 
 		private void PlayMouseOver(UIMouseEvent evt, UIElement listeningElement) {
@@ -147,6 +_,14 @@
 				_deleteButtonLabel.SetText(Language.GetTextValue("UI.Delete"));
 		}
 
+		private void ErrorMouseOver(UIMouseEvent evt, UIElement listeningElement) {
+			_deleteButtonLabel.SetText(_data.customDataFail.modName + " Error");
+		}
+
+		private void ConfigMouseOver(UIMouseEvent evt, UIElement listeningElement) {
+			_buttonLabel.SetText("Edit Player Config");
+		}
+
 		private void DeleteMouseOut(UIMouseEvent evt, UIElement listeningElement) {
 			_deleteButtonLabel.SetText("");
 		}
@@ -178,8 +_,12 @@
 		private void CloudButtonClick(UIMouseEvent evt, UIElement listeningElement) {
 			if (_data.IsCloudSave)
 				_data.MoveToLocal();
-			else
+			else {
+				ModLoader.Engine.Steam.RecalculateAvailableSteamCloudStorage(); //Only recalculate when about to put the file to cloud
+				if (!ModLoader.Engine.Steam.CheckSteamCloudStorageSufficient(_fileSize))
+					return; //Don't allow both the move to cloud, and the setting of the label
 				_data.MoveToCloud();
+			}
 
 			((UIImageButton)evt.Target).SetImage(_data.IsCloudSave ? _buttonCloudActiveTexture : _buttonCloudInactiveTexture);
 			if (_data.IsCloudSave)
@@ -228,6 +_,13 @@
 			(base.Parent.Parent as UIList)?.UpdateOrder();
 		}
 
+		private void ErrorButtonClick(UIMouseEvent evt, UIElement listeningElement) {
+			Logging.Terraria.Error(Language.GetTextValue("tModLoader.PlayerCustomDataFail"), _data.customDataFail.InnerException);
+		}
+
+		private void ConfigButtonClick(UIMouseEvent evt, UIElement listeningElement) {
+		}
+
 		public override int CompareTo(object obj) {
 			UICharacterListItem uICharacterListItem = obj as UICharacterListItem;
 			if (uICharacterListItem != null) {
@@ -279,11 +_,11 @@
 			DrawPanel(spriteBatch, vector2, num2);
 			spriteBatch.Draw(TextureAssets.Heart.Value, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)TextureAssets.Heart.Width();
-			Utils.DrawBorderString(spriteBatch, _data.Player.statLifeMax + Language.GetTextValue("GameUI.PlayerLifeMax"), vector2 + new Vector2(0f, 3f), Color.White);
+			Utils.DrawBorderString(spriteBatch, _data.Player.statLifeMax2 + Language.GetTextValue("GameUI.PlayerLifeMax"), vector2 + new Vector2(0f, 3f), Color.White);
 			vector2.X += 65f;
 			spriteBatch.Draw(TextureAssets.Mana.Value, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)TextureAssets.Mana.Width();
-			Utils.DrawBorderString(spriteBatch, _data.Player.statManaMax + Language.GetTextValue("GameUI.PlayerManaMax"), vector2 + new Vector2(0f, 3f), Color.White);
+			Utils.DrawBorderString(spriteBatch, _data.Player.statManaMax2 + Language.GetTextValue("GameUI.PlayerManaMax"), vector2 + new Vector2(0f, 3f), Color.White);
 			vector.X += num2 + 5f;
 			Vector2 vector3 = vector;
 			float num3 = 140f;
