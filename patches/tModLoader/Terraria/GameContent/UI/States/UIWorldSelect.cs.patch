--- src/TerrariaNetCore/Terraria/GameContent/UI/States/UIWorldSelect.cs
+++ src/tModLoader/Terraria/GameContent/UI/States/UIWorldSelect.cs
@@ -2,8 +_,10 @@
 using Microsoft.Xna.Framework.Graphics;
 using System;
 using System.Collections.Generic;
+using System.IO;
 using System.Linq;
 using Terraria.Audio;
+using System.Threading.Tasks;
 using Terraria.GameContent.UI.Elements;
 using Terraria.GameInput;
 using Terraria.ID;
@@ -25,6 +_,7 @@
 		private bool _isScrollbarAttached;
 		private List<Tuple<string, bool>> favoritesCache = new List<Tuple<string, bool>>();
 		private bool skipDraw;
+		private static bool _currentlyMigratingFiles;
 
 		public override void OnInitialize() {
 			UIElement uIElement = new UIElement();
@@ -132,6 +_,49 @@
 			int num = 0;
 			foreach (WorldFileData item in orderedEnumerable) {
 				_worldList.Add(new UIWorldListItem(item, num++, CanWorldBePlayed(item)));
+			}
+
+			if (!orderedEnumerable.Any()) {
+				string vanillaWorldsPath = Path.Combine(ReLogic.OS.Platform.Get<ReLogic.OS.IPathService>().GetStoragePath("Terraria"), "Worlds");
+				if (Directory.Exists(vanillaWorldsPath) && Directory.GetFiles(vanillaWorldsPath, "*.wld").Any()) {
+					var autoMigrateButton = new UIPanel();
+					autoMigrateButton.Width.Set(0, 1);
+					autoMigrateButton.Height.Set(50, 0);
+					var migrateText = new UIText(!_currentlyMigratingFiles
+						? Language.GetText("tModLoader.MigrateWorldsText")
+						: Language.GetText("tModLoader.MigratingWorldsText"));
+
+					autoMigrateButton.OnClick += (a, b) => {
+						if (!_currentlyMigratingFiles) {
+							_currentlyMigratingFiles = true;
+							migrateText.SetText(Language.GetText("tModLoader.MigratingWorldsText"));
+							Task.Factory.StartNew(() => {
+								var vanillaWorldFiles = Directory.GetFiles(vanillaWorldsPath, "*.*")
+									.Where(s => s.EndsWith(".wld") || s.EndsWith(".twld") || s.EndsWith(".bak"));
+
+								foreach (string file in vanillaWorldFiles) {
+									File.Copy(file, Path.Combine(Main.WorldPath, Path.GetFileName(file)), true);
+								}
+
+								_currentlyMigratingFiles = false;
+								Main.menuMode = 6;
+							}, TaskCreationOptions.PreferFairness);
+						}
+					};
+
+					autoMigrateButton.Append(migrateText);
+					_worldList.Add(autoMigrateButton);
+					var noWorldsMessage = new UIText(Language.GetText("tModLoader.MigrateWorldsMessage"));
+					noWorldsMessage.Width.Set(0, 1);
+					noWorldsMessage.Height.Set(300, 0);
+					noWorldsMessage.MarginTop = 20f;
+					noWorldsMessage.OnClick += (a, b) => {
+						Utils.OpenFolder(Main.WorldPath);
+						Utils.OpenFolder(vanillaWorldsPath);
+					};
+
+					_worldList.Add(noWorldsMessage);
+				}
 			}
 		}
 
