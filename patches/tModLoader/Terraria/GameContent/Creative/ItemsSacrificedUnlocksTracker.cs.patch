--- src/TerrariaNetCore/Terraria/GameContent/Creative/ItemsSacrificedUnlocksTracker.cs
+++ src/tModLoader/Terraria/GameContent/Creative/ItemsSacrificedUnlocksTracker.cs
@@ -1,5 +_,6 @@
 using System.Collections.Generic;
 using System.IO;
+using System.Linq;
 using Terraria.ID;
 
 namespace Terraria.GameContent.Creative
@@ -7,7 +_,7 @@
 	public class ItemsSacrificedUnlocksTracker : IPersistentPerWorldContent, IOnPlayerJoining
 	{
 		public const int POSITIVE_SACRIFICE_COUNT_CAP = 9999;
-		private Dictionary<string, int> _sacrificeCountByItemPersistentId;
+		internal Dictionary<string, int> _sacrificeCountByItemPersistentId;
 		public readonly Dictionary<int, int> SacrificesCountByItemIdCache;
 
 		public int LastEditId {
@@ -47,7 +_,11 @@
 		}
 
 		public void Save(BinaryWriter writer) {
-			Dictionary<string, int> dictionary = new Dictionary<string, int>(_sacrificeCountByItemPersistentId);
+			//Only include vanilla items in the dictionary.
+			Dictionary<string, int> dictionary = _sacrificeCountByItemPersistentId
+				.Where(pair => ContentSamples.ItemNetIdsByPersistentIds.TryGetValue(pair.Key, out int netID) && ContentSamples.ItemsByType.TryGetValue(netID, out Item realItem) && realItem.ModItem == null)
+				.ToDictionary(pair => pair.Key, pair => pair.Value);
+
 			writer.Write(dictionary.Count);
 			foreach (KeyValuePair<string, int> item in dictionary) {
 				writer.Write(item.Key);
