--- src/TerrariaNetCore/Terraria/GameContent/Events/Sandstorm.cs
+++ src/tModLoader/Terraria/GameContent/Events/Sandstorm.cs
@@ -10,7 +_,7 @@
 	private const int SANDSTORM_DURATION_MINIMUM = 28800;
 	private const int SANDSTORM_DURATION_MAXIMUM = 86400;
 	public static bool Happening;
-	public static int TimeLeft;
+	public static double TimeLeft; //TML: Changed from int to double.
 	public static float Severity;
 	public static float IntendedSeverity;
 	private static bool _effectsUp;
@@ -29,9 +_,10 @@
 				if (TimeLeft > 86400)
 					TimeLeft = 0;
 
-				TimeLeft -= Main.dayRate;
+				TimeLeft -= Main.desiredWorldEventsUpdateRate;
+
 				if (!HasSufficientWind())
-					TimeLeft -= 15 * Main.dayRate;
+					TimeLeft -= 15 * Main.desiredWorldEventsUpdateRate;
 
 				if (Main.windSpeedCurrent == 0f)
 					TimeLeft = 0;
@@ -43,7 +_,7 @@
 				int num = 21600;
 				num = ((!Main.hardMode) ? (num * 3) : (num * 2));
 				if (HasSufficientWind()) {
-					for (int i = 0; i < Main.dayRate; i++) {
+					for (int i = 0; i < Main.worldEventUpdates; i++) {
 						if (Main.rand.Next(num) == 0)
 							StartSandstorm();
 					}
@@ -85,14 +_,20 @@
 			Severity = IntendedSeverity;
 	}
 
+	/// <summary>
+	/// Starts sandstorm for a random amount of time. Should be called on the server (netMode != client) - the method syncs it automatically.
+	/// </summary>
-	private static void StartSandstorm()
+	public static void StartSandstorm()
 	{
 		Happening = true;
 		TimeLeft = Main.rand.Next(28800, 86401);
 		ChangeSeverityIntentions();
 	}
 
+	/// <summary>
+	/// Stops sandstorm. Should be called on the server (netMode != client) - the method syncs it automatically.
+	/// </summary>
-	private static void StopSandstorm()
+	public static void StopSandstorm()
 	{
 		Happening = false;
 		TimeLeft = 0;
