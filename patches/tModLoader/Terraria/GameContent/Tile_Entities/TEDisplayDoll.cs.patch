--- src/TerrariaNetCore/Terraria/GameContent/Tile_Entities/TEDisplayDoll.cs
+++ src/tModLoader/Terraria/GameContent/Tile_Entities/TEDisplayDoll.cs
@@ -4,11 +_,13 @@
 using Terraria.Audio;
 using Terraria.DataStructures;
 using Terraria.GameInput;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 using Terraria.UI;
 
 namespace Terraria.GameContent.Tile_Entities;
 
-public class TEDisplayDoll : TileEntity, IFixLoadedData
+public sealed partial class TEDisplayDoll : TileEntity, IFixLoadedData
 {
 	private static byte _myEntityID;
 	private const int MyTileID = 470;
@@ -118,8 +_,8 @@
 		for (int i = 0; i < 8; i++) {
 			Item item = _items[i];
 			if (!item.IsAir) {
-				writer.Write((short)item.netID);
-				writer.Write(item.prefix);
+				ItemIO.WriteShortVanillaID(item, writer);
+				ItemIO.WriteByteVanillaPrefix(item, writer);
 				writer.Write((short)item.stack);
 			}
 		}
@@ -127,8 +_,8 @@
 		for (int j = 0; j < 8; j++) {
 			Item item2 = _dyes[j];
 			if (!item2.IsAir) {
-				writer.Write((short)item2.netID);
-				writer.Write(item2.prefix);
+				ItemIO.WriteShortVanillaID(item2, writer);
+				ItemIO.WriteByteVanillaPrefix(item2, writer);
 				writer.Write((short)item2.stack);
 			}
 		}
@@ -459,6 +_,11 @@
 		if (dye)
 			item = _dyes[itemIndex];
 
+		if (!ModNet.AllowVanillaClients) {
+			ItemIO.Send(item, writer, writeStack: true);
+			return;
+		}
+
 		writer.Write((ushort)item.netID);
 		writer.Write((ushort)item.stack);
 		writer.Write(item.prefix);
@@ -466,12 +_,16 @@
 
 	public void ReadItem(int itemIndex, BinaryReader reader, bool dye)
 	{
+		Item item = (dye ? _dyes : _items)[itemIndex];
+
+		if (!ModNet.AllowVanillaClients) {
+			ItemIO.Receive(item, reader, readStack: true);
+			return;
+		}
+
 		int defaults = reader.ReadUInt16();
 		int stack = reader.ReadUInt16();
 		int prefixWeWant = reader.ReadByte();
-		Item item = _items[itemIndex];
-		if (dye)
-			item = _dyes[itemIndex];
 
 		item.SetDefaults(defaults);
 		item.stack = stack;
