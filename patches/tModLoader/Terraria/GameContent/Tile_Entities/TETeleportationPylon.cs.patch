--- src/TerrariaNetCore/Terraria/GameContent/Tile_Entities/TETeleportationPylon.cs
+++ src/tModLoader/Terraria/GameContent/Tile_Entities/TETeleportationPylon.cs
@@ -1,8 +_,9 @@
 using Terraria.DataStructures;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.Tile_Entities
 {
-	public class TETeleportationPylon : TileEntity
+	public sealed class TETeleportationPylon : TileEntity, IPylonTileEntity
 	{
 		private static byte _myEntityID;
 		private const int MyTileID = 597;
@@ -21,7 +_,12 @@
 				return;
 			}
 
-			if (Main.PylonSystem.HasPylonOfType(pylonType)) {
+			bool? prePlace = PylonLoader.PreCanPlacePylon(x, y, MyTileID, pylonType);
+			if (prePlace is false) {
+				RejectPlacementFromNet(x, y);
+				return;
+			}
+			if (prePlace is null && Main.PylonSystem.HasPylonOfType(pylonType)) {
 				RejectPlacementFromNet(x, y);
 				return;
 			}
@@ -147,6 +_,8 @@
 		}
 
 		public static int PlacementPreviewHook_CheckIfCanPlace(int x, int y, int type = 597, int style = 0, int direction = 1, int alternate = 0) {
+			if (PylonLoader.PreCanPlacePylon(x, y, type, GetPylonTypeFromPylonTileStyle(style)) is bool value)
+				return value ? 0 : 1;
 			TeleportPylonType pylonTypeFromPylonTileStyle = GetPylonTypeFromPylonTileStyle(style);
 			if (Main.PylonSystem.HasPylonOfType(pylonTypeFromPylonTileStyle))
 				return 1;
