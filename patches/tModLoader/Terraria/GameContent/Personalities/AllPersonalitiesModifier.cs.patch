--- src/TerrariaNetCore/Terraria/GameContent/Personalities/AllPersonalitiesModifier.cs
+++ src/tModLoader/Terraria/GameContent/Personalities/AllPersonalitiesModifier.cs
@@ -1,15 +_,62 @@
 using System.Collections.Generic;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.Personalities
 {
 	public class AllPersonalitiesModifier : IShopPersonalityTrait
 	{
+		// TML-added dummy, used to trick vanilla code into acting like every npc is currently around
+		private struct NearbyNpcsDummy
+		{
+			public bool this[int index] => true;
+		}
+		// TML-added dummy, used to redirect old immediate-time shop price modification code into load-time registration of affections.
+		private readonly struct ShopHelperDummy
+		{
+			public readonly NPCHappiness Happiness;
+
+			public ShopHelperDummy(NPCHappiness happiness) {
+				Happiness = happiness;
+			}
+
+			public void LoveNPC(int npcId)
+				=> Happiness.SetNPCAffection(npcId, AffectionLevel.Love);
+
+			public void LikeNPC(int npcId)
+				=> Happiness.SetNPCAffection(npcId, AffectionLevel.Like);
+
+			public void DislikeNPC(int npcId)
+				=> Happiness.SetNPCAffection(npcId, AffectionLevel.Dislike);
+
+			public void HateNPC(int npcId)
+				=> Happiness.SetNPCAffection(npcId, AffectionLevel.Hate);
+		}
+
 		public void ModifyShopPrice(HelperInfo info, ShopHelper shopHelperInstance) {
+			var npc = info.npc;
+			var npcHappiness = npc.Happiness;
+
 			ModifyShopPrice_Relationships(info, shopHelperInstance);
+
+			/* Disabled until #2083 is addressed. Originally introduced in #1323, but was refactored and now would be for additional features outside PR scope.
+			NPCLoader.ModifyNPCHappiness(npc, primaryPlayerBiome, shopHelperInstance, nearbyNPCsByType);
+			*/
+		}
+
+		internal static void RegisterVanillaNpcRelationships(NPC npc) {
+			var npcHappiness = npc.Happiness;
+			var helperInfo = new HelperInfo() {
+				npc = npc
+			};
+
+			//RegisterNpcToBiomeRelationships(helperInfo, npcHappiness);
+			RegisterNpcToNpcRelationships(helperInfo, npcHappiness);
 		}
 
 		private static void ModifyShopPrice_Relationships(HelperInfo info, ShopHelper shopHelperInstance) {
 			bool[] nearbyNPCsByType = info.nearbyNPCsByType;
+
+			// Princess code
 			if (info.npc.type == 663) {
 				List<int> list = new List<int>();
 				for (int i = 0; i < nearbyNPCsByType.Length; i++) {
@@ -30,6 +_,13 @@
 
 			if (info.npc.type != 663 && nearbyNPCsByType[663])
 				shopHelperInstance.LikePrincess();
+		}
+
+		// [[ Split of the previous method ]]
+
+		private static void RegisterNpcToNpcRelationships(HelperInfo info, NPCHappiness npcHappiness) {
+			NearbyNpcsDummy nearbyNPCsByType = default; // Lies!
+			ShopHelperDummy shopHelperInstance = new(npcHappiness); // LIIIEEESS!!!
 
 			switch (info.npc.type) {
 				case 17:
