--- src/Terraria/Terraria/GameContent/Drawing/WallDrawing.cs
+++ src/tModLoader/Terraria/GameContent/Drawing/WallDrawing.cs
@@ -3,13 +_,14 @@
 using System.Diagnostics;
 using Terraria.Graphics;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria.GameContent.Drawing
 {
 	public class WallDrawing
 	{
 		private static VertexColors _glowPaintColors = new VertexColors(Color.White);
-		private Tile[,] _tileArray;
+		private Tilemap _tileArray;
 		private TilePaintSystemV2 _paintSystem;
 
 		public WallDrawing(TilePaintSystemV2 paintSystem) {
@@ -61,8 +_,9 @@
 			Rectangle value2 = new Rectangle(0, 0, 32, 32);
 			int underworldLayer = Main.UnderworldLayer;
 			Point screenOverdrawOffset = Main.GetScreenOverdrawOffset();
+			// tModLoader - Swapped loop iteration order to improve memory access linearity. Minor perf improvement, may cause slight visual discrepancies with tiles that overdraw
-			for (int i = num7 - num10 + screenOverdrawOffset.Y; i < num8 + num10 - screenOverdrawOffset.Y; i++) {
+			for (int j = num5 - num9 + screenOverdrawOffset.X; j < num6 + num9 - screenOverdrawOffset.X; j++) {
-				for (int j = num5 - num9 + screenOverdrawOffset.X; j < num6 + num9 - screenOverdrawOffset.X; j++) {
+				for (int i = num7 - num10 + screenOverdrawOffset.Y; i < num8 + num10 - screenOverdrawOffset.Y; i++) {
 					Tile tile = _tileArray[j, i];
 					if (tile == null) {
 						tile = new Tile();
@@ -73,6 +_,10 @@
 					if (wall <= 0 || FullTile(j, i))
 						continue;
 
+					if (!WallLoader.PreDraw(j, i, wall, spriteBatch)) {
+						goto PostDraw;
+					}
+
 					Color color = Lighting.GetColor(j, i);
 					if (tile.wallColor() == 31)
 						color = Color.White;
@@ -129,6 +_,9 @@
 						if (flag3)
 							spriteBatch.Draw(TextureAssets.WallOutline.Value, new Vector2(j * 16 - (int)screenPosition.X, i * 16 - (int)screenPosition.Y + 14) + value, new Rectangle(0, 14, 16, 2), color, 0f, Vector2.Zero, 1f, SpriteEffects.None, 0f);
 					}
+
+					PostDraw:
+					WallLoader.PostDraw(j, i, wall, spriteBatch);
 				}
 			}
 
