--- src/TerrariaNetCore/Terraria/DataStructures/PlayerDrawHeadSet.cs
+++ src/tModLoader/Terraria/DataStructures/PlayerDrawHeadSet.cs
@@ -5,9 +_,14 @@
 
 namespace Terraria.DataStructures;
 
+// This struct is basically deleted, and its BoringSetup() is moved into PlayerDrawSet under the name HeadOnlySetup()
+
+/*
 public struct PlayerDrawHeadSet
+*/
+public partial struct PlayerDrawSet
 {
-	public List<DrawData> DrawData;
+	/*public List<DrawData> DrawData;
 	public List<int> Dust;
 	public List<int> Gore;
 	public Player drawPlayer;
@@ -50,30 +_,46 @@
 			return result;
 		}
 	}
+	*/
 
-	public void BoringSetup(Player drawPlayer2, List<DrawData> drawData, List<int> dust, List<int> gore, float X, float Y, float Alpha, float Scale)
+	public void HeadOnlySetup(Player drawPlayer2, List<DrawData> drawData, List<int> dust, List<int> gore, float X, float Y, float Alpha, float Scale)
 	{
+		projectileDrawPosition = -1;
+		headOnlyRender = true;
+
+		/*
 		DrawData = drawData;
 		Dust = dust;
 		Gore = gore;
+		*/
+		DrawDataCache = drawData;
+		DustCache = dust;
+		GoreCache = gore;
+
 		drawPlayer = drawPlayer2;
 		Position = drawPlayer.position;
+		/*
 		cHead = 0;
 		cFace = 0;
 		cUnicornHorn = 0;
 		cAngelHalo = 0;
 		cBeard = 0;
+		*/
+
+		CopyBasicPlayerFields();
+
 		drawUnicornHorn = false;
 		drawAngelHalo = false;
 		skinVar = drawPlayer.skinVariant;
-		hairShaderPacked = PlayerDrawHelper.PackShader(drawPlayer.hairDye, PlayerDrawHelper.ShaderConfiguration.HairShader);
+		hairDyePacked = PlayerDrawHelper.PackShader(drawPlayer.hairDye, PlayerDrawHelper.ShaderConfiguration.HairShader);
 		if (drawPlayer.head == 0 && drawPlayer.hairDye == 0)
-			hairShaderPacked = PlayerDrawHelper.PackShader(1, PlayerDrawHelper.ShaderConfiguration.HairShader);
+			hairDyePacked = PlayerDrawHelper.PackShader(1, PlayerDrawHelper.ShaderConfiguration.HairShader);
 
 		skinDyePacked = drawPlayer.skinDyePacked;
 		if (drawPlayer.face > 0 && drawPlayer.face < ArmorIDs.Face.Count)
 			Main.instance.LoadAccFace(drawPlayer.face);
 
+		/*
 		cHead = drawPlayer.cHead;
 		cFace = drawPlayer.cFace;
 		cFaceHead = drawPlayer.cFaceHead;
@@ -81,10 +_,12 @@
 		cUnicornHorn = drawPlayer.cUnicornHorn;
 		cAngelHalo = drawPlayer.cAngelHalo;
 		cBeard = drawPlayer.cBeard;
+		*/
+
 		drawUnicornHorn = drawPlayer.hasUnicornHorn;
 		drawAngelHalo = drawPlayer.hasAngelHalo;
 		Main.instance.LoadHair(drawPlayer.hair);
-		scale = Scale;
+		//scale = Scale;
 		colorEyeWhites = Main.quickAlpha(Color.White, Alpha);
 		colorEyes = Main.quickAlpha(drawPlayer.eyeColor, Alpha);
 		colorHair = Main.quickAlpha(drawPlayer.GetHairColor(useLighting: false), Alpha);
@@ -100,14 +_,23 @@
 			playerEffect = SpriteEffects.FlipHorizontally;
 
 		headVect = new Vector2((float)drawPlayer.legFrame.Width * 0.5f, (float)drawPlayer.legFrame.Height * 0.4f);
+		/*
 		bodyFrameMemory = drawPlayer.bodyFrame;
 		bodyFrameMemory.Y = 0;
 		Position = Main.screenPosition;
 		Position.X += X;
 		Position.Y += Y;
+		*/
+		Position = new Vector2(X, Y);
 		Position.X -= 6f;
 		Position.Y -= 4f;
 		Position.Y -= drawPlayer.HeightMapOffset;
+
+		SetupHairFrames(); // Important fix for baldness.
+
+		// Workaround for movement bobbing affecting head-only rendering.
+		Position -= Main.OffsetsPlayerHeadgear[drawPlayer.bodyFrame.Y / drawPlayer.bodyFrame.Height];
+
 		if (drawPlayer.head > 0 && drawPlayer.head < ArmorIDs.Head.Count) {
 			Main.instance.LoadArmorHead(drawPlayer.head);
 			int num = ArmorIDs.Head.Sets.FrontToBackID[drawPlayer.head];
@@ -127,12 +_,14 @@
 		if (drawPlayer.beard > 0 && drawPlayer.beard < ArmorIDs.Beard.Count)
 			Main.instance.LoadAccBeard(drawPlayer.beard);
 
-		drawPlayer.GetHairSettings(out fullHair, out hatHair, out hideHair, out var _, out helmetIsOverFullHair);
 		hairOffset = drawPlayer.GetHairDrawOffset(drawPlayer.hair, hatHair);
 		hairOffset.Y *= drawPlayer.Directions.Y;
 		helmetOffset = drawPlayer.GetHelmetDrawOffset();
 		helmetOffset.Y *= drawPlayer.Directions.Y;
+		drawPlayer.GetHairSettings(out fullHair, out hatHair, out hideHair, out backHairDraw, out drawsBackHairWithoutHeadgear);
+		/*
 		helmetIsTall = drawPlayer.head == 14 || drawPlayer.head == 56 || drawPlayer.head == 158;
 		helmetIsNormal = !helmetIsTall && !helmetIsOverFullHair && drawPlayer.head > 0 && drawPlayer.head < ArmorIDs.Head.Count && drawPlayer.head != 28;
+		*/
 	}
 }
