--- src/TerrariaNetCore/Terraria/DataStructures/PlayerDrawLayers.cs
+++ src/tModLoader/Terraria/DataStructures/PlayerDrawLayers.cs
@@ -9,11 +_,12 @@
 using Terraria.Graphics;
 using Terraria.Graphics.Shaders;
 using Terraria.ID;
+using Terraria.ModLoader;
 using Terraria.UI;
 
 namespace Terraria.DataStructures;
 
-public static class PlayerDrawLayers
+public static partial class PlayerDrawLayers
 {
 	private const int DEFAULT_MAX_SPRITES = 200;
 	private static SpriteDrawBuffer spriteBuffer;
@@ -233,7 +_,7 @@
 
 	public static void DrawPlayer_01_3_BackHead(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.head >= 0 && drawinfo.drawPlayer.head < ArmorIDs.Head.Count) {
+		if (drawinfo.drawPlayer.head >= 0) {
 			int num = ArmorIDs.Head.Sets.FrontToBackID[drawinfo.drawPlayer.head];
 			if (num >= 0) {
 				Vector2 helmetOffset = drawinfo.helmetOffset;
@@ -292,6 +_,10 @@
 
 	public static void DrawPlayer_07_LeinforsHairShampoo(ref PlayerDrawSet drawinfo)
 	{
+		if (drawinfo.headOnlyRender) {
+			return;
+		}
+
 		if (drawinfo.drawPlayer.leinforsHair && (drawinfo.fullHair || drawinfo.hatHair || drawinfo.drawsBackHairWithoutHeadgear || drawinfo.drawPlayer.head == -1 || drawinfo.drawPlayer.head == 0) && drawinfo.drawPlayer.hair != 12 && drawinfo.shadow == 0f && Main.rgbToHsl(drawinfo.colorHead).Z > 0.2f) {
 			if (Main.rand.Next(20) == 0 && !drawinfo.hatHair) {
 				Rectangle r = Utils.CenteredRectangle(drawinfo.Position + drawinfo.drawPlayer.Size / 2f + new Vector2(0f, drawinfo.drawPlayer.gravDir * -20f), new Vector2(20f, 14f));
@@ -368,7 +_,7 @@
 			drawinfo.DrawDataCache.Add(item);
 		}
 
-		if (drawinfo.drawPlayer.backpack > 0 && drawinfo.drawPlayer.backpack < ArmorIDs.Back.Count && !drawinfo.drawPlayer.mount.Active) {
+		if (drawinfo.drawPlayer.backpack > 0 && !drawinfo.drawPlayer.mount.Active) {
 			Vector2 vector2 = new Vector2(0f, 8f);
 			Vector2 vec4 = drawinfo.Position - Main.screenPosition + drawinfo.drawPlayer.bodyPosition + new Vector2(drawinfo.drawPlayer.width / 2, drawinfo.drawPlayer.height - drawinfo.drawPlayer.bodyFrame.Height / 2) + new Vector2(0f, -4f) + vector2;
 			vec4 = vec4.Floor();
@@ -448,7 +_,7 @@
 
 	public static void DrawPlayer_08_1_Tails(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.tail > 0 && drawinfo.drawPlayer.tail < ArmorIDs.Back.Count && !drawinfo.drawPlayer.mount.Active) {
+		if (drawinfo.drawPlayer.tail > 0 && !drawinfo.drawPlayer.mount.Active) {
 			Vector2 zero = Vector2.Zero;
 			if (drawinfo.isSitting)
 				zero.Y += -2f;
@@ -464,10 +_,10 @@
 
 	public static void DrawPlayer_10_BackAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.back <= 0 || drawinfo.drawPlayer.back >= ArmorIDs.Back.Count)
+		if (drawinfo.drawPlayer.back <= 0)
 			return;
 
-		if (drawinfo.drawPlayer.front >= 1 && drawinfo.drawPlayer.front <= 4) {
+		if (drawinfo.drawPlayer.front >= 1) {
 			int num = drawinfo.drawPlayer.bodyFrame.Y / 56;
 			if (num < 1 || num > 5) {
 				drawinfo.armorAdjust = 10;
@@ -842,7 +_,7 @@
 
 	public static void DrawPlayer_12_1_BalloonFronts(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.balloonFront <= 0 || drawinfo.drawPlayer.balloonFront >= ArmorIDs.Balloon.Count)
+		if (drawinfo.drawPlayer.balloonFront <= 0)
 			return;
 
 		DrawData item;
@@ -872,7 +_,7 @@
 
 	public static void DrawPlayer_11_Balloons(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.balloon <= 0 || drawinfo.drawPlayer.balloon >= ArmorIDs.Balloon.Count)
+		if (drawinfo.drawPlayer.balloon <= 0)
 			return;
 
 		DrawData item;
@@ -919,7 +_,7 @@
 			drawinfo.Position.Y -= drawinfo.torsoOffset;
 		}
 
-		if (!drawinfo.hidesBottomSkin && !IsBottomOverridden(ref drawinfo)) {
+		if (!drawinfo.hidesBottomSkin && !drawinfo.isBottomOverriden) {
 			if (drawinfo.isSitting) {
 				DrawSittingLegs(ref drawinfo, TextureAssets.Players[drawinfo.skinVar, 10].Value, drawinfo.colorLegs);
 				return;
@@ -930,7 +_,8 @@
 		}
 	}
 
+	//TML: Made internal.
-	public static bool IsBottomOverridden(ref PlayerDrawSet drawinfo)
+	internal static bool IsBottomOverridden(ref PlayerDrawSet drawinfo)
 	{
 		if (ShouldOverrideLegs_CheckPants(ref drawinfo))
 			return true;
@@ -941,8 +_,12 @@
 		return false;
 	}
 
+	//TML: Made private
-	public static bool ShouldOverrideLegs_CheckPants(ref PlayerDrawSet drawinfo)
+	private static bool ShouldOverrideLegs_CheckPants(ref PlayerDrawSet drawinfo)
 	{
+		return drawinfo.drawPlayer.legs > 0 && ArmorIDs.Legs.Sets.OverridesLegs[drawinfo.drawPlayer.legs];
+
+		/*
 		switch (drawinfo.drawPlayer.legs) {
 			case 67:
 			case 106:
@@ -957,15 +_,22 @@
 			default:
 				return false;
 		}
+		*/
 	}
 
+	//TML: Made private
-	public static bool ShouldOverrideLegs_CheckShoes(ref PlayerDrawSet drawinfo)
+	private static bool ShouldOverrideLegs_CheckShoes(ref PlayerDrawSet drawinfo)
 	{
-		sbyte shoe = drawinfo.drawPlayer.shoe;
+		int shoe = drawinfo.drawPlayer.shoe;
+
+		return shoe > 0 && ArmorIDs.Shoe.Sets.OverridesLegs[shoe];
+
+		/*
 		if (shoe == 15)
 			return true;
 
 		return false;
+		*/
 	}
 
 	public static void DrawPlayer_12_Skin_Composite(ref PlayerDrawSet drawinfo)
@@ -998,7 +_,7 @@
 			});
 		}
 
-		if (!drawinfo.hidesBottomSkin && !drawinfo.drawPlayer.invis && !IsBottomOverridden(ref drawinfo)) {
+		if (!drawinfo.hidesBottomSkin && !drawinfo.drawPlayer.invis && !drawinfo.isBottomOverriden) {
 			if (drawinfo.isSitting) {
 				DrawSittingLegs(ref drawinfo, TextureAssets.Players[drawinfo.skinVar, 10].Value, drawinfo.colorLegs, drawinfo.skinDyePacked);
 			}
@@ -1031,7 +_,7 @@
 		float rotation = bodyRotation + drawinfo.compositeBackArmRotation;
 		bool flag = !drawinfo.drawPlayer.invis;
 		bool flag2 = !drawinfo.drawPlayer.invis;
-		bool flag3 = drawinfo.drawPlayer.body > 0 && drawinfo.drawPlayer.body < ArmorIDs.Body.Count;
+		bool flag3 = drawinfo.drawPlayer.body > 0;
 		bool flag4 = !drawinfo.hidesTopSkin;
 		bool flag5 = false;
 		if (flag3) {
@@ -1093,7 +_,7 @@
 			}
 		}
 
-		if (drawinfo.drawPlayer.handoff > 0 && drawinfo.drawPlayer.handoff < ArmorIDs.HandOff.Count) {
+		if (drawinfo.drawPlayer.handoff > 0) {
 			Texture2D value2 = TextureAssets.AccHandsOffComposite[drawinfo.drawPlayer.handoff].Value;
 			DrawCompositeArmorPiece(ref drawinfo, CompositePlayerDrawContext.BackArmAccessory, new DrawData(value2, vector3, drawinfo.compBackArmFrame, drawinfo.colorArmorBody, rotation, bodyVect, 1f, drawinfo.playerEffect) {
 				shader = drawinfo.cHandOff
@@ -1117,7 +_,7 @@
 			return;
 
 		if (drawinfo.isSitting && drawinfo.drawPlayer.legs != 140 && drawinfo.drawPlayer.legs != 217) {
-			if (drawinfo.drawPlayer.legs > 0 && drawinfo.drawPlayer.legs < ArmorIDs.Legs.Count && (!ShouldOverrideLegs_CheckShoes(ref drawinfo) || drawinfo.drawPlayer.wearsRobe)) {
+			if (drawinfo.drawPlayer.legs > 0 && (!ShouldOverrideLegs_CheckShoes(ref drawinfo) || drawinfo.drawPlayer.wearsRobe)) {
 				if (!drawinfo.drawPlayer.invis) {
 					DrawSittingLegs(ref drawinfo, TextureAssets.ArmorLeg[drawinfo.drawPlayer.legs].Value, drawinfo.colorArmorLegs, drawinfo.cLegs);
 					if (drawinfo.legsGlowMask != -1)
@@ -1159,7 +_,7 @@
 				drawinfo.DrawDataCache.Add(item);
 			}
 		}
-		else if (drawinfo.drawPlayer.legs > 0 && drawinfo.drawPlayer.legs < ArmorIDs.Legs.Count && (!ShouldOverrideLegs_CheckShoes(ref drawinfo) || drawinfo.drawPlayer.wearsRobe)) {
+		else if (drawinfo.drawPlayer.legs > 0 && (!ShouldOverrideLegs_CheckShoes(ref drawinfo) || drawinfo.drawPlayer.wearsRobe)) {
 			if (drawinfo.drawPlayer.invis)
 				return;
 
@@ -1295,7 +_,7 @@
 
 	public static void DrawPlayer_14_Shoes(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.shoe <= 0 || drawinfo.drawPlayer.shoe >= ArmorIDs.Shoe.Count || ShouldOverrideLegs_CheckPants(ref drawinfo))
+		if (drawinfo.drawPlayer.shoe <= 0 || ShouldOverrideLegs_CheckPants(ref drawinfo))
 			return;
 
 		int num = drawinfo.cShoe;
@@ -1316,6 +_,10 @@
 
 	public static void DrawPlayer_14_2_GlassSlipperSparkles(ref PlayerDrawSet drawinfo)
 	{
+		if (drawinfo.headOnlyRender) {
+			return;
+		}
+
 		if (drawinfo.shadow == 0f) {
 			if (Main.rand.Next(60) == 0) {
 				Rectangle r = Utils.CenteredRectangle(drawinfo.Position + drawinfo.drawPlayer.Size / 2f + new Vector2(0f, drawinfo.drawPlayer.gravDir * 16f), new Vector2(20f, 8f));
@@ -1341,7 +_,7 @@
 
 	public static void DrawPlayer_15_SkinLongCoat(ref PlayerDrawSet drawinfo)
 	{
-		if ((drawinfo.skinVar == 3 || drawinfo.skinVar == 8 || drawinfo.skinVar == 7) && (drawinfo.drawPlayer.body <= 0 || drawinfo.drawPlayer.body >= ArmorIDs.Body.Count) && !drawinfo.drawPlayer.invis) {
+		if ((drawinfo.skinVar == 3 || drawinfo.skinVar == 8 || drawinfo.skinVar == 7) && (drawinfo.drawPlayer.body <= 0) && !drawinfo.drawPlayer.invis) {
 			if (drawinfo.isSitting) {
 				DrawSittingLegs(ref drawinfo, TextureAssets.Players[drawinfo.skinVar, 14].Value, drawinfo.colorShirt);
 				return;
@@ -1442,7 +_,7 @@
 		if (drawinfo.usesCompositeTorso) {
 			DrawPlayer_17_TorsoComposite(ref drawinfo);
 		}
-		else if (drawinfo.drawPlayer.body > 0 && drawinfo.drawPlayer.body < ArmorIDs.Body.Count) {
+		else if (drawinfo.drawPlayer.body > 0) {
 			Rectangle bodyFrame = drawinfo.drawPlayer.bodyFrame;
 			int num = drawinfo.armorAdjust;
 			bodyFrame.X += num;
@@ -1503,7 +_,7 @@
 		Vector2 compositeOffset_BackArm = GetCompositeOffset_BackArm(ref drawinfo);
 		_ = vector3 + compositeOffset_BackArm;
 		bodyVect += compositeOffset_BackArm;
-		if (drawinfo.drawPlayer.body > 0 && drawinfo.drawPlayer.body < ArmorIDs.Body.Count) {
+		if (drawinfo.drawPlayer.body > 0) {
 			if (!drawinfo.drawPlayer.invis || IsArmorDrawnWhenInvisible(drawinfo.drawPlayer.body)) {
 				Texture2D value = TextureAssets.ArmorBodyComposite[drawinfo.drawPlayer.body].Value;
 				DrawCompositeArmorPiece(ref drawinfo, CompositePlayerDrawContext.Torso, new DrawData(value, vector, drawinfo.compTorsoFrame, drawinfo.colorArmorBody, bodyRotation, drawinfo.bodyVect, 1f, drawinfo.playerEffect) {
@@ -1527,7 +_,7 @@
 
 	public static void DrawPlayer_18_OffhandAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (!drawinfo.usesCompositeBackHandAcc && drawinfo.drawPlayer.handoff > 0 && drawinfo.drawPlayer.handoff < ArmorIDs.HandOff.Count) {
+		if (!drawinfo.usesCompositeBackHandAcc && drawinfo.drawPlayer.handoff > 0) {
 			DrawData item = new DrawData(TextureAssets.AccHandsOff[drawinfo.drawPlayer.handoff].Value, new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.bodyPosition + new Vector2(drawinfo.drawPlayer.bodyFrame.Width / 2, drawinfo.drawPlayer.bodyFrame.Height / 2), drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorBody, drawinfo.drawPlayer.bodyRotation, drawinfo.bodyVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cHandOff;
 			drawinfo.DrawDataCache.Add(item);
@@ -1547,7 +_,7 @@
 
 	public static void DrawPlayer_19_WaistAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.waist > 0 && drawinfo.drawPlayer.waist < ArmorIDs.Waist.Count) {
+		if (drawinfo.drawPlayer.waist > 0) {
 			Rectangle value = drawinfo.drawPlayer.legFrame;
 			if (ArmorIDs.Waist.Sets.UsesTorsoFraming[drawinfo.drawPlayer.waist])
 				value = drawinfo.drawPlayer.bodyFrame;
@@ -1560,7 +_,7 @@
 
 	public static void DrawPlayer_20_NeckAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.neck > 0 && drawinfo.drawPlayer.neck < ArmorIDs.Neck.Count) {
+		if (drawinfo.drawPlayer.neck > 0) {
 			DrawData item = new DrawData(TextureAssets.AccNeck[drawinfo.drawPlayer.neck].Value, new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.bodyPosition + new Vector2(drawinfo.drawPlayer.bodyFrame.Width / 2, drawinfo.drawPlayer.bodyFrame.Height / 2), drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorBody, drawinfo.drawPlayer.bodyRotation, drawinfo.bodyVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cNeck;
 			drawinfo.DrawDataCache.Add(item);
@@ -1571,7 +_,7 @@
 	{
 		Vector2 helmetOffset = drawinfo.helmetOffset;
 		DrawPlayer_21_Head_TheFace(ref drawinfo);
-		bool flag = drawinfo.drawPlayer.head == 14 || drawinfo.drawPlayer.head == 56 || drawinfo.drawPlayer.head == 114 || drawinfo.drawPlayer.head == 158 || drawinfo.drawPlayer.head == 69 || drawinfo.drawPlayer.head == 180;
+		bool flag = drawinfo.drawPlayer.head >= 0 && ArmorIDs.Head.Sets.IsTallHat[drawinfo.drawPlayer.head];
 		bool flag2 = drawinfo.drawPlayer.head == 28;
 		bool flag3 = drawinfo.drawPlayer.head == 39 || drawinfo.drawPlayer.head == 38;
 		Vector2 vector = new Vector2(-drawinfo.drawPlayer.bodyFrame.Width / 2 + drawinfo.drawPlayer.width / 2, drawinfo.drawPlayer.height - drawinfo.drawPlayer.bodyFrame.Height + 4);
@@ -1667,7 +_,7 @@
 				drawinfo.DrawDataCache.Add(item);
 			}
 		}
-		else if (drawinfo.drawPlayer.head > 0 && drawinfo.drawPlayer.head < ArmorIDs.Head.Count && !flag2) {
+		else if (drawinfo.drawPlayer.head > 0 && !flag2) {
 			if (!(drawinfo.drawPlayer.invis && flag3)) {
 				if (drawinfo.drawPlayer.head == 13) {
 					int hatStacks2 = GetHatStacks(ref drawinfo, 205);
@@ -1844,6 +_,11 @@
 				drawinfo.DrawDataCache.Add(item);
 			}
 		}
+	}
+
+	public static void DrawPlayer_21_2_FinchNest(ref PlayerDrawSet drawinfo)
+	{
+		DrawData item;
 
 		if (drawinfo.drawPlayer.babyBird) {
 			Rectangle bodyFrame5 = drawinfo.drawPlayer.bodyFrame;
@@ -1856,7 +_,7 @@
 				vector6 = new Vector2(0f, 6f) * drawinfo.drawPlayer.Directions;
 			}
 
-			DrawData item = new DrawData(TextureAssets.Extra[100].Value, vector6 + new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.headPosition + drawinfo.headVect + Main.OffsetsPlayerHeadgear[drawinfo.drawPlayer.bodyFrame.Y / drawinfo.drawPlayer.bodyFrame.Height] * drawinfo.drawPlayer.gravDir, bodyFrame5, color8, drawinfo.drawPlayer.headRotation, drawinfo.headVect, 1f, drawinfo.playerEffect);
+			item = new DrawData(TextureAssets.Extra[100].Value, vector6 + new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.headPosition + drawinfo.headVect + Main.OffsetsPlayerHeadgear[drawinfo.drawPlayer.bodyFrame.Y / drawinfo.drawPlayer.bodyFrame.Height] * drawinfo.drawPlayer.gravDir, bodyFrame5, color8, drawinfo.drawPlayer.headRotation, drawinfo.headVect, 1f, drawinfo.playerEffect);
 			drawinfo.DrawDataCache.Add(item);
 		}
 	}
@@ -1912,8 +_,12 @@
 
 	private static void DrawPlayer_21_Head_TheFace(ref PlayerDrawSet drawinfo)
 	{
+		/*
 		bool flag = drawinfo.drawPlayer.head == 38 || drawinfo.drawPlayer.head == 135 || drawinfo.drawPlayer.head == 269;
-		if (!flag && drawinfo.drawPlayer.faceHead > 0 && drawinfo.drawPlayer.faceHead < ArmorIDs.Face.Count) {
+		*/
+		bool flag = drawinfo.drawPlayer.head > 0 && !ArmorIDs.Head.Sets.DrawHead[drawinfo.drawPlayer.head];
+
+		if (!flag && drawinfo.drawPlayer.faceHead > 0) {
 			Vector2 faceHeadOffsetFromHelmet = drawinfo.drawPlayer.GetFaceHeadOffsetFromHelmet();
 			DrawData item = new DrawData(TextureAssets.AccFace[drawinfo.drawPlayer.faceHead].Value, new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.headPosition + drawinfo.headVect + faceHeadOffsetFromHelmet, drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorHead, drawinfo.drawPlayer.headRotation, drawinfo.headVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cFaceHead;
@@ -1923,7 +_,7 @@
 
 			float num = 0f;
 			if (drawinfo.drawPlayer.face == 5) {
-				sbyte faceHead = drawinfo.drawPlayer.faceHead;
+				int faceHead = drawinfo.drawPlayer.faceHead;
 				if ((uint)(faceHead - 10) <= 3u)
 					num = 2 * drawinfo.drawPlayer.direction;
 			}
@@ -1986,11 +_,12 @@
 	public static void DrawPlayer_22_FaceAcc(ref PlayerDrawSet drawinfo)
 	{
 		Vector2 vector = Vector2.Zero;
+		// Extra patch context.
 		if (drawinfo.drawPlayer.mount.Active && drawinfo.drawPlayer.mount.Type == 52)
 			vector = new Vector2(28f, -2f);
 
 		vector *= drawinfo.drawPlayer.Directions;
-		if (drawinfo.drawPlayer.face > 0 && drawinfo.drawPlayer.face < ArmorIDs.Face.Count && !ArmorIDs.Face.Sets.DrawInFaceUnderHairLayer[drawinfo.drawPlayer.face]) {
+		if (drawinfo.drawPlayer.face > 0 && !ArmorIDs.Face.Sets.DrawInFaceUnderHairLayer[drawinfo.drawPlayer.face]) {
 			Vector2 vector2 = Vector2.Zero;
 			if (drawinfo.drawPlayer.face == 19)
 				vector2 = new Vector2(0f, -6f) * drawinfo.drawPlayer.Directions;
@@ -2000,7 +_,7 @@
 			drawinfo.DrawDataCache.Add(item);
 		}
 
-		if (drawinfo.drawPlayer.faceFlower > 0 && drawinfo.drawPlayer.faceFlower < ArmorIDs.Face.Count) {
+		if (drawinfo.drawPlayer.faceFlower > 0) {
 			DrawData item = new DrawData(TextureAssets.AccFace[drawinfo.drawPlayer.faceFlower].Value, vector + drawinfo.helmetOffset + new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.headPosition + drawinfo.headVect, drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorHead, drawinfo.drawPlayer.headRotation, drawinfo.headVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cFaceFlower;
 			drawinfo.DrawDataCache.Add(item);
@@ -2165,7 +_,7 @@
 
 	public static void DrawPlayer_25_Shield(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.shield <= 0 || drawinfo.drawPlayer.shield >= ArmorIDs.Shield.Count)
+		if (drawinfo.drawPlayer.shield <= 0 || drawinfo.drawPlayer.shield >= TextureAssets.AccShield.Length)
 			return;
 
 		Vector2 zero = Vector2.Zero;
@@ -2298,7 +_,7 @@
 		if (!drawinfo.drawPlayer.CanVisuallyHoldItem(heldItem))
 			flag2 = false;
 
-		if (drawinfo.shadow != 0f || drawinfo.drawPlayer.frozen || !(flag || flag2) || num <= 0 || drawinfo.drawPlayer.dead || heldItem.noUseGraphic || (drawinfo.drawPlayer.wet && heldItem.noWet) || (drawinfo.drawPlayer.happyFunTorchTime && drawinfo.drawPlayer.inventory[drawinfo.drawPlayer.selectedItem].createTile == 4 && drawinfo.drawPlayer.itemAnimation == 0))
+		if (drawinfo.shadow != 0f || drawinfo.drawPlayer.frozen || !(flag || flag2) || num <= 0 || drawinfo.drawPlayer.dead || heldItem.noUseGraphic || (drawinfo.drawPlayer.wet && heldItem.noWet && !ItemID.Sets.WaterTorches[num]/*Allow biome torches underwater.*/) || (drawinfo.drawPlayer.happyFunTorchTime && drawinfo.drawPlayer.inventory[drawinfo.drawPlayer.selectedItem].createTile == 4 && drawinfo.drawPlayer.itemAnimation == 0))
 			return;
 
 		_ = drawinfo.drawPlayer.name;
@@ -2468,12 +_,16 @@
 						origin5 = Vector2.Zero;
 					}
 				}
+				// Extra patch context.
 				else if (drawinfo.drawPlayer.direction == -1) {
 					origin5 = new Vector2(itemDrawFrame.Width, itemDrawFrame.Height);
 					num10 -= (float)itemDrawFrame.Width;
 				}
 
+				ItemLoader.HoldoutOrigin(drawinfo.drawPlayer, ref origin5);
+
 				item = new DrawData(value, new Vector2((int)(drawinfo.ItemLocation.X - Main.screenPosition.X + origin5.X + num10), (int)(drawinfo.ItemLocation.Y - Main.screenPosition.Y + num11)), itemDrawFrame, heldItem.GetAlpha(drawinfo.itemColor), num9, origin5, adjustedItemScale, drawinfo.itemEffect);
+
 				drawinfo.DrawDataCache.Add(item);
 				if (num == 3870) {
 					item = new DrawData(TextureAssets.GlowMask[238].Value, new Vector2((int)(drawinfo.ItemLocation.X - Main.screenPosition.X + origin5.X + num10), (int)(drawinfo.ItemLocation.Y - Main.screenPosition.Y + num11)), itemDrawFrame, new Color(255, 255, 255, 127), num9, origin5, adjustedItemScale, drawinfo.itemEffect);
@@ -2495,7 +_,7 @@
 			}
 
 			int num12 = 10;
-			Vector2 vector9 = new Vector2(itemDrawFrame.Width / 2, itemDrawFrame.Height / 2);
+			Vector2 vector9 = new Vector2(0, itemDrawFrame.Height / 2); // forward port from 1.4.5
 			Vector2 vector10 = Main.DrawPlayerItemPos(drawinfo.drawPlayer.gravDir, num);
 			num12 = (int)vector10.X;
 			vector9.Y = vector10.Y;
@@ -2603,7 +_,7 @@
 		if (drawinfo.usesCompositeTorso) {
 			DrawPlayer_28_ArmOverItemComposite(ref drawinfo);
 		}
-		else if (drawinfo.drawPlayer.body > 0 && drawinfo.drawPlayer.body < ArmorIDs.Body.Count) {
+		else if (drawinfo.drawPlayer.body > 0) {
 			Rectangle bodyFrame = drawinfo.drawPlayer.bodyFrame;
 			int num = drawinfo.armorAdjust;
 			bodyFrame.X += num;
@@ -2682,7 +_,7 @@
 			vector += new Vector2((!drawinfo.playerEffect.HasFlag(SpriteEffects.FlipHorizontally)) ? 1 : (-1), (!drawinfo.playerEffect.HasFlag(SpriteEffects.FlipVertically)) ? 1 : (-1));
 
 		_ = drawinfo.drawPlayer.invis;
-		bool num = drawinfo.drawPlayer.body > 0 && drawinfo.drawPlayer.body < ArmorIDs.Body.Count;
+		bool num = drawinfo.drawPlayer.body > 0;
 		int num2 = (drawinfo.compShoulderOverFrontArm ? 1 : 0);
 		int num3 = ((!drawinfo.compShoulderOverFrontArm) ? 1 : 0);
 		int num4 = ((!drawinfo.compShoulderOverFrontArm) ? 1 : 0);
@@ -2756,7 +_,7 @@
 			}
 		}
 
-		if (drawinfo.drawPlayer.handon > 0 && drawinfo.drawPlayer.handon < ArmorIDs.HandOn.Count) {
+		if (drawinfo.drawPlayer.handon > 0) {
 			Texture2D value2 = TextureAssets.AccHandsOnComposite[drawinfo.drawPlayer.handon].Value;
 			DrawCompositeArmorPiece(ref drawinfo, CompositePlayerDrawContext.FrontArmAccessory, new DrawData(value2, vector, drawinfo.compFrontArmFrame, drawinfo.colorArmorBody, rotation, bodyVect, 1f, drawinfo.playerEffect) {
 				shader = drawinfo.cHandOn
@@ -2766,7 +_,7 @@
 
 	public static void DrawPlayer_29_OnhandAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (!drawinfo.usesCompositeFrontHandAcc && drawinfo.drawPlayer.handon > 0 && drawinfo.drawPlayer.handon < ArmorIDs.HandOn.Count) {
+		if (!drawinfo.usesCompositeFrontHandAcc && drawinfo.drawPlayer.handon > 0) {
 			DrawData item = new DrawData(TextureAssets.AccHandsOn[drawinfo.drawPlayer.handon].Value, new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.bodyPosition + new Vector2(drawinfo.drawPlayer.bodyFrame.Width / 2, drawinfo.drawPlayer.bodyFrame.Height / 2), drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorBody, drawinfo.drawPlayer.bodyRotation, drawinfo.bodyVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cHandOn;
 			drawinfo.DrawDataCache.Add(item);
@@ -2801,7 +_,7 @@
 
 	public static void DrawPlayer_32_FrontAcc(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.front > 0 && drawinfo.drawPlayer.front < ArmorIDs.Front.Count && !drawinfo.drawPlayer.mount.Active) {
+		if (drawinfo.drawPlayer.front > 0 && !drawinfo.drawPlayer.mount.Active) {
 			Vector2 zero = Vector2.Zero;
 			DrawData item = new DrawData(TextureAssets.AccFront[drawinfo.drawPlayer.front].Value, zero + new Vector2((int)(drawinfo.Position.X - Main.screenPosition.X - (float)(drawinfo.drawPlayer.bodyFrame.Width / 2) + (float)(drawinfo.drawPlayer.width / 2)), (int)(drawinfo.Position.Y - Main.screenPosition.Y + (float)drawinfo.drawPlayer.height - (float)drawinfo.drawPlayer.bodyFrame.Height + 4f)) + drawinfo.drawPlayer.bodyPosition + new Vector2(drawinfo.drawPlayer.bodyFrame.Width / 2, drawinfo.drawPlayer.bodyFrame.Height / 2), drawinfo.drawPlayer.bodyFrame, drawinfo.colorArmorBody, drawinfo.drawPlayer.bodyRotation, drawinfo.bodyVect, 1f, drawinfo.playerEffect);
 			item.shader = drawinfo.cFront;
@@ -2811,7 +_,7 @@
 
 	public static void DrawPlayer_32_FrontAcc_FrontPart(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.front <= 0 || drawinfo.drawPlayer.front >= ArmorIDs.Front.Count)
+		if (drawinfo.drawPlayer.front <= 0)
 			return;
 
 		Rectangle bodyFrame = drawinfo.drawPlayer.bodyFrame;
@@ -2850,7 +_,7 @@
 
 	public static void DrawPlayer_32_FrontAcc_BackPart(ref PlayerDrawSet drawinfo)
 	{
-		if (drawinfo.drawPlayer.front <= 0 || drawinfo.drawPlayer.front >= ArmorIDs.Front.Count)
+		if (drawinfo.drawPlayer.front <= 0)
 			return;
 
 		Rectangle bodyFrame = drawinfo.drawPlayer.bodyFrame;
