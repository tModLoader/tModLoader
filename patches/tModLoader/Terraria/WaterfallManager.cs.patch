--- src/Terraria/Terraria/WaterfallManager.cs
+++ src/tModLoader/Terraria/WaterfallManager.cs
@@ -4,6 +_,7 @@
 using System;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -20,12 +_,12 @@
 		private const int minWet = 160;
 		private const int maxWaterfallCountDefault = 1000;
 		private const int maxLength = 100;
-		private const int maxTypes = 24;
+		internal const int maxTypes = 24;
 		public int maxWaterfallCount = 1000;
 		private int qualityMax;
 		private int currentMax;
 		private WaterfallData[] waterfalls;
-		private Asset<Texture2D>[] waterfallTexture = new Asset<Texture2D>[24];
+		internal Asset<Texture2D>[] waterfallTexture = new Asset<Texture2D>[24];
 		private int wFallFrCounter;
 		private int regularFrame;
 		private int wFallFrCounter2;
@@ -208,7 +_,7 @@
 			}
 		}
 
-		private void DrawWaterfall(SpriteBatch spriteBatch, int Style = 0, float Alpha = 1f) {
+		internal void DrawWaterfall(SpriteBatch spriteBatch, int Style = 0, float Alpha = 1f) {
 			Main.tileSolid[546] = false;
 			float num = 0f;
 			float num2 = 99999f;
@@ -357,6 +_,7 @@
 					if (num29 >= 2)
 						continue;
 
+					//patch file: num12
 					switch (num12) {
 						case 1: {
 								float r;
@@ -422,6 +_,8 @@
 								break;
 							}
 					}
+					if (num12 >= maxTypes)
+						LoaderManager.Get<WaterFallStylesLoader>().Get(num12).AddLight(num13, num14);
 
 					int num31 = 0;
 					int num32 = 0;
@@ -531,6 +_,9 @@
 							num12 = 15 + num36 - 262;
 							break;
 					}
+					if(num36 != -1) {
+						TileLoader.ChangeWaterfallStyle(num36, ref num12);
+					}
 
 					if (WorldGen.SolidTile(tile5) && !tile3.halfBrick())
 						num11 = 8;
@@ -586,6 +_,9 @@
 							break;
 					}
 
+					if (num12 >= maxTypes)
+						LoaderManager.Get<WaterFallStylesLoader>().Get(num12).ColorMultiplier(ref num38, ref num39, ref num40, num37);
+
 					color5 = new Color((int)num38, (int)num39, (int)num40, (int)num41);
 					if (num12 == 1) {
 						float num42 = Math.Abs((float)(num13 * 16 + 8) - (Main.screenPosition.X + (float)(Main.screenWidth / 2)));
@@ -841,6 +_,8 @@
 
 			if (Main.liquidAlpha[12] > 0f)
 				DrawWaterfall(spriteBatch, 23, Main.liquidAlpha[12]);
+
+			LoaderManager.Get<WaterStylesLoader>().DrawWaterfall(this, spriteBatch);
 		}
 	}
 }
