--- src/TerrariaNetCore/Terraria/IngameOptions.cs
+++ src/tModLoader/Terraria/IngameOptions.cs
@@ -7,9 +_,11 @@
 using Terraria.GameContent.UI.BigProgressBar;
 using Terraria.GameInput;
 using Terraria.Localization;
+using Terraria.ModLoader.UI;
 using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
+using Terraria.ModLoader;
 
 namespace Terraria;
 
@@ -17,7 +_,8 @@
 {
 	public const int width = 670;
 	public const int height = 480;
-	public static float[] leftScale = new float[10] {
+	public static float[] leftScale = new float[] {
+		0.7f,
 		0.7f,
 		0.7f,
 		0.7f,
@@ -175,7 +_,7 @@
 		noSound = false;
 		bool flag5 = SocialAPI.Network != null && SocialAPI.Network.CanInvite();
 		int num7 = (flag5 ? 1 : 0);
-		int num8 = 5 + num7 + 2;
+		int num8 = 5 + num7 + 2 + 1; // Add 1 for ModConfig menu
 		Vector2 vector4 = new Vector2(vector3.X + vector2.X / 4f, vector3.Y + (float)(num3 * 5 / 2));
 		Vector2 vector5 = new Vector2(0f, vector2.Y - (float)(num3 * 5)) / (num8 + 1);
 		if (flag)
@@ -247,6 +_,20 @@
 		}
 
 		num10++;
+		if (DrawLeftSide(sb, Language.GetTextValue("tModLoader.ModConfiguration"), num10, vector4, vector5, leftScale, 0.7f, 0.8f, 0.01f)) {
+			leftHover = num10;
+			if (flag4) {
+				Close();
+				IngameFancyUI.CoverNextFrame();
+				Main.playerInventory = false;
+				Main.editChest = false;
+				Main.npcChatText = "";
+				Main.inFancyUI = true;
+				Main.InGameUI.SetState(Interface.modConfigList);
+			}
+		}
+
+		num10++;
 		if (flag5 && DrawLeftSide(sb, Lang.menu[147].Value, num10, vector4, vector5, leftScale)) {
 			leftHover = num10;
 			if (flag4) {
@@ -258,6 +_,7 @@
 		if (flag5)
 			num10++;
 
+		if (SocialAPI.Mode != SocialMode.Steam) {
 		if (DrawLeftSide(sb, Lang.menu[131].Value, num10, vector4, vector5, leftScale)) {
 			leftHover = num10;
 			if (flag4) {
@@ -265,8 +_,9 @@
 				IngameFancyUI.OpenAchievements();
 			}
 		}
-
 		num10++;
+		}
+
 		if (DrawLeftSide(sb, Lang.menu[118].Value, num10, vector4, vector5, leftScale)) {
 			leftHover = num10;
 			if (flag4)
@@ -277,6 +_,9 @@
 		if (DrawLeftSide(sb, Lang.inter[35].Value, num10, vector4, vector5, leftScale)) {
 			leftHover = num10;
 			if (flag4) {
+				Social.Steam.SteamedWraps.StopPlaytimeTracking();
+				SystemLoader.PreSaveAndQuit();
+				// Calls before anything else is
 				Close();
 				Main.menuMode = 10;
 				Main.gameMenu = true;
@@ -302,6 +_,7 @@
 				break;
 			case 1:
 				num12 = 11;
+				num12++; // Room for tModLoader BossBarStyle option.
 				num4 = 1f;
 				num5 = 1.001f;
 				num6 = 0.001f;
@@ -664,6 +_,14 @@
 			}
 
 			num16++;
+			string text = BossBarLoader.InsertMenu(out Action onClick);
+			if (DrawRightSide(sb, text, num16, vector6, vector7, rightScale[num16], (rightScale[num16] - num4) / (num5 - num4))) {
+				rightHover = num16;
+				if (flag4)
+					onClick();
+			}
+
+			num16++;
 			string textValue3 = Language.GetTextValue("UI.MinimapFrame_" + Main.MinimapFrameManagerInstance.ActiveSelectionKeyName);
 			if (DrawRightSide(sb, Language.GetTextValue("UI.SelectMapBorder", textValue3), num16, vector6, vector7, rightScale[num16], (rightScale[num16] - num4) / (num5 - num4))) {
 				rightHover = num16;
@@ -705,8 +_,11 @@
 
 			num16++;
 			vector6.X += num;
+			/*
 			string activeSetKeyName = Main.ResourceSetsManager.ActiveSetKeyName;
 			string textValue4 = Language.GetTextValue("UI.HealthManaStyle_" + activeSetKeyName);
+			*/
+			string textValue4 = Main.ResourceSetsManager.ActiveSet.DisplayedName;
 			if (DrawRightSide(sb, Language.GetTextValue("UI.SelectHealthStyle", textValue4), num16, vector6, vector7, rightScale[num16], (rightScale[num16] - num4) / (num5 - num4))) {
 				rightHover = num16;
 				if (flag4)
@@ -742,7 +_,7 @@
 			num18++;
 			if (DrawRightSide(sb, Lang.menu[51].Value + ": " + Main.PendingResolutionWidth + "x" + Main.PendingResolutionHeight, num18, vector6, vector7, rightScale[num18], (rightScale[num18] - num4) / (num5 - num4))) {
 				rightHover = num18;
-				if (flag4) {
+				if (flag4 || Main.mouseRight && Main.mouseRightRelease) {
 					int num19 = 0;
 					for (int m = 0; m < Main.numDisplayModes; m++) {
 						if (Main.displayWidth[m] == Main.PendingResolutionWidth && Main.displayHeight[m] == Main.PendingResolutionHeight) {
@@ -751,9 +_,7 @@
 						}
 					}
 
-					num19++;
-					if (num19 >= Main.numDisplayModes)
-						num19 = 0;
+					num19 = Utils.Repeat(num19 + (flag4 ? 1 : -1), Main.numDisplayModes);
 
 					Main.PendingResolutionWidth = Main.displayWidth[num19];
 					Main.PendingResolutionHeight = Main.displayHeight[num19];
