--- src/TerrariaNetCore/Terraria/Net/NetManager.cs
+++ src/tModLoader/Terraria/Net/NetManager.cs
@@ -1,5 +_,8 @@
 using System.Collections.Generic;
 using System.IO;
+using log4net.Core;
+using Terraria.Localization;
+using Terraria.ModLoader;
 using Terraria.Net.Sockets;
 
 namespace Terraria.Net;
@@ -45,6 +_,8 @@
 
 	public void Broadcast(NetPacket packet, int ignoreClient = -1)
 	{
+		LogSend(packet, ignoreClient: ignoreClient);
+
 		for (int i = 0; i < 256; i++) {
 			if (i != ignoreClient && Netplay.Clients[i].IsConnected())
 				SendData(Netplay.Clients[i].Socket, packet);
@@ -53,6 +_,8 @@
 
 	public void Broadcast(NetPacket packet, BroadcastCondition conditionToBroadcast, int ignoreClient = -1)
 	{
+		LogSend(packet, ignoreClient: ignoreClient);
+
 		for (int i = 0; i < 256; i++) {
 			if (i != ignoreClient && Netplay.Clients[i].IsConnected() && conditionToBroadcast(i))
 				SendData(Netplay.Clients[i].Socket, packet);
@@ -96,11 +_,13 @@
 
 	public void SendToServer(NetPacket packet)
 	{
+		LogSend(packet);
 		SendData(Netplay.Connection.Socket, packet);
 	}
 
 	public void SendToClient(NetPacket packet, int playerId)
 	{
+		LogSend(packet, toClient: playerId);
 		SendData(Netplay.Clients[playerId].Socket, packet);
 	}
 
@@ -112,6 +_,7 @@
 				socket.AsyncSend(packet.Buffer.Data, 0, packet.Length, SendCallback, packet);
 			}
 			catch {
+				Logging.ServerConsoleLine(Language.GetTextValue("Error.ExceptionNormal", Language.GetTextValue("Error.DataSentAfterConnectionLost")), Level.Warn);
 			}
 
 			Main.ActiveNetDiagnosticsUI.CountSentModuleMessage(packet.Id, packet.Length);
@@ -121,5 +_,12 @@
 	public static void SendCallback(object state)
 	{
 		((NetPacket)state).Recycle();
+	}
+
+	// Added by TML.
+	private void LogSend(NetPacket packet, int toClient = -1, int ignoreClient = -1)
+	{
+		if (ModNet.DetailedLogging)
+			ModNet.LogSend(toClient, ignoreClient, $"NetPacket {_modules[packet.Id].GetType().Name}", packet.Length);
 	}
 }
