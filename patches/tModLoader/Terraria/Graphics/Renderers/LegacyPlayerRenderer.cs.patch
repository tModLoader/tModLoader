--- src/TerrariaNetCore/Terraria/Graphics/Renderers/LegacyPlayerRenderer.cs
+++ src/tModLoader/Terraria/Graphics/Renderers/LegacyPlayerRenderer.cs
@@ -5,6 +_,7 @@
 using Terraria.DataStructures;
 using Terraria.GameContent;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria.Graphics.Renderers;
 
@@ -32,6 +_,7 @@
 
 	public void DrawPlayerHead(Camera camera, Player drawPlayer, Vector2 position, float alpha = 1f, float scale = 1f, Color borderColor = default(Color))
 	{
+		/*
 		if (!drawPlayer.ShouldNotDraw) {
 			_drawData.Clear();
 			_dust.Clear();
@@ -50,6 +_,9 @@
 			CreateOutlines(alpha, scale, borderColor);
 			PlayerDrawHeadLayers.DrawPlayer_RenderAllLayers(ref drawinfo);
 		}
+		*/
+
+		DrawPlayerInternal(camera, drawPlayer, position + Main.screenPosition, 0f, Vector2.Zero, alpha: alpha, scale: scale, headOnly: true);
 	}
 
 	private void CreateOutlines(float alpha, float scale, Color borderColor)
@@ -114,6 +_,11 @@
 
 	public void DrawPlayer(Camera camera, Player drawPlayer, Vector2 position, float rotation, Vector2 rotationOrigin, float shadow = 0f, float scale = 1f)
 	{
+		DrawPlayerInternal(camera, drawPlayer, position, rotation, rotationOrigin, shadow, scale);
+	}
+
+	private void DrawPlayerInternal(Camera camera, Player drawPlayer, Vector2 position, float rotation, Vector2 rotationOrigin, float shadow = 0f, float alpha = 1f, float scale = 1f, bool headOnly = false)
+	{
 		if (drawPlayer.ShouldNotDraw)
 			return;
 
@@ -121,8 +_,22 @@
 		_drawData.Clear();
 		_dust.Clear();
 		_gore.Clear();
+
+		if (headOnly)
+			drawInfo.HeadOnlySetup(drawPlayer, _drawData, _dust, _gore, position.X, position.Y, alpha, scale);
+		else
-		drawInfo.BoringSetup(drawPlayer, _drawData, _dust, _gore, position, shadow, rotation, rotationOrigin);
+			drawInfo.BoringSetup(drawPlayer, _drawData, _dust, _gore, position, shadow, rotation, rotationOrigin);
+
-		DrawPlayer_UseNormalLayers(ref drawInfo);
+		//DrawPlayer_UseNormalLayers(ref drawInfo);
+		PlayerLoader.ModifyDrawInfo(ref drawInfo);
+
+		foreach (var layer in PlayerDrawLayerLoader.GetDrawLayers(drawInfo)) {
+			if (!headOnly || layer.IsHeadLayer) {
+				layer.DrawWithTransformationAndChildren(ref drawInfo);
+			}
+		}
+
+		PlayerDrawLayers.DrawPlayer_MakeIntoFirstFractalAfterImage(ref drawInfo); // tML, copied from UseNormalLayers
 		PlayerDrawLayers.DrawPlayer_TransformDrawData(ref drawInfo);
 		if (scale != 1f)
 			PlayerDrawLayers.DrawPlayer_ScaleDrawData(ref drawInfo, scale);
