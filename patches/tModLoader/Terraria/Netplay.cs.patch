--- src/TerrariaNetCore/Terraria/Netplay.cs
+++ src/tModLoader/Terraria/Netplay.cs
@@ -11,12 +_,14 @@
 using Terraria.IO;
 using Terraria.Localization;
 using Terraria.Map;
+using Terraria.ModLoader;
 using Terraria.Net;
 using Terraria.Net.Sockets;
 using Terraria.Social;
 using Terraria.Utilities;
 #if !XNA
 using Terraria.Social.Base;
+using Terraria.ModLoader.IO;
 #endif
 using NATUPNPLib;
 
@@ -78,6 +_,7 @@
 
 		private static void ResetNetDiag() {
 			Main.ActiveNetDiagnosticsUI.Reset();
+			ModNet.ResetNetDiag();
 		}
 
 		public static void ResetSections() {
@@ -283,6 +_,8 @@
 				Main.netMode = 0;
 				Main.menuMode = 10;
 				WorldFile.SaveWorld();
+				SystemLoader.OnWorldUnload();
+				TileIO.PostExitWorldCleanup();
 				Main.menuMode = 0;
 			}
 			else {
@@ -421,6 +_,12 @@
 		}
 
 		private static void ClientLoopSetup(RemoteAddress address) {
+			string friendlyName = address.GetFriendlyName();
+			if (string.IsNullOrEmpty(friendlyName))
+				Utils.ShowFancyErrorMessage("Unable to find Steam Hosted Multiplayer server.", 0);
+
+			Logging.Terraria.InfoFormat("Connecting to {0}", friendlyName);
+
 			Connection.ResetSpecialFlags();
 			ResetNetDiag();
 			Main.ServerSideCharacter = false;
@@ -437,11 +_,11 @@
 			Main.netMode = 1;
 			Main.menuMode = 14;
 			if (!Main.autoPass)
-				Main.statusText = Language.GetTextValue("Net.ConnectingTo", address.GetFriendlyName());
+				Main.statusText = Language.GetTextValue("Net.ConnectingTo", friendlyName);
 
 			Disconnect = false;
 			Connection = new RemoteServer();
-			Connection.ReadBuffer = new byte[1024];
+			Connection.ReadBuffer = new byte[ushort.MaxValue];
 		}
 
 		private static void InnerClientLoop() {
@@ -479,6 +_,7 @@
 							Main.cloudAlpha = Main.maxRaining;
 							Main.ToggleGameplayUpdates(state: false);
 							WorldGen.clearWorld();
+							SystemLoader.OnWorldLoad();
 							if (Main.mapEnabled)
 								Main.Map.Load();
 						}
@@ -530,6 +_,11 @@
 				}
 
 				if (!Main.gameMenu) {
+					//This is only called in case of kicks and other sudden disconnects.
+					//The more common (client) call to this is in Main.SaveAndQuitCallback
+					SystemLoader.OnWorldUnload();
+					TileIO.PostExitWorldCleanup();
+
 					Main.gameMenu = true;
 					Main.SwitchNetMode(0);
 					MapHelper.noStatusText = true;
