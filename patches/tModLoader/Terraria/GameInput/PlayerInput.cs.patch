--- src/TerrariaNetCore/Terraria/GameInput/PlayerInput.cs
+++ src/tModLoader/Terraria/GameInput/PlayerInput.cs
@@ -8,13 +_,14 @@
 using Terraria.GameContent.UI.Chat;
 using Terraria.GameContent.UI.States;
 using Terraria.ID;
+using Terraria.ModLoader;
 using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
 
 namespace Terraria.GameInput
 {
-	public class PlayerInput
+	public partial class PlayerInput
 	{
 		public class MiscSettingsTEMP
 		{
@@ -106,6 +_,9 @@
 		public static List<string> KnownTriggers = new List<string> {
 			"MouseLeft",
 			"MouseRight",
+			"MouseMiddle",
+			"MouseXButton1",
+			"MouseXButton2",
 			"Up",
 			"Down",
 			"Left",
@@ -339,6 +_,9 @@
 			_fastUseItemInventorySlot = inventorySlot;
 			if (inventorySlot < 50 && inventorySlot >= 0) {
 				Player localPlayer = Main.LocalPlayer;
+				if (!ItemLoader.CanStack(Main.mouseItem, localPlayer.inventory[inventorySlot]))
+					return;
+
 				ItemSlot.PickupItemIntoMouse(localPlayer.inventory, 0, inventorySlot, localPlayer);
 			}
 		}
@@ -403,9 +_,21 @@
 			}
 		}
 
+		// To allow mod keybinds to load, need to reinitialize after load.
+		internal static bool reinitialize;
+		private static void ReInitialize() {
+			Profiles.Clear();
+			OriginalProfiles.Clear();
+			Initialize_Inner(); //Mirsario: To not repeat code in patches, reuse the one that was previously in Initialize().
+			Load(); // Loads the JSON into the Profiles above
+			reinitialize = false;
+		}
 		public static void Initialize() {
 			Main.InputProfiles.OnProcessText += PrettyPrintProfiles;
 			Player.Hooks.OnEnterWorld += Hook_OnEnterWorld;
+			Initialize_Inner();
+		}
+		private static void Initialize_Inner() {
 			PlayerInputProfile playerInputProfile = new PlayerInputProfile("Redigit's Pick");
 			playerInputProfile.Initialize(PresetProfiles.Redigit);
 			Profiles.Add(playerInputProfile.Name, playerInputProfile);
@@ -453,7 +_,9 @@
 		}
 
 		public static void Load() {
-			Main.InputProfiles.Load();
+			if (!Main.InputProfiles.Load())
+				return; // fixes strange bug caused by deleting input profiles.json in game and reloading mods.
+
 			Dictionary<string, PlayerInputProfile> dictionary = new Dictionary<string, PlayerInputProfile>();
 			string currentValue = null;
 			Main.InputProfiles.Get("Selected Profile", ref currentValue);
@@ -592,6 +_,10 @@
 		public static bool IsGamepadButtonLockedFromUse(string keyName) => _buttonsLocked.Contains(keyName);
 
 		public static void UpdateInput() {
+			// Added by TML.
+			if (reinitialize)
+				ReInitialize();
+				
 			SettingsForUI.UpdateCounters();
 			Triggers.Reset();
 			ScrollWheelValueOld = ScrollWheelValue;
@@ -623,6 +_,9 @@
 			UpdateMainMouse();
 			Main.mouseLeft = Triggers.Current.MouseLeft;
 			Main.mouseRight = Triggers.Current.MouseRight;
+			Main.mouseMiddle = Triggers.Current.MouseMiddle;
+			Main.mouseXButton1 = Triggers.Current.MouseXButton1;
+			Main.mouseXButton2 = Triggers.Current.MouseXButton2;
 			CacheZoomableValues();
 			if (num != 0 && PlayerInput.OnActionableInput != null)
 				PlayerInput.OnActionableInput();
@@ -829,6 +_,10 @@
 				}
 			}
 
+			// TODO: We might just need a bool for while reloading.
+			if (player.HeldItem.type >= ItemID.Sets.GamepadWholeScreenUseRange.Length)
+				return false;
+
 			bool flag5 = ItemID.Sets.GamepadWholeScreenUseRange[player.inventory[player.selectedItem].type] || player.scope;
 			int num3 = player.inventory[player.selectedItem].tileBoost + ItemID.Sets.GamepadExtraRange[player.inventory[player.selectedItem].type];
 			if (player.yoyoString && ItemID.Sets.Yoyo[player.inventory[player.selectedItem].type])
@@ -1124,6 +_,8 @@
 		}
 
 		private static void FixDerpedRebinds() {
+			//TML: These keys are specially setup to avoid creating a situation where the game might soft-lock due to binding issues. (IE stuck on a menu)
+			//TML: This method has a side-effect that it also prevents binding multiple hotkeys to one virtual key if those keys are already bound to any of following
 			List<string> list = new List<string> {
 				"MouseLeft",
 				"MouseRight",
@@ -1308,7 +_,7 @@
 					if (DpadSnapCooldown[i] == 0) {
 						int num = 6;
 						if (ItemSlot.IsABuildingItem(player.inventory[player.selectedItem]))
-							num = player.inventory[player.selectedItem].useTime;
+							num = CombinedHooks.TotalUseTime(player.inventory[player.selectedItem].useTime, player, player.inventory[player.selectedItem]);
 
 						DpadSnapCooldown[i] = num;
 						zero += vector;
@@ -1555,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1592,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1663,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1700,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1770,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1807,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1877,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1914,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
