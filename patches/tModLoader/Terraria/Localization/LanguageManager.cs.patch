--- src/TerrariaNetCore/Terraria/Localization/LanguageManager.cs
+++ src/tModLoader/Terraria/Localization/LanguageManager.cs
@@ -12,14 +_,15 @@
 using ReLogic.Graphics;
 using Terraria.GameContent;
 using Terraria.Initializers;
+using Terraria.ModLoader;
 using Terraria.Utilities;
 
 namespace Terraria.Localization;
 
-public class LanguageManager
+public partial class LanguageManager
 {
 	public static LanguageManager Instance = new LanguageManager();
-	private readonly Dictionary<string, LocalizedText> _localizedTexts = new Dictionary<string, LocalizedText>();
+	internal readonly Dictionary<string, LocalizedText> _localizedTexts = new Dictionary<string, LocalizedText>();
 	private readonly Dictionary<string, List<string>> _categoryGroupedKeys = new Dictionary<string, List<string>>();
 	private GameCulture _fallbackCulture = GameCulture.DefaultCulture;
 
@@ -101,6 +_,10 @@
 			}
 
 			LoadLanguage(culture);
+
+			if (ActiveCulture != null)
+				LocalizationLoader.RefreshModLanguage(culture);
+
 			ActiveCulture = culture;
 			Thread.CurrentThread.CurrentCulture = culture.CultureInfo;
 			Thread.CurrentThread.CurrentUICulture = culture.CultureInfo;
@@ -144,11 +_,14 @@
 		}
 	}
 
-	private void ProcessCopyCommandsInTexts()
+	internal void ProcessCopyCommandsInTexts()
 	{
-		Regex regex = new Regex("{\\$(\\w+\\.\\w+)}", RegexOptions.Compiled);
+		Regex regex = new Regex(@"{\$([\w\.]+)}", RegexOptions.Compiled);
 		foreach (KeyValuePair<string, LocalizedText> localizedText in _localizedTexts) {
 			LocalizedText value = localizedText.Value;
+			if (value.Value == null)
+				continue;
+
 			for (int i = 0; i < 100; i++) {
 				string text = regex.Replace(value.Value, (Match match) => GetTextValue(match.Groups[1].ToString()));
 				if (text == value.Value)
@@ -310,7 +_,7 @@
 		if (!_categoryGroupedKeys.ContainsKey(categoryName))
 			return new LocalizedText(categoryName + ".RANDOM", categoryName + ".RANDOM");
 
-		List<string> list = _categoryGroupedKeys[categoryName];
+		List<string> list = GetKeysInCategory(categoryName);
 		return GetText(categoryName + "." + list[(random ?? Main.rand).Next(list.Count)]);
 	}
 
@@ -319,7 +_,7 @@
 		if (!_categoryGroupedKeys.ContainsKey(categoryName))
 			return new LocalizedText(categoryName + ".INDEXED", categoryName + ".INDEXED");
 
-		List<string> list = _categoryGroupedKeys[categoryName];
+		List<string> list = GetKeysInCategory(categoryName);
 		int index2 = index % list.Count;
 		return GetText(categoryName + "." + list[index2]);
 	}
