--- src/Terraria/Terraria/Wiring.cs
+++ src/tModLoader/Terraria/Wiring.cs
@@ -7,6 +_,7 @@
 using Terraria.GameContent.UI;
 using Terraria.ID;
 using Terraria.Localization;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -15,28 +_,28 @@
 		public static bool blockPlayerTeleportationForOneIteration;
 		public static bool running;
 		private static Dictionary<Point16, bool> _wireSkip;
-		private static DoubleStack<Point16> _wireList;
+		public static DoubleStack<Point16> _wireList;
-		private static DoubleStack<byte> _wireDirectionList;
+		public static DoubleStack<byte> _wireDirectionList;
-		private static Dictionary<Point16, byte> _toProcess;
+		public static Dictionary<Point16, byte> _toProcess;
 		private static Queue<Point16> _GatesCurrent;
-		private static Queue<Point16> _LampsToCheck;
+		public static Queue<Point16> _LampsToCheck;
-		private static Queue<Point16> _GatesNext;
+		public static Queue<Point16> _GatesNext;
 		private static Dictionary<Point16, bool> _GatesDone;
 		private static Dictionary<Point16, byte> _PixelBoxTriggers;
-		private static Vector2[] _teleport;
 		private const int MaxPump = 20;
+		public static Vector2[] _teleport;
-		private static int[] _inPumpX;
+		public static int[] _inPumpX;
-		private static int[] _inPumpY;
+		public static int[] _inPumpY;
-		private static int _numInPump;
+		public static int _numInPump;
-		private static int[] _outPumpX;
+		public static int[] _outPumpX;
-		private static int[] _outPumpY;
+		public static int[] _outPumpY;
-		private static int _numOutPump;
 		private const int MaxMech = 1000;
+		public static int _numOutPump;
 		private static int[] _mechX;
 		private static int[] _mechY;
 		private static int _numMechs;
 		private static int[] _mechTime;
-		private static int _currentWireColor;
+		public static int _currentWireColor;
 		private static int CurrentUser = 255;
 
 		public static void SetCurrentUser(int plr = -1) {
@@ -299,7 +_,7 @@
 			}
 		}
 
-		private static bool CheckMech(int i, int j, int time) {
+		public static bool CheckMech(int i, int j, int time) {
 			for (int k = 0; k < _numMechs; k++) {
 				if (_mechX[k] == i && _mechY[k] == j)
 					return false;
@@ -363,7 +_,7 @@
 			}
 		}
 
-		private static void TripWire(int left, int top, int width, int height) {
+		public static void TripWire(int left, int top, int width, int height) {
 			if (Main.netMode == 1)
 				return;
 
@@ -786,6 +_,9 @@
 			if (!tile.active())
 				return;
 
+			if (!TileLoader.PreHitWire(i, j, type))
+				return;
+
 			switch (type) {
 				case 144:
 					HitSwitch(i, j);
@@ -1145,14 +_,14 @@
 				return;
 			}
 
-			if (type == 11) {
+			if (TileLoader.CloseDoorID(Main.tile[i, j]) >= 0) {
 				if (WorldGen.CloseDoor(i, j, forced: true))
 					NetMessage.SendData(19, -1, -1, null, 1, i, j);
 
 				return;
 			}
 
-			if (type == 10) {
+			if (TileLoader.OpenDoorID(Main.tile[i, j]) >= 0) {
 				int num69 = 1;
 				if (Main.rand.Next(2) == 0)
 					num69 = -1;
@@ -1240,7 +_,7 @@
 
 						break;
 					}
-				case 4:
+				case int _ when TileID.Sets.Torch[type]:
 					if (tile.frameX < 66)
 						tile.frameX += 66;
 					else
@@ -1723,6 +_,7 @@
 					}
 				case 35:
 				case 139:
+				case int _ when TileLoader.IsModMusicBox(tile):
 					WorldGen.SwitchMB(i, j);
 					break;
 				case 207:
@@ -2111,14 +_,13 @@
 											break;
 
 										int num145 = 50;
-										int[] array2 = new int[num145];
+										List<int> array2 = new List<int>();
 										int num146 = 0;
 										for (int num147 = 0; num147 < 200; num147++) {
-											if (Main.npc[num147].active && (Main.npc[num147].type == 17 || Main.npc[num147].type == 19 || Main.npc[num147].type == 22 || Main.npc[num147].type == 38 || Main.npc[num147].type == 54 || Main.npc[num147].type == 107 || Main.npc[num147].type == 108 || Main.npc[num147].type == 142 || Main.npc[num147].type == 160 || Main.npc[num147].type == 207 || Main.npc[num147].type == 209 || Main.npc[num147].type == 227 || Main.npc[num147].type == 228 || Main.npc[num147].type == 229 || Main.npc[num147].type == 368 || Main.npc[num147].type == 369 || Main.npc[num147].type == 550 || Main.npc[num147].type == 441 || Main.npc[num147].type == 588)) {
-												array2[num146] = num147;
+											bool vanillaCanGo = Main.npc[num147].type == 17 || Main.npc[num147].type == 19 || Main.npc[num147].type == 22 || Main.npc[num147].type == 38 || Main.npc[num147].type == 54 || Main.npc[num147].type == 107 || Main.npc[num147].type == 108 || Main.npc[num147].type == 142 || Main.npc[num147].type == 160 || Main.npc[num147].type == 207 || Main.npc[num147].type == 209 || Main.npc[num147].type == 227 || Main.npc[num147].type == 228 || Main.npc[num147].type == 229 || Main.npc[num147].type == 368 || Main.npc[num147].type == 369 || Main.npc[num147].type == 550 || Main.npc[num147].type == 441 || Main.npc[num147].type == 588;
+											if (Main.npc[num147].active && NPCLoader.CanGoToStatue(Main.npc[num147], true, vanillaCanGo)) {
+												array2.Add(num147);
 												num146++;
-												if (num146 >= num145)
-													break;
 											}
 										}
 
@@ -2127,6 +_,7 @@
 											Main.npc[num148].position.X = num137 - Main.npc[num148].width / 2;
 											Main.npc[num148].position.Y = num138 - Main.npc[num148].height - 1;
 											NetMessage.SendData(23, -1, -1, null, num148);
+											NPCLoader.OnGoToStatue(Main.npc[num148], true);
 										}
 
 										break;
@@ -2136,14 +_,13 @@
 											break;
 
 										int num141 = 50;
-										int[] array = new int[num141];
+										List<int> array = new List<int>();
 										int num142 = 0;
 										for (int num143 = 0; num143 < 200; num143++) {
-											if (Main.npc[num143].active && (Main.npc[num143].type == 18 || Main.npc[num143].type == 20 || Main.npc[num143].type == 124 || Main.npc[num143].type == 178 || Main.npc[num143].type == 208 || Main.npc[num143].type == 353 || Main.npc[num143].type == 633 || Main.npc[num143].type == 663)) {
-												array[num142] = num143;
+											bool vanillaCanGo = Main.npc[num143].type == 18 || Main.npc[num143].type == 20 || Main.npc[num143].type == 124 || Main.npc[num143].type == 178 || Main.npc[num143].type == 208 || Main.npc[num143].type == 353 || Main.npc[num143].type == 633 || Main.npc[num143].type == 663;
+											if (Main.npc[num143].active && NPCLoader.CanGoToStatue(Main.npc[num143], false, vanillaCanGo)) {
+												array.Add(num143);
 												num142++;
-												if (num142 >= num141)
-													break;
 											}
 										}
 
@@ -2152,6 +_,7 @@
 											Main.npc[num144].position.X = num137 - Main.npc[num144].width / 2;
 											Main.npc[num144].position.Y = num138 - Main.npc[num144].height - 1;
 											NetMessage.SendData(23, -1, -1, null, num144);
+											NPCLoader.OnGoToStatue(Main.npc[num144], false);
 										}
 
 										break;
@@ -2233,6 +_,7 @@
 					NetMessage.SendTileSquare(-1, i, j);
 					break;
 			}
+			TileLoader.HitWire(i, j, type);
 		}
 
 		private static void GeyserTrap(int i, int j) {
@@ -2322,7 +_,7 @@
 			return false;
 		}
 
-		private static void DeActive(int i, int j) {
+		public static void DeActive(int i, int j) {
 			if (!Main.tile[i, j].active() || (Main.tile[i, j].type == 226 && (double)j > Main.worldSurface && !NPC.downedPlantBoss))
 				return;
 
@@ -2339,7 +_,7 @@
 			}
 		}
 
-		private static void ReActive(int i, int j) {
+		public static void ReActive(int i, int j) {
 			Main.tile[i, j].inActive(inActive: false);
 			WorldGen.SquareTileFrame(i, j, resetFrame: false);
 			if (Main.netMode != 1)
