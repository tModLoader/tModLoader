using GeneratorTest = tModLoader.SourceGenerators.Tests.tModLoaderSourceGeneratorVerifier<tModLoader.SourceGenerators.Tests.Adapter<tModLoader.SourceGenerators.NetPacketGeneratorv2>>.Test;

namespace tModLoader.SourceGenerators.Tests;

partial class NetPacketGeneratorv2Tests
{
	[Fact]
	public async Task BuiltinTypes()
	{
		const string CodeFile = @"
using System;
using System.Collections.Generic;
using Terraria;
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;
using Microsoft.Xna.Framework;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

public enum GeneratedEnum { }

[NetPacket(typeof(GeneratedMod))]
public unsafe ref partial struct GeneratedPacket {
	// Integers
	private sbyte _sbyte;
	private byte _byte;
	private short _short;
	private ushort _ushort;
	private int _int;
	private uint _uint;
	private long _long;
	private ulong _ulong;

	// Floating points
	private Half _half;
	private float _float;
	private double _double;
	private decimal _decimal;

	// String
	private char _char;
	private string _string;

	// Special Types
	private BitsByte _bitsbyte;
	private Vector2 _vector2;
	private GeneratedEnum _enum; // Any enum should work.

	// Those types don't have encoder (unless specified explicitly), so they cannot be serialized thus ignored.
	private object _object;
	private nint _nint;
	private nuint _nuint;
	[EncodedAs(typeof(ULongEncoder))]
	private int* _intptr;

	// Arrays
	private int[] _array;
	private List<int> _list;
	private Span<int> _span;
	private ReadOnlySpan<int> _rospan;

	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

ref partial struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder__sbyte = default(global::Terraria.ModLoader.Packets.SByteEncoder);
		encoder__sbyte.Write(writer, _sbyte);
		var encoder__byte = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder__byte.Write(writer, _byte);
		var encoder__short = default(global::Terraria.ModLoader.Packets.ShortEncoder);
		encoder__short.Write(writer, _short);
		var encoder__ushort = default(global::Terraria.ModLoader.Packets.UShortEncoder);
		encoder__ushort.Write(writer, _ushort);
		var encoder__int = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder__int.Write(writer, _int);
		var encoder__uint = default(global::Terraria.ModLoader.Packets.UIntEncoder);
		encoder__uint.Write(writer, _uint);
		var encoder__long = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder__long.Write(writer, _long);
		var encoder__ulong = default(global::Terraria.ModLoader.Packets.ULongEncoder);
		encoder__ulong.Write(writer, _ulong);
		var encoder__half = default(global::Terraria.ModLoader.Packets.HalfEncoder);
		encoder__half.Write(writer, _half);
		var encoder__float = default(global::Terraria.ModLoader.Packets.SingleEncoder);
		encoder__float.Write(writer, _float);
		var encoder__double = default(global::Terraria.ModLoader.Packets.DoubleEncoder);
		encoder__double.Write(writer, _double);
		var encoder__decimal = default(global::Terraria.ModLoader.Packets.DecimalEncoder);
		encoder__decimal.Write(writer, _decimal);
		var encoder__char = default(global::Terraria.ModLoader.Packets.CharEncoder);
		encoder__char.Write(writer, _char);
		var encoder__string = default(global::Terraria.ModLoader.Packets.StringEncoder);
		encoder__string.Write(writer, _string);
		var encoder__bitsbyte = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder__bitsbyte.Write(writer, _bitsbyte);
		var encoder__vector2 = default(global::Terraria.ModLoader.Packets.Vector2Encoder);
		encoder__vector2.Write(writer, _vector2);
		var encoder__enum = default(global::Terraria.ModLoader.Packets.EnumEncoder<global::GeneratedDemo.GeneratedEnum>);
		encoder__enum.Write(writer, _enum);
		unsafe {
			var encoder__intptr = default(global::Terraria.ModLoader.Packets.ULongEncoder);
			encoder__intptr.Write(writer, (ulong)_intptr);
		}
		var encoder__array = default(global::Terraria.ModLoader.Packets.ArrayEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder__array.Write(writer, _array);
		var encoder__list = default(global::Terraria.ModLoader.Packets.ListEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder__list.Write(writer, _list);
		var encoder__span = default(global::Terraria.ModLoader.Packets.SpanEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder__span.Write(writer, _span);
		var encoder__rospan = default(global::Terraria.ModLoader.Packets.ReadOnlySpanEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder__rospan.Write(writer, _rospan);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder__sbyte = default(global::Terraria.ModLoader.Packets.SByteEncoder);
		_sbyte = encoder__sbyte.Read(reader);
		var encoder__byte = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		_byte = encoder__byte.Read(reader);
		var encoder__short = default(global::Terraria.ModLoader.Packets.ShortEncoder);
		_short = encoder__short.Read(reader);
		var encoder__ushort = default(global::Terraria.ModLoader.Packets.UShortEncoder);
		_ushort = encoder__ushort.Read(reader);
		var encoder__int = default(global::Terraria.ModLoader.Packets.IntEncoder);
		_int = encoder__int.Read(reader);
		var encoder__uint = default(global::Terraria.ModLoader.Packets.UIntEncoder);
		_uint = encoder__uint.Read(reader);
		var encoder__long = default(global::Terraria.ModLoader.Packets.LongEncoder);
		_long = encoder__long.Read(reader);
		var encoder__ulong = default(global::Terraria.ModLoader.Packets.ULongEncoder);
		_ulong = encoder__ulong.Read(reader);
		var encoder__half = default(global::Terraria.ModLoader.Packets.HalfEncoder);
		_half = encoder__half.Read(reader);
		var encoder__float = default(global::Terraria.ModLoader.Packets.SingleEncoder);
		_float = encoder__float.Read(reader);
		var encoder__double = default(global::Terraria.ModLoader.Packets.DoubleEncoder);
		_double = encoder__double.Read(reader);
		var encoder__decimal = default(global::Terraria.ModLoader.Packets.DecimalEncoder);
		_decimal = encoder__decimal.Read(reader);
		var encoder__char = default(global::Terraria.ModLoader.Packets.CharEncoder);
		_char = encoder__char.Read(reader);
		var encoder__string = default(global::Terraria.ModLoader.Packets.StringEncoder);
		_string = encoder__string.Read(reader);
		var encoder__bitsbyte = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		_bitsbyte = encoder__bitsbyte.Read(reader);
		var encoder__vector2 = default(global::Terraria.ModLoader.Packets.Vector2Encoder);
		_vector2 = encoder__vector2.Read(reader);
		var encoder__enum = default(global::Terraria.ModLoader.Packets.EnumEncoder<global::GeneratedDemo.GeneratedEnum>);
		_enum = encoder__enum.Read(reader);
		unsafe {
			var encoder__intptr = default(global::Terraria.ModLoader.Packets.ULongEncoder);
			_intptr = (int*)encoder__intptr.Read(reader);
		}
		var encoder__array = default(global::Terraria.ModLoader.Packets.ArrayEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		_array = encoder__array.Read(reader);
		var encoder__list = default(global::Terraria.ModLoader.Packets.ListEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		_list = encoder__list.Read(reader);
		var encoder__span = default(global::Terraria.ModLoader.Packets.SpanEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		_span = encoder__span.Read(reader);
		var encoder__rospan = default(global::Terraria.ModLoader.Packets.ReadOnlySpanEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder>);
		_rospan = encoder__rospan.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}
}
