using GeneratorTest = tModLoader.SourceGenerators.Tests.tModLoaderSourceGeneratorVerifier<tModLoader.SourceGenerators.Tests.Adapter<tModLoader.SourceGenerators.NetPacketGeneratorv2>>.Test;

namespace tModLoader.SourceGenerators.Tests;

partial class NetPacketGeneratorv2Tests
{
	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial record struct GeneratedPacket(int Default, [property: Serialize] int Serialized, [property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(Int32Bit7Encoder))] int Default,
	[property: Serialize, EncodedAs(typeof(Int32Bit7Encoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(Int32Bit7Encoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByte()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(ByteEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(ByteEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(ByteEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Default.Write(writer, (byte)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLong()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(LongEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(LongEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(LongEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Default.Write(writer, (long)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7Global()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
[GloballyEncodedAs(typeof(int), typeof(Int32Bit7Encoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByteGlobal()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
[GloballyEncodedAs(typeof(int), typeof(ByteEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Default.Write(writer, (byte)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLongGlobal()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
[GloballyEncodedAs(typeof(int), typeof(LongEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Default.Write(writer, (long)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32AutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
public partial record struct GeneratedPacket(int Default, [property: Serialize] int Serialized, [property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7AutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(Int32Bit7Encoder))] int Default,
	[property: Serialize, EncodedAs(typeof(Int32Bit7Encoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(Int32Bit7Encoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByteAutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(ByteEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(ByteEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(ByteEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Default.Write(writer, (byte)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLongAutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(LongEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(LongEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(LongEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Default.Write(writer, (long)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7GlobalAutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
[GloballyEncodedAs(typeof(int), typeof(Int32Bit7Encoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByteGlobalAutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
[GloballyEncodedAs(typeof(int), typeof(ByteEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Default.Write(writer, (byte)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLongGlobalAutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
[GloballyEncodedAs(typeof(int), typeof(LongEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Default.Write(writer, (long)Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Default = (int)encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32AutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
public partial record struct GeneratedPacket(int Default, [property: Serialize] int Serialized, [property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7AutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(Int32Bit7Encoder))] int Default,
	[property: Serialize, EncodedAs(typeof(Int32Bit7Encoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(Int32Bit7Encoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByteAutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(ByteEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(ByteEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(ByteEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLongAutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
public partial record struct GeneratedPacket(
	[property: EncodedAs(typeof(LongEncoder))] int Default,
	[property: Serialize, EncodedAs(typeof(LongEncoder))] int Serialized,
	[property: Ignore, EncodedAs(typeof(LongEncoder))] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsIntBit7GlobalAutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
[GloballyEncodedAs(typeof(int), typeof(Int32Bit7Encoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.Int32Bit7Encoder);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsByteGlobalAutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
[GloballyEncodedAs(typeof(int), typeof(ByteEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		encoder_Serialized.Write(writer, (byte)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ByteEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task RecordStructPacketWithDefaultSerializedIgnoredInt32EncodedAsLongGlobalAutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
[GloballyEncodedAs(typeof(int), typeof(LongEncoder))]
public partial record struct GeneratedPacket(
	int Default,
	[property: Serialize] int Serialized,
	[property: Ignore] int Ignored) {
	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial record struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		encoder_Serialized.Write(writer, (long)Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.LongEncoder);
		Serialized = (int)encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}
}
