using GeneratorTest = tModLoader.SourceGenerators.Tests.tModLoaderSourceGeneratorVerifier<tModLoader.SourceGenerators.Tests.Adapter<tModLoader.SourceGenerators.NetPacketGeneratorv2>>.Test;

namespace tModLoader.SourceGenerators.Tests;

partial class NetPacketGeneratorv2Tests
{
	[Fact]
	public async Task StructPacketWithDefaultSerializedIgnoredValueTuple2()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial struct GeneratedPacket {
	public (int, int) Default;

	[Serialize]
	public (int, int) Serialized;

	[Ignore]
	public (int, int) Ignored;

	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task StructPacketWithDefaultSerializedIgnoredValueTuple2AutoSerializeOn()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = true)]
public partial struct GeneratedPacket {
	public (int, int) Default;

	[Serialize]
	public (int, int) Serialized;

	[Ignore]
	public (int, int) Ignored;

	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder_Default.Write(writer, Default);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Default = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		Default = encoder_Default.Read(reader);
		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task StructPacketWithDefaultSerializedIgnoredValueTuple2AutoSerializeOff()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod), AutoSerialize = false)]
public partial struct GeneratedPacket {
	public (int, int) Default;

	[Serialize]
	public (int, int) Serialized;

	[Ignore]
	public (int, int) Ignored;

	public readonly void HandlePacket() {
	}
}
";

		const string GeneratedFile = @"// <auto-generated/>
using System.IO;
using System.Runtime.CompilerServices;

namespace GeneratedDemo;

partial struct GeneratedPacket {
	[CompilerGenerated]
	private void Serialize(global::Terraria.ModLoader.ModPacket writer, int toClient, int ignoreClient) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		encoder_Serialized.Write(writer, Serialized);

	}

	[CompilerGenerated]
	private void Deserialize(BinaryReader reader, int sender) {

		var encoder_Serialized = default(global::Terraria.ModLoader.Packets.ValueTupleEncoder<int, global::Terraria.ModLoader.Packets.IntEncoder, int, global::Terraria.ModLoader.Packets.IntEncoder>);
		Serialized = encoder_Serialized.Read(reader);

	}
}
";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}
}
