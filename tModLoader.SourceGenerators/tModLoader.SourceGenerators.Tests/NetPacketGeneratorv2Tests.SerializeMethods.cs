using GeneratorTest = tModLoader.SourceGenerators.Tests.tModLoaderSourceGeneratorVerifier<tModLoader.SourceGenerators.Tests.Adapter<tModLoader.SourceGenerators.NetPacketGeneratorv2>>.Test;

namespace tModLoader.SourceGenerators.Tests;

partial class NetPacketGeneratorv2Tests
{
	[Fact]
	public async Task PreOnPostSerializeMethodsVoid()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;
using System.IO;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial struct GeneratedPacket {
	public const byte Id = GeneratedDemo.PacketRegistry.GeneratedPacketId;

	public int Field;

	public readonly void HandlePacket() {
	}

	private readonly void PreSerialize(BinaryWriter writer) { }
	private readonly void OnSerialize(BinaryWriter writer) { }
	private readonly void PostSerialize(BinaryWriter writer) { }
	private readonly void PreDeserialize(BinaryReader reader) { }
	private readonly void OnDeserialize(BinaryReader reader) { }
	private readonly void PostDeserialize(BinaryReader reader) { }

	private readonly void PreSerialize_Field(BinaryWriter writer) { }
	private readonly void OnSerialize_Field(BinaryWriter writer) { }
	private readonly void PostSerialize_Field(BinaryWriter writer) { }
	private readonly void PreDeserialize_Field(BinaryReader reader) { }
	private readonly void OnDeserialize_Field(BinaryReader reader) { }
	private readonly void PostDeserialize_Field(BinaryReader reader) { }

	public void HandleForAll() => throw new System.NotImplementedException();
}

[PacketRegistry]
static partial class PacketRegistry {
	[NetPacketIdOf(typeof(GeneratedPacket))]
	public const byte GeneratedPacketId = 0;
}
";

		const string GeneratedFile = @"// <auto-generated/>
#nullable disable
using System.IO;
using System.Runtime.CompilerServices;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;

namespace GeneratedDemo;

partial struct GeneratedPacket : global::Terraria.ModLoader.Packets.INetPacket {
	/// <inheritdoc cref=""global::Terraria.ModLoader.Packets.INetPacket.Send(int, int)""/>
	[CompilerGenerated]
	public void Send(int toClient = -1, int ignoreClient = -1) {
		var packet = ModContent.GetInstance<global::GeneratedDemo.GeneratedMod>().GetPacket();
		packet.Write(Id);

		PreSerialize(packet);
		OnSerialize(packet);
		PreSerialize_Field(packet);
		OnSerialize_Field(packet);
		var encoder_Field = default(global::Terraria.ModLoader.Packets.IntEncoder);
		encoder_Field.Write(packet, Field);
		PostSerialize_Field(packet);
		PostSerialize(packet);

		packet.Send(toClient, ignoreClient);
	}

	/// <inheritdoc cref=""global::Terraria.ModLoader.Packets.INetPacket.Receive(BinaryReader, int)""/>
	[CompilerGenerated]
	public void Receive(BinaryReader reader, int sender) {
		// SetDefaults();

		PreDeserialize(reader);
		OnDeserialize(reader);
		PreDeserialize_Field(reader);
		OnDeserialize_Field(reader);
		var encoder_Field = default(global::Terraria.ModLoader.Packets.IntEncoder);
		Field = encoder_Field.Read(reader);
		PostDeserialize_Field(reader);
		PostDeserialize(reader);

		if (Main.netMode == NetmodeID.Server) {
			Send(-1, sender);
		}
		HandlePacket();
	}
}

#nullable restore";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}

	[Fact]
	public async Task PreOnPostSerializeMethodsBool()
	{
		const string CodeFile = @"
using Terraria.ModLoader;
using Terraria.ModLoader.Packets;
using System.IO;

namespace GeneratedDemo;

public sealed class GeneratedMod : Mod {
}

[NetPacket(typeof(GeneratedMod))]
public partial struct GeneratedPacket {
	public const byte Id = GeneratedDemo.PacketRegistry.GeneratedPacketId;

	public int Field;

	public readonly void HandlePacket() {
	}

	private readonly bool PreSerialize(BinaryWriter writer) { return true; }
	private readonly void OnSerialize(BinaryWriter writer) { }
	private readonly void PostSerialize(BinaryWriter writer) { }
	private readonly bool PreDeserialize(BinaryReader reader) { return true; }
	private readonly void OnDeserialize(BinaryReader reader) { }
	private readonly void PostDeserialize(BinaryReader reader) { }

	private readonly bool PreSerialize_Field(BinaryWriter writer) { return true; }
	private readonly void OnSerialize_Field(BinaryWriter writer) { }
	private readonly void PostSerialize_Field(BinaryWriter writer) { }
	private readonly bool PreDeserialize_Field(BinaryReader reader) { return true; }
	private readonly void OnDeserialize_Field(BinaryReader reader) { }
	private readonly void PostDeserialize_Field(BinaryReader reader) { }

	public void HandleForAll() => throw new System.NotImplementedException();
}

[PacketRegistry]
static partial class PacketRegistry {
	[NetPacketIdOf(typeof(GeneratedPacket))]
	public const byte GeneratedPacketId = 0;
}
";

		const string GeneratedFile = @"// <auto-generated/>
#nullable disable
using System.IO;
using System.Runtime.CompilerServices;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;

namespace GeneratedDemo;

partial struct GeneratedPacket : global::Terraria.ModLoader.Packets.INetPacket {
	/// <inheritdoc cref=""global::Terraria.ModLoader.Packets.INetPacket.Send(int, int)""/>
	[CompilerGenerated]
	public void Send(int toClient = -1, int ignoreClient = -1) {
		var packet = ModContent.GetInstance<global::GeneratedDemo.GeneratedMod>().GetPacket();
		packet.Write(Id);

		if (PreSerialize(packet)) {
			OnSerialize(packet);
			if (PreSerialize_Field(packet)) {
				OnSerialize_Field(packet);
				var encoder_Field = default(global::Terraria.ModLoader.Packets.IntEncoder);
				encoder_Field.Write(packet, Field);
			}
			PostSerialize_Field(packet);
		}
		PostSerialize(packet);

		packet.Send(toClient, ignoreClient);
	}

	/// <inheritdoc cref=""global::Terraria.ModLoader.Packets.INetPacket.Receive(BinaryReader, int)""/>
	[CompilerGenerated]
	public void Receive(BinaryReader reader, int sender) {
		// SetDefaults();

		if (PreDeserialize(reader)) {
			OnDeserialize(reader);
			if (PreDeserialize_Field(reader)) {
				OnDeserialize_Field(reader);
				var encoder_Field = default(global::Terraria.ModLoader.Packets.IntEncoder);
				Field = encoder_Field.Read(reader);
			}
			PostDeserialize_Field(reader);
		}
		PostDeserialize(reader);

		if (Main.netMode == NetmodeID.Server) {
			Send(-1, sender);
		}
		HandlePacket();
	}
}

#nullable restore";

		await new GeneratorTest {
			TestState = {
				Sources = { CodeFile },
				GeneratedSources = {
					(typeof(Adapter<NetPacketGeneratorv2>), "GeneratedDemo.GeneratedPacket.g.cs", GeneratedFile),
				},
			},
		}.RunAsync();
	}
}
